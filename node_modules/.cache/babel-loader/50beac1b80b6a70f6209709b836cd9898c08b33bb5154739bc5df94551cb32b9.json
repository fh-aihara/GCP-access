{"ast":null,"code":"import axios from \"axios\";\nimport mock from \"./mock/api\";\nexport var client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\"\n});\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\nexport default {\n  /**\n   * Todoリスト取得API\n   * 結果はPromiseを返してハンドリングする\n   * @param {Object} params パラメータ\n   */\n  getAccounts: function getAccounts(params) {\n    return client.get(\"/accounts\", params);\n  },\n  getAccount: function getAccount(params) {\n    return client.get(\"/accounts?\" + params.id);\n  },\n  createAccount: function createAccount(params) {\n    return client.post(\"/accounts\", params);\n  },\n  getOrganizers: function getOrganizers(params) {\n    return client.get(\"/organizers\", params);\n  },\n  createOrganizer: function createOrganizer(params) {\n    console.log(params);\n    return client.post(\"/organizers\", params);\n  },\n  getCampaigns: function getCampaigns(params) {\n    return client.get(\"/campaigns\", params);\n  },\n  createCampaign: function createCampaign(params) {\n    return client.post(\"/campaigns\", params);\n  }\n};","map":{"version":3,"names":["axios","mock","client","create","baseURL","JSON","parse","process","env","VUE_APP_USE_MOCK","run","getAccounts","params","get","getAccount","id","createAccount","post","getOrganizers","createOrganizer","console","log","getCampaigns","createCampaign"],"sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\nimport mock from \"./mock/api\";\n\nexport const client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\",\n});\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\n\nexport default {\n  /**\n   * Todoリスト取得API\n   * 結果はPromiseを返してハンドリングする\n   * @param {Object} params パラメータ\n   */\n  getAccounts(params) {\n    return client.get(\"/accounts\", params);\n  },\n  getAccount(params) {\n    return client.get(\"/accounts?\" + params.id);\n  },\n  createAccount(params) {\n    return client.post(\"/accounts\", params);\n  },\n  getOrganizers(params) {\n    return client.get(\"/organizers\", params);\n  },\n  createOrganizer(params) {\n    console.log(params);\n    return client.post(\"/organizers\", params);\n  },\n  getCampaigns(params) {\n    return client.get(\"/campaigns\", params);\n  },\n  createCampaign(params) {\n    return client.post(\"/campaigns\", params);\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAE7B,OAAO,IAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,IAAIC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC,EAAE;EAC5CR,IAAI,CAACS,GAAG,CAACR,MAAM,CAAC;AAClB;AAEA,eAAe;EACb;AACF;AACA;AACA;AACA;EACES,WAAW,uBAACC,MAAM,EAAE;IAClB,OAAOV,MAAM,CAACW,GAAG,CAAC,WAAW,EAAED,MAAM,CAAC;EACxC,CAAC;EACDE,UAAU,sBAACF,MAAM,EAAE;IACjB,OAAOV,MAAM,CAACW,GAAG,CAAC,YAAY,GAAGD,MAAM,CAACG,EAAE,CAAC;EAC7C,CAAC;EACDC,aAAa,yBAACJ,MAAM,EAAE;IACpB,OAAOV,MAAM,CAACe,IAAI,CAAC,WAAW,EAAEL,MAAM,CAAC;EACzC,CAAC;EACDM,aAAa,yBAACN,MAAM,EAAE;IACpB,OAAOV,MAAM,CAACW,GAAG,CAAC,aAAa,EAAED,MAAM,CAAC;EAC1C,CAAC;EACDO,eAAe,2BAACP,MAAM,EAAE;IACtBQ,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACnB,OAAOV,MAAM,CAACe,IAAI,CAAC,aAAa,EAAEL,MAAM,CAAC;EAC3C,CAAC;EACDU,YAAY,wBAACV,MAAM,EAAE;IACnB,OAAOV,MAAM,CAACW,GAAG,CAAC,YAAY,EAAED,MAAM,CAAC;EACzC,CAAC;EACDW,cAAc,0BAACX,MAAM,EAAE;IACrB,OAAOV,MAAM,CAACe,IAAI,CAAC,YAAY,EAAEL,MAAM,CAAC;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}