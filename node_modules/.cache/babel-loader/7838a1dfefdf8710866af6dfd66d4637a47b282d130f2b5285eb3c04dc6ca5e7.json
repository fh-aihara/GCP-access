{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"input\", {\n    onChange: _cache[0] || (_cache[0] = function () {\n      return $options.selectedFile && $options.selectedFile.apply($options, arguments);\n    }),\n    type: \"file\",\n    name: \"file\"\n  }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.upload && $options.upload.apply($options, arguments);\n    }),\n    type: \"submit\"\n  }, \"アップロード\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DACEA,oBAAwD;IAAhDC,QAAM;MAAA,OAAEC,yEAAY;IAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC;qCAC/CJ,oBAAqD;IAA5CK,OAAK;MAAA,OAAEH,6DAAM;IAAA;IAAEC,IAAI,EAAC;KAAS,QAAM","names":["_createElementVNode","onChange","$options","type","name","onClick"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignPageCreate.vue"],"sourcesContent":["<template>\n  <input @change=\"selectedFile\" type=\"file\" name=\"file\" />\n  <button @click=\"upload\" type=\"submit\">アップロード</button>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data: function () {\n    return {\n      uploadFile: null,\n    };\n  },\n  methods: {\n    selectedFile: function (e) {\n      // 選択された File の情報を保存しておく\n      e.preventDefault();\n      let files = e.target.files;\n      this.uploadFile = files[0];\n    },\n    upload: function () {\n      // FormData を利用して File を POST する\n      let formData = new FormData();\n      formData.append(\"yourFileKey\", this.uploadFile);\n      let config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      axios\n        .post(\"http://localhost:8000/api/v1/upload\", formData, config)\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}