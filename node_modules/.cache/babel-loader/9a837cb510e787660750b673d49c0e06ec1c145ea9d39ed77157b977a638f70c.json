{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"KyCheck\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"flex justify-between items-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \"申請者情報\")], -1 /* HOISTED */);\nvar _hoisted_3 = {\n  \"class\": \"flex justify-between items-center\"\n};\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \"生年月日：\", -1 /* HOISTED */);\nvar _hoisted_5 = {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SideVar = _resolveComponent(\"SideVar\");\n  var _component_PageTitle = _resolveComponent(\"PageTitle\");\n  var _component_RightColumnOutline = _resolveComponent(\"RightColumnOutline\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <input @change=\\\"selectedFile\\\" type=\\\"file\\\" name=\\\"file\\\" />\\n  <button @click=\\\"upload\\\" type=\\\"submit\\\">アップロード</button> \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createCommentVNode(\" side var  \"), _createVNode(_component_SideVar), _createCommentVNode(\" input panel \"), _createVNode(_component_RightColumnOutline, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_PageTitle, null, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(\"KYC審査\")];\n        }),\n        _: 1 /* STABLE */\n      }), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.birthday), 1 /* TEXT */)])];\n    }),\n\n    _: 1 /* STABLE */\n  })])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAGO,SAAM;AAAS;8BAOdA,oBAEM;EAFD,SAAM;AAAmC,iBAC5CA,oBAA0D;EAArD,SAAM;AAAmC,GAAC,OAAK;;EAEjD,SAAM;AAAmC;8BAC5CA,oBAA0D;EAArD,SAAM;AAAmC,GAAC,OAAK;;EAC/C,SAAM;AAAmC;;;;;6DAdtDC,oJACyD,EACzDD,oBAgBM,OAhBNE,UAgBM,GAfJF,oBAcM,cAbJC,kCAAkB,EAClBE,aAAWC,qBACXH,oCAAoB,EACpBE,aASqBE;wBARnB;MAAA,OAA4B,CAA5BF,aAA4BG;4BAAjB;UAAA,OAAK,kBAAL,OAAK;;;UAChBC,UAEM,EACNP,oBAGM,OAHNQ,UAGM,GAFJC,UAA0D,EAC1DT,oBAAmE,OAAnEU,UAAmE,mBAAjBC,aAAQ","names":["_createElementVNode","_createCommentVNode","_hoisted_1","_createVNode","_component_SideVar","_component_RightColumnOutline","_component_PageTitle","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_ctx"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/KycCheck.vue"],"sourcesContent":["<template>\n  <!-- <input @change=\"selectedFile\" type=\"file\" name=\"file\" />\n  <button @click=\"upload\" type=\"submit\">アップロード</button> -->\n  <div class=\"KyCheck\">\n    <div>\n      <!-- side var  -->\n      <SideVar />\n      <!-- input panel -->\n      <RightColumnOutline>\n        <PageTitle>KYC審査</PageTitle>\n        <div class=\"flex justify-between items-center\">\n          <div class=\"text-white text-left ml-4 text-sm\">申請者情報</div>\n        </div>\n        <div class=\"flex justify-between items-center\">\n          <div class=\"text-white text-left ml-4 text-sm\">生年月日：</div>\n          <div class=\"text-white text-left ml-4 text-sm\">{{ birthday }}</div>\n        </div>\n      </RightColumnOutline>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api\";\nexport default {\n  data: function () {\n    return {\n      campaign_id: 0,\n      headerPic: null,\n      headerPreview: null,\n      headerPicUrl: null, // S3 load用\n      winPic: null,\n      winPreview: null,\n      winText: null,\n      winPicUrl: null, // S3 load用\n      losePic: null,\n      losePreview: null,\n      loseText: null,\n      losePicUrl: null, // S3 load用\n      regist_loading: false,\n      serviceSiteURL: \"\",\n    };\n  },\n  components: {\n    SideVar,\n  },\n  mounted() {\n    // this.campaign_id = this.$route.params.id;\n    // this.getInstantwin();\n  },\n  computed: {\n    btnclass() {\n      let return_class = \"\";\n      let header = this.headerPic || this.headerPicUrl;\n      let win = this.winPic || this.winPicUrl;\n      let lose = this.losePic || this.losePicUrl;\n      if (\n        header &&\n        win &&\n        this.winText &&\n        lose &&\n        this.loseText &&\n        !this.regist_loading\n      ) {\n        return_class = \"text-blue-50 bg-blue-500 hover:bg-blue-600\";\n      } else {\n        return_class = \"text-gray-300 bg-gray-700 hover:bg-gray-800\";\n      }\n      return return_class;\n    },\n  },\n  methods: {\n    getInstantwin: function () {\n      api\n        .getInstantWin({ campaign_id: this.$route.params.id })\n        .then((response) => {\n          this.winText = response.data[0].win_text;\n          this.loseText = response.data[0].lose_text;\n          this.headerPicUrl = response.data[0].header_pic;\n          this.winPicUrl = response.data[0].win_pic;\n          this.losePicUrl = response.data[0].lose_pic;\n          this.serviceSiteURL = response.data[0].landing_page_url;\n        })\n        .catch(function (error) {\n          this.$toast.show(\"キャンペーンデータの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          console.log(error);\n        });\n    },\n    selectedHeader: function (e) {\n      e.preventDefault();\n      let files = e.target.files;\n      this.headerPic = files[0];\n      this.createHeader(files[0]);\n    },\n    selectedWin: function (e) {\n      e.preventDefault();\n      let files = e.target.files;\n      this.winPic = files[0];\n      this.createWin(files[0]);\n    },\n    selectedLose: function (e) {\n      e.preventDefault();\n      let files = e.target.files;\n      this.losePic = files[0];\n      this.createLose(files[0]);\n    },\n    createHeader(file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.headerPreview = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    removeHeader() {\n      this.headerPreview = false;\n    },\n    createWin(file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.winPreview = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    removeWin() {\n      this.winPreview = false;\n    },\n    createLose(file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.losePreview = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    removeLose() {\n      this.losePreview = false;\n    },\n    postPics: async function () {\n      this.regist_loading = true;\n      let config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      let header = new FormData();\n      header.append(\"file\", this.headerPic);\n      let win = new FormData();\n      win.append(\"file\", this.winPic);\n      let lose = new FormData();\n      lose.append(\"file\", this.losePic);\n      // 順次アップロード判断＋アップロード\n      if (this.serviceSiteURL) {\n        await api\n          .updateInstantWin({\n            campaign_id: this.$route.params.id,\n            landing_page_url: this.serviceSiteURL,\n          })\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            this.$toast.show(\"サービスサイトURLの登録に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(error);\n            this.regist_loading = false;\n          });\n      }\n      if (this.headerPic) {\n        await api\n          .uploadHeader(\n            { campaign_id: this.$route.params.id, form: header },\n            config\n          )\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            this.$toast.show(\"ヘッダー画像の登録に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(error);\n            this.regist_loading = false;\n          });\n      }\n      if (this.winPic) {\n        await api\n          .uploadWin({ campaign_id: this.$route.params.id, form: win }, config)\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            this.$toast.show(\"当選画像の登録に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(error);\n            this.regist_loading = false;\n          });\n      }\n      if (this.losePic) {\n        await api\n          .uploadLose(\n            { campaign_id: this.$route.params.id, form: lose },\n            config\n          )\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            this.$toast.show(\"落選画像の登録に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(error);\n            this.regist_loading = false;\n          });\n      }\n      await api\n        .updateInstantWin(\n          {\n            campaign_id: this.$route.params.id,\n            win_text: this.winText,\n            lose_text: this.loseText,\n          },\n          config\n        )\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          this.$toast.show(\"テキストの登録に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          console.log(error);\n          this.regist_loading = true;\n        });\n      this.regist_loading = false;\n      this.$toast.show(\"画像・テキストの登録が完了しました\", {\n        type: \"success\",\n        position: \"top-right\",\n        duration: 3000,\n      });\n      this.$router.replace(\"/campaigns\");\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}