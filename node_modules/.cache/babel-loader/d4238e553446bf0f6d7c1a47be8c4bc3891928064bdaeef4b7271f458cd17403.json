{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\n// import { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    SideVar: SideVar,\n    apexchart: VueApexCharts,\n    Datepicker: Datepicker\n  },\n  // setup() {\n  //   let date = ref();\n  //   onMounted(() => {\n  //     const today = new Date();\n  //     let startDate = new Date(new Date().setDate(today.getDate() + 3));\n  //     startDate.setHours(21, 0, 0, 0);\n  //     let endDate = new Date(new Date().setDate(startDate.getDate() + 7));\n  //     endDate.setHours(21, 0, 0, 0);\n  //     date.value = [startDate, endDate];\n  //   });\n  //   return {\n  //     date,\n  //   };\n  // },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var route;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            route = useRoute();\n            _context.next = 3;\n            return api.getdailyTweetCount({\n              campaign_id: route.params.id\n            }).then(function (response) {\n              var tmp_options = _this.dailycountOptions;\n              tmp_options[\"xaxis\"][\"categories\"] = response[\"data\"][\"categories\"];\n              _this.dailycountOptions = tmp_options;\n              _this.dailycountSeries[0][\"name\"] = response[\"data\"][\"name\"][0];\n              _this.dailycountSeries[0][\"data\"] = response[\"data\"][\"data\"][0];\n              _this.dailycountSeries[1][\"name\"] = response[\"data\"][\"name\"][1];\n              _this.dailycountSeries[1][\"data\"] = response[\"data\"][\"data\"][1];\n            })[\"catch\"](function (error) {\n              console.log(\"error: \", error);\n            });\n          case 3:\n            _context.next = 5;\n            return api.getScore({\n              campaign_id: route.params.id\n            }).then(function (response) {\n              _this.scoreSeries = response[\"data\"][\"series\"];\n              _this.scoreOptions.labels = response[\"data\"][\"labels\"];\n            })[\"catch\"](function (error) {\n              console.log(\"error: \", error);\n            });\n          case 5:\n            _context.next = 7;\n            return api.getCampaign({\n              campaign_id: route.params.id\n            }).then(function (response) {\n              _this.campaign = response[\"data\"];\n              var start_date = new Date(_this.campaign[\"start_time\"]);\n              start_date.setHours(start_date.getHours() + 9); // 日本時間に変更\n              var end_date = new Date(_this.campaign[\"end_time\"]);\n              end_date.setHours(end_date.getHours() + 9); // 日本時間に変更\n              _this.date.value = [start_date, end_date];\n            })[\"catch\"](function (error) {\n              console.log(\"error: \", error);\n            });\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      campaign: null,\n      date: null,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\"\n        },\n        xaxis: {\n          // type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        }\n      },\n      dailycountSeries: [{\n        name: \"\",\n        data: []\n      }, {\n        name: \"\",\n        data: []\n      }],\n      scoreOptions: {\n        labels: []\n      },\n      scoreSeries: []\n    };\n  },\n  computed: {},\n  methods: {\n    downlordranking: function downlordranking() {\n      var csv = \"\\uFEFF\";\n      api.getRanking({\n        campaign_id: this.$route.params.id,\n        start: this.date[0],\n        end: this.date[1]\n      }).then(function (response) {\n        csv += response[\"data\"];\n        var blob = new Blob([csv], {\n          type: \"text/csv\"\n        });\n        var link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(blob);\n        link.download = \"test_campaign.csv\";\n        link.click();\n      })[\"catch\"](function (error) {\n        console.log(\"error: \", error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["SideVar","api","useRoute","VueApexCharts","Datepicker","name","components","apexchart","mounted","route","getdailyTweetCount","campaign_id","params","id","then","response","tmp_options","dailycountOptions","dailycountSeries","error","console","log","getScore","scoreSeries","scoreOptions","labels","getCampaign","campaign","start_date","Date","setHours","getHours","end_date","date","value","data","campaign_name","keyword","chart","xaxis","categories","style","colors","legend","show","computed","methods","downlordranking","csv","getRanking","$route","start","end","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","click"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignAnalitics.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <div>\n      <!-- side var  -->\n      <SideVar />\n      <!-- campaign list -->\n      <div class=\"mx-auto lg:ml-80\">\n        <section class=\"py-3\">\n          <div class=\"container px-4 mx-auto\">\n            <div class=\"pt-6 pb-8 bg-gray-500 rounded-xl\">\n              <div class=\"px-6\">\n                <h4 class=\"text-lg text-gray-100 font-semibold mb-6\">\n                  CAMPAIGN ANALIZE\n                </h4>\n                <div class=\"text-left\">\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-12\">\n                    Daily data\n                  </p>\n                  <div>\n                    <apexchart\n                      width=\"600\"\n                      height=\"300\"\n                      type=\"bar\"\n                      :options=\"dailycountOptions\"\n                      :series=\"dailycountSeries\"\n                    ></apexchart>\n                  </div>\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-6\">\n                    Score distribution(top 20)\n                  </p>\n                  <div>\n                    <apexchart\n                      width=\"600\"\n                      height=\"400\"\n                      type=\"donut\"\n                      :options=\"scoreOptions\"\n                      :series=\"scoreSeries\"\n                    ></apexchart>\n                  </div>\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-6\">\n                    Ranking\n                  </p>\n                  <div>\n                    <Datepicker v-model=\"date\" range />\n                    <button @click=\"downlordranking\">koko</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\n// import { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    SideVar,\n    apexchart: VueApexCharts,\n    Datepicker,\n  },\n  // setup() {\n  //   let date = ref();\n  //   onMounted(() => {\n  //     const today = new Date();\n  //     let startDate = new Date(new Date().setDate(today.getDate() + 3));\n  //     startDate.setHours(21, 0, 0, 0);\n  //     let endDate = new Date(new Date().setDate(startDate.getDate() + 7));\n  //     endDate.setHours(21, 0, 0, 0);\n  //     date.value = [startDate, endDate];\n  //   });\n  //   return {\n  //     date,\n  //   };\n  // },\n  async mounted() {\n    const route = useRoute();\n    await api\n      .getdailyTweetCount({ campaign_id: route.params.id })\n      .then((response) => {\n        let tmp_options = this.dailycountOptions;\n        tmp_options[\"xaxis\"][\"categories\"] = response[\"data\"][\"categories\"];\n        this.dailycountOptions = tmp_options;\n        this.dailycountSeries[0][\"name\"] = response[\"data\"][\"name\"][0];\n        this.dailycountSeries[0][\"data\"] = response[\"data\"][\"data\"][0];\n        this.dailycountSeries[1][\"name\"] = response[\"data\"][\"name\"][1];\n        this.dailycountSeries[1][\"data\"] = response[\"data\"][\"data\"][1];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n    await api\n      .getScore({ campaign_id: route.params.id })\n      .then((response) => {\n        this.scoreSeries = response[\"data\"][\"series\"];\n        this.scoreOptions.labels = response[\"data\"][\"labels\"];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n    await api\n      .getCampaign({ campaign_id: route.params.id })\n      .then((response) => {\n        this.campaign = response[\"data\"];\n        let start_date = new Date(this.campaign[\"start_time\"]);\n        start_date.setHours(start_date.getHours() + 9); // 日本時間に変更\n        let end_date = new Date(this.campaign[\"end_time\"]);\n        end_date.setHours(end_date.getHours() + 9); // 日本時間に変更\n        this.date.value = [start_date, end_date];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n  },\n  data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      campaign: null,\n      date: null,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n        },\n        xaxis: {\n          // type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n      },\n      dailycountSeries: [\n        {\n          name: \"\",\n          data: [],\n        },\n        {\n          name: \"\",\n          data: [],\n        },\n      ],\n      scoreOptions: {\n        labels: [],\n      },\n      scoreSeries: [],\n    };\n  },\n  computed: {},\n  methods: {\n    downlordranking() {\n      let csv = \"\\ufeff\";\n      api\n        .getRanking({\n          campaign_id: this.$route.params.id,\n          start: this.date[0],\n          end: this.date[1],\n        })\n        .then((response) => {\n          csv += response[\"data\"];\n          let blob = new Blob([csv], { type: \"text/csv\" });\n          let link = document.createElement(\"a\");\n          link.href = window.URL.createObjectURL(blob);\n          link.download = \"test_campaign.csv\";\n          link.click();\n        })\n        .catch((error) => {\n          console.log(\"error: \", error);\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}