{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { computed, ref } from \"vue\";\nimport BaseButton from \"./BaseButton.vue\";\nexport default {\n  name: \"DoButton\",\n  components: {\n    BaseButton: BaseButton\n  },\n  props: {\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    clickFunction: {\n      type: Function\n    },\n    values: {\n      type: Object,\n      \"default\": null\n    }\n  },\n  emits: {\n    click: null\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var isLoading = ref(true);\n    var handleClick = function handleClick() {\n      isLoading = true;\n      props.clickFunction(props.values);\n      emit(\"click\");\n    };\n    var buttonClass = computed(function () {\n      return props.disabled || isLoading.value ? \"text-blue-50 bg-blue-500 hover:bg-blue-600\" : \"text-gray-300 bg-gray-700 hover:bg-gray-800\";\n    });\n    return {\n      handleClick: handleClick,\n      buttonClass: buttonClass,\n      isLoading: isLoading\n    };\n  }\n};","map":{"version":3,"mappings":";;AAWA,SAASA,QAAQ,EAAEC,GAAE,QAAS,KAAK;AACnC,OAAOC,UAAS,MAAO,kBAAkB;AAEzC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVF,UAAU,EAAVA;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,OAAO;MACb,WAAS;IACX,CAAC;IACDC,aAAa,EAAE;MACbF,IAAI,EAAEG;IACR,CAAC;IACDC,MAAM,EAAE;MACNJ,IAAI,EAAEK,MAAM;MACZ,WAAS;IACX;EACF,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,KAAK,iBAACV,KAAK,QAAY;IAAA,IAARW,IAAG,QAAHA,IAAG;IAChB,IAAIC,SAAQ,GAAIhB,GAAG,CAAC,IAAI,CAAC;IACzB,IAAMiB,WAAU,GAAI,SAAdA,WAAU,GAAU;MACxBD,SAAQ,GAAI,IAAI;MAChBZ,KAAK,CAACI,aAAa,CAACJ,KAAK,CAACM,MAAM,CAAC;MACjCK,IAAI,CAAC,OAAO,CAAC;IACf,CAAC;IAED,IAAMG,WAAU,GAAInB,QAAQ,CAAC;MAAA,OAC3BK,KAAK,CAACC,QAAO,IAAKW,SAAS,CAACG,KAAI,GAC5B,4CAA2C,GAC3C,6CAA4C;IAAA,EACjD;IAED,OAAO;MACLF,WAAW,EAAXA,WAAW;MACXC,WAAW,EAAXA,WAAW;MACXF,SAAS,EAATA;IACF,CAAC;EACH;AACF,CAAC","names":["computed","ref","BaseButton","name","components","props","disabled","type","Boolean","clickFunction","Function","values","Object","emits","click","setup","emit","isLoading","handleClick","buttonClass","value"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/components/buttons/DoButton.vue"],"sourcesContent":["<template>\n  <BaseButton\n    :disabled=\"disabled || isLoading\"\n    :class=\"buttonClass\"\n    @click=\"handleClick\"\n  >\n    <i class=\"pi pi-spin pi-spinner text-xs px-1\" v-if=\"isLoading\" /><slot />\n  </BaseButton>\n</template>\n\n<script>\nimport { computed, ref } from \"vue\";\nimport BaseButton from \"./BaseButton.vue\";\n\nexport default {\n  name: \"DoButton\",\n  components: {\n    BaseButton,\n  },\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    clickFunction: {\n      type: Function,\n    },\n    values: {\n      type: Object,\n      default: null,\n    },\n  },\n  emits: {\n    click: null,\n  },\n  setup(props, { emit }) {\n    let isLoading = ref(true);\n    const handleClick = () => {\n      isLoading = true;\n      props.clickFunction(props.values);\n      emit(\"click\");\n    };\n\n    const buttonClass = computed(() =>\n      props.disabled || isLoading.value\n        ? \"text-blue-50 bg-blue-500 hover:bg-blue-600\"\n        : \"text-gray-300 bg-gray-700 hover:bg-gray-800\"\n    );\n\n    return {\n      handleClick,\n      buttonClass,\n      isLoading,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}