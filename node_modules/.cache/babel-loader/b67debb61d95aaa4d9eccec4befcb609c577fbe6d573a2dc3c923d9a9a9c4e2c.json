{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport api from \"../api/api.js\";\n// import { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport RankingPanel from \"../components/layout/RankingComponent.vue\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts,\n    RankingPanel: RankingPanel,\n    Datepicker: Datepicker\n  },\n  setup: function setup() {\n    var date = ref();\n    onMounted(function () {\n      // 日付の最小〜最大を計算する処理\n      var today = new Date();\n      var toDate = new Date(new Date().setDate(today.getDate()));\n      var fromDate = new Date(new Date().setDate(toDate.getDate() - 30));\n      date.value = [fromDate, toDate];\n    });\n    return {\n      date: date\n    };\n  },\n  mounted: function mounted() {\n    this.show_flag = true;\n    this.getDiscordSummary();\n  },\n  data: function data() {\n    return {\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      show_flag: false,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\"\n        },\n        title: {\n          text: \"\",\n          align: \"left\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false\n            }\n          },\n          yaxis: {\n            lines: {\n              show: false\n            }\n          }\n        }\n      },\n      dailycountSeries: []\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordSummary: function getDiscordSummary() {\n      var _this = this;\n      api.getDiscordSummary().then(function (response) {\n        console.log(response);\n        _this.dailycountOptions.xaxis.categories = response[\"data\"][\"categories\"];\n        for (var i = 0; i < response[\"data\"][\"name\"].length; i++) {\n          _this.dailycountSeries.push({\n            name: response[\"data\"][\"name\"][i],\n            data: response[\"data\"][\"data\"][i]\n          });\n        }\n      })[\"catch\"](function () {\n        _this.$toast.show(\"分析データの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["api","VueApexCharts","RankingPanel","Datepicker","ref","onMounted","name","components","apexchart","setup","date","today","Date","toDate","setDate","getDate","fromDate","value","mounted","show_flag","getDiscordSummary","data","chart_height","window","innerHeight","chart_width","innerWidth","dailycountOptions","chart","id","type","title","text","align","dataLabels","enabled","xaxis","categories","labels","style","colors","yaxis","legend","show","grid","lines","dailycountSeries","computed","methods","then","response","console","log","i","length","push","$toast","position","duration"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/DiscordSummary.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Discord Summary</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          コミュニティの状況を確認しましょう\n        </div>\n        <div class=\"text-xs text-white flex items-center w-auto\">\n          <div class=\"mr-4\">表示期間</div>\n          <div v-if=\"show_flag\" class=\"w-64\">\n            <Datepicker\n              v-model=\"date\"\n              range\n              :format=\"yyyy / MM / dd\"\n              :enable-time-picker=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"px-4\">\n        <div class=\"text-left grid grid-cols-3 mt-3\">\n          <div v-for=\"dailycount in dailycountSeries\" :key=\"dailycount\">\n            <p class=\"text-lg text-gray-200 font-semibold mb-3 mt-3\">\n              {{ dailycount[\"name\"] }}\n            </p>\n            <div v-if=\"dailycountOptions.xaxis.categories.length > 0\">\n              <div\n                v-if=\"\n                  dailycount['name'] == '被メンションランカー' ||\n                  dailycount['name'] == 'メンションランカー' ||\n                  dailycount['name'] == 'リアクションランカー'\n                \"\n              >\n                <div>\n                  <RankingPanel\n                    :panelClass=\"''\"\n                    :ranking=\"dailycount['data']\"\n                  ></RankingPanel>\n                </div>\n              </div>\n              <div v-else>\n                <apexchart\n                  :width=\"full\"\n                  :height=\"chart_height\"\n                  :title=\"dailycount.name\"\n                  :options=\"dailycountOptions\"\n                  :series=\"[dailycount]\"\n                ></apexchart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\n// import { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport RankingPanel from \"../components/layout/RankingComponent.vue\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts,\n    RankingPanel,\n    Datepicker,\n  },\n  setup() {\n    let date = ref();\n    onMounted(() => {\n      // 日付の最小〜最大を計算する処理\n      const today = new Date();\n      let toDate = new Date(new Date().setDate(today.getDate()));\n      let fromDate = new Date(new Date().setDate(toDate.getDate() - 30));\n      date.value = [fromDate, toDate];\n    });\n    return {\n      date,\n    };\n  },\n  mounted() {\n    this.show_flag = true;\n    this.getDiscordSummary();\n  },\n  data() {\n    return {\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      show_flag: false,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\",\n        },\n        title: {\n          text: \"\",\n          align: \"left\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false,\n            },\n          },\n          yaxis: {\n            lines: {\n              show: false,\n            },\n          },\n        },\n      },\n      dailycountSeries: [],\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordSummary() {\n      api\n        .getDiscordSummary()\n        .then((response) => {\n          console.log(response);\n          this.dailycountOptions.xaxis.categories =\n            response[\"data\"][\"categories\"];\n          for (let i = 0; i < response[\"data\"][\"name\"].length; i++) {\n            this.dailycountSeries.push({\n              name: response[\"data\"][\"name\"][i],\n              data: response[\"data\"][\"data\"][i],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"分析データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}