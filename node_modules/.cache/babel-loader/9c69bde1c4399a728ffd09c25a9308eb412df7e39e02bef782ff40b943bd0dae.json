{"ast":null,"code":"import SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport BarChart from \"../components/Bar-chart.vue\";\nimport LineChart from \"./LineChart.js\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    SideVar: SideVar,\n    BarChart: BarChart,\n    LineChart: LineChart\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.fillData();\n    var route = useRoute();\n    api.getdailyTweetCount({\n      campaign_id: route.params.id\n    }).then(function (response) {\n      _this.dailyCount = response;\n    })[\"catch\"](function (error) {\n      console.log(\"error: \", error);\n    });\n  },\n  data: function data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      dailyCount: null,\n      chart_options: null,\n      loaded: true,\n      data: {\n        datacollection: null,\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [{\n          label: \"Bar Dataset\",\n          data: [10, 20, 30, 40, 50, 30],\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }, {\n          label: \"Line Dataset\",\n          data: [10, 50, 20, 30, 30, 40],\n          borderColor: \"#CFD8DC\",\n          fill: false,\n          type: \"line\",\n          lineTension: 0.3\n        }]\n      },\n      options: {\n        scales: {\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"Month\"\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 10\n            }\n          }]\n        }\n      }\n    };\n  },\n  computed: {},\n  methods: {\n    fillData: function fillData() {\n      this.datacollection = {\n        labels: [this.getRandomInt(), this.getRandomInt()],\n        datasets: [{\n          label: \"Data One\",\n          backgroundColor: \"#f87979\",\n          data: [this.getRandomInt(), this.getRandomInt()]\n        }, {\n          label: \"Data One\",\n          backgroundColor: \"#f87979\",\n          data: [this.getRandomInt(), this.getRandomInt()]\n        }]\n      };\n    },\n    getRandomInt: function getRandomInt() {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["SideVar","api","useRoute","BarChart","LineChart","name","components","mounted","fillData","route","getdailyTweetCount","campaign_id","params","id","then","response","dailyCount","error","console","log","data","campaign_name","keyword","chart_options","loaded","datacollection","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","type","lineTension","options","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","beginAtZero","stepSize","computed","methods","getRandomInt","Math","floor","random"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignAnalitics.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <div>\n      <!-- side var  -->\n      <SideVar />\n      <!-- campaign list -->\n      <div class=\"mx-auto lg:ml-80\">\n        <section class=\"py-3\">\n          <div class=\"container px-4 mx-auto\">\n            <div class=\"pt-6 pb-8 bg-gray-500 rounded-xl\">\n              <div class=\"px-6\">\n                <h4 class=\"text-lg text-gray-100 font-semibold mb-6\">\n                  CAMPAIGN ANALIZE\n                </h4>\n                <h3 class=\"text-lg text-gray-100 font-semibold mb-6\">\n                  campaign name :\n                </h3>\n                <h3 class=\"text-lg text-gray-100 font-semibold mb-6\">\n                  keyword :\n                </h3>\n                <p>{{ data.datasets }}</p>\n                <bar-chart\n                  :chartdata=\"data.datasets\"\n                  :options=\"data.options\"\n                ></bar-chart>\n                <dev class=\"small\">\n                  <line-chart :chart-data=\"datacollection\"></line-chart>\n                  <button @click=\"fillData()\">Randomize</button>\n                  <div class=\"w-full mt-6 pb-6 overflow-x-auto\"></div>\n                </dev>\n              </div>\n              <div\n                class=\"flex flex-wrap items-center justify-between px-6 pt-8 border-t border-gray-400\"\n              ></div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport BarChart from \"../components/Bar-chart.vue\";\nimport LineChart from \"./LineChart.js\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    SideVar,\n    BarChart,\n    LineChart,\n  },\n  mounted() {\n    this.fillData();\n    const route = useRoute();\n    api\n      .getdailyTweetCount({ campaign_id: route.params.id })\n      .then((response) => {\n        this.dailyCount = response;\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n  },\n  data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      dailyCount: null,\n      chart_options: null,\n      loaded: true,\n      data: {\n        datacollection: null,\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [\n          {\n            label: \"Bar Dataset\",\n            data: [10, 20, 30, 40, 50, 30],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n            ],\n            borderWidth: 1,\n          },\n          {\n            label: \"Line Dataset\",\n            data: [10, 50, 20, 30, 30, 40],\n            borderColor: \"#CFD8DC\",\n            fill: false,\n            type: \"line\",\n            lineTension: 0.3,\n          },\n        ],\n      },\n      options: {\n        scales: {\n          xAxes: [\n            {\n              scaleLabel: {\n                display: true,\n                labelString: \"Month\",\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                stepSize: 10,\n              },\n            },\n          ],\n        },\n      },\n    };\n  },\n  computed: {},\n  methods: {\n    fillData() {\n      this.datacollection = {\n        labels: [this.getRandomInt(), this.getRandomInt()],\n        datasets: [\n          {\n            label: \"Data One\",\n            backgroundColor: \"#f87979\",\n            data: [this.getRandomInt(), this.getRandomInt()],\n          },\n          {\n            label: \"Data One\",\n            backgroundColor: \"#f87979\",\n            data: [this.getRandomInt(), this.getRandomInt()],\n          },\n        ],\n      };\n    },\n    getRandomInt() {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}