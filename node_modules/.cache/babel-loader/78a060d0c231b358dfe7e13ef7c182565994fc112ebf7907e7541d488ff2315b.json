{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SideVar from \"@/components/SideVar.vue\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport api from \"../api/api\";\nexport default {\n  data: function data() {\n    return {\n      // accountCreation\n      accountView: false,\n      accountSeries: [{\n        name: \"アカウント登録数\",\n        type: \"column\",\n        data: []\n      }, {\n        name: \"累計アカウント登録数\",\n        type: \"line\",\n        data: []\n      }],\n      accountChartOptions: {\n        chart: {\n          height: 350,\n          type: \"line\"\n        },\n        stroke: {\n          width: [0, 4]\n        },\n        title: {\n          text: \"アカウント登録者数推移\"\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [1]\n        },\n        labels: [],\n        xaxis: {\n          type: \"datetime\"\n        },\n        yaxis: [{\n          title: {\n            text: \"アカウント登録者数\"\n          }\n        }, {\n          opposite: true,\n          title: {\n            text: \"累計アカウント登録者数\"\n          }\n        }]\n      },\n      // gender\n      genderView: false,\n      genderSeries: [],\n      genderChartOptions: {\n        title: {\n          text: \"登録者性別比率\"\n        },\n        chart: {\n          type: \"donut\"\n        },\n        labels: [],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: \"bottom\"\n            }\n          }\n        }]\n      }\n    };\n  },\n  components: {\n    apexchart: VueApexCharts,\n    SideVar: SideVar\n  },\n  mounted: function mounted() {\n    this.getAccountCreationData();\n    this.getAccountGenderData();\n  },\n  computed: {},\n  methods: {\n    getAccountCreationData: function getAccountCreationData() {\n      var _this = this;\n      api.getAccountCreationData().then(function (response) {\n        for (var i = 0; i < response[\"data\"].length; i++) {\n          _this.accountSeries[0][\"data\"].push(response[\"data\"][i][\"daily_count\"]);\n          _this.accountSeries[1][\"data\"].push(response[\"data\"][i][\"cumulative_count\"]);\n          _this.accountChartOptions[\"labels\"].push(response[\"data\"][i][\"formatted_date\"]);\n        }\n        _this.accountView = true;\n      })[\"catch\"](function (error) {\n        this.$toast.show(\"データの取得に失敗しました。システム管理者にお問合せください。\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n        console.log(error);\n      });\n    },\n    getAccountGenderData: function getAccountGenderData() {\n      var _this2 = this;\n      api.getAccountGenderData().then(function (response) {\n        console.log(response);\n        for (var i = 0; i < response[\"data\"].length; i++) {\n          _this2.genderSeries.push(response[\"data\"][i][\"count\"]);\n          _this2.genderChartOptions[\"labels\"].push(response[\"data\"][i][\"gender_text\"]);\n        }\n        _this2.genderView = true;\n      })[\"catch\"](function (error) {\n        console.log(error);\n        this.$toast.show(\"データの取得に失敗しました。システム管理者にお問合せください。\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["SideVar","VueApexCharts","api","data","accountView","accountSeries","name","type","accountChartOptions","chart","height","stroke","width","title","text","dataLabels","enabled","enabledOnSeries","labels","xaxis","yaxis","opposite","genderView","genderSeries","genderChartOptions","responsive","breakpoint","options","legend","position","components","apexchart","mounted","getAccountCreationData","getAccountGenderData","computed","methods","then","response","i","length","push","error","$toast","show","duration","console","log"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/KpiViewer.vue"],"sourcesContent":["<template>\n  <div class=\"KpiViewer\">\n    <div>\n      <!-- side var  -->\n      <SideVar />\n      <!-- input panel -->\n      <RightColumnOutline>\n        <PageTitle>KPIビュー</PageTitle>\n        <div id=\"chart\" class=\"bg-white\" v-if=\"accountView\">\n          <apexchart\n            type=\"line\"\n            height=\"350\"\n            :options=\"accountChartOptions\"\n            :series=\"accountSeries\"\n          ></apexchart>\n        </div>\n        <div id=\"chart\" class=\"bg-white w-1/2 mt-6\" v-if=\"genderView\">\n          <apexchart\n            type=\"donut\"\n            :options=\"genderChartOptions\"\n            :series=\"genderSeries\"\n          ></apexchart>\n        </div>\n      </RightColumnOutline>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport api from \"../api/api\";\nexport default {\n  data: function () {\n    return {\n      // accountCreation\n      accountView: false,\n      accountSeries: [\n        {\n          name: \"アカウント登録数\",\n          type: \"column\",\n          data: [],\n        },\n        {\n          name: \"累計アカウント登録数\",\n          type: \"line\",\n          data: [],\n        },\n      ],\n      accountChartOptions: {\n        chart: { height: 350, type: \"line\" },\n        stroke: { width: [0, 4] },\n        title: { text: \"アカウント登録者数推移\" },\n        dataLabels: { enabled: true, enabledOnSeries: [1] },\n        labels: [],\n        xaxis: { type: \"datetime\" },\n        yaxis: [\n          {\n            title: { text: \"アカウント登録者数\" },\n          },\n          { opposite: true, title: { text: \"累計アカウント登録者数\" } },\n        ],\n      },\n      // gender\n      genderView: false,\n      genderSeries: [],\n      genderChartOptions: {\n        title: { text: \"登録者性別比率\" },\n        chart: { type: \"donut\" },\n        labels: [],\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              chart: { width: 200 },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n  },\n  components: {\n    apexchart: VueApexCharts,\n    SideVar,\n  },\n  mounted() {\n    this.getAccountCreationData();\n    this.getAccountGenderData();\n  },\n  computed: {},\n  methods: {\n    getAccountCreationData: function () {\n      api\n        .getAccountCreationData()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.accountSeries[0][\"data\"].push(\n              response[\"data\"][i][\"daily_count\"]\n            );\n            this.accountSeries[1][\"data\"].push(\n              response[\"data\"][i][\"cumulative_count\"]\n            );\n            this.accountChartOptions[\"labels\"].push(\n              response[\"data\"][i][\"formatted_date\"]\n            );\n          }\n          this.accountView = true;\n        })\n        .catch(function (error) {\n          this.$toast.show(\n            \"データの取得に失敗しました。システム管理者にお問合せください。\",\n            { type: \"error\", position: \"top-right\", duration: 5000 }\n          );\n          console.log(error);\n        });\n    },\n    getAccountGenderData: function () {\n      api\n        .getAccountGenderData()\n        .then((response) => {\n          console.log(response);\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.genderSeries.push(response[\"data\"][i][\"count\"]);\n            this.genderChartOptions[\"labels\"].push(\n              response[\"data\"][i][\"gender_text\"]\n            );\n          }\n          this.genderView = true;\n        })\n        .catch(function (error) {\n          console.log(error);\n          this.$toast.show(\n            \"データの取得に失敗しました。システム管理者にお問合せください。\",\n            { type: \"error\", position: \"top-right\", duration: 5000 }\n          );\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}