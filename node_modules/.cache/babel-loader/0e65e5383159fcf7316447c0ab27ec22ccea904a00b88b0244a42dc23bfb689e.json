{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from \"axios\";\nimport mock from \"./mock/api\";\n// import store from \"@/store\";\nimport \"../firebase_config\";\nimport { getAuth } from \"@firebase/auth\";\nvar auth = getAuth();\nexport var client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\"\n});\nclient.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(config) {\n    var user, token;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          // const user = store.getters[\"user\"];\n          user = auth.currentUser;\n          _context.next = 3;\n          return user.getIdToken(true);\n        case 3:\n          token = _context.sent;\n          config.headers = {\n            Authorization: token\n          };\n          return _context.abrupt(\"return\", config);\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\nexport default {\n  getAccounts: function getAccounts(params) {\n    console.log(\"get accounts\");\n    return client.get(\"/accounts\", {\n      params: params\n    });\n  },\n  createAccount: function createAccount(params) {\n    return client.post(\"/accounts\", params);\n  },\n  getOrganizers: function getOrganizers(params) {\n    console.log(\"get organizers\");\n    return client.get(\"/organizers\", params);\n  },\n  createOrganizer: function createOrganizer(params) {\n    return client.post(\"/organizers\", params);\n  },\n  getCampaigns: function getCampaigns(params) {\n    console.log(\"get campaigns\");\n    return client.get(\"/campaigns\", {\n      params: params\n    });\n  },\n  getCampaign: function getCampaign(params) {\n    console.log(\"get campaign\");\n    return client.get(\"/campaign/\" + params.id);\n  },\n  createCampaign: function createCampaign(params) {\n    return client.post(\"/campaigns\", params);\n  }\n};","map":{"version":3,"names":["axios","mock","getAuth","auth","client","create","baseURL","interceptors","request","use","config","user","currentUser","getIdToken","token","headers","Authorization","JSON","parse","process","env","VUE_APP_USE_MOCK","run","getAccounts","params","console","log","get","createAccount","post","getOrganizers","createOrganizer","getCampaigns","getCampaign","id","createCampaign"],"sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\nimport mock from \"./mock/api\";\n// import store from \"@/store\";\nimport \"../firebase_config\";\nimport { getAuth } from \"@firebase/auth\";\n\nconst auth = getAuth();\n\nexport const client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\",\n});\n\nclient.interceptors.request.use(async (config) => {\n  // const user = store.getters[\"user\"];\n  const user = auth.currentUser;\n  const token = await user.getIdToken(true);\n  config.headers = { Authorization: token };\n  return config;\n});\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\n\nexport default {\n  getAccounts(params) {\n    console.log(\"get accounts\");\n    return client.get(\"/accounts\", { params: params });\n  },\n  createAccount(params) {\n    return client.post(\"/accounts\", params);\n  },\n  getOrganizers(params) {\n    console.log(\"get organizers\");\n    return client.get(\"/organizers\", params);\n  },\n  createOrganizer(params) {\n    return client.post(\"/organizers\", params);\n  },\n  getCampaigns(params) {\n    console.log(\"get campaigns\");\n    return client.get(\"/campaigns\", { params: params });\n  },\n  getCampaign(params) {\n    console.log(\"get campaign\");\n    return client.get(\"/campaign/\" + params.id);\n  },\n\n  createCampaign(params) {\n    return client.post(\"/campaigns\", params);\n  },\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B;AACA,OAAO,oBAAoB;AAC3B,SAASC,OAAO,QAAQ,gBAAgB;AAExC,IAAMC,IAAI,GAAGD,OAAO,EAAE;AAEtB,OAAO,IAAME,MAAM,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,MAAM,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,sEAAC,iBAAOC,MAAM;IAAA;IAAA;MAAA;QAAA;UAC3C;UACMC,IAAI,GAAGR,IAAI,CAACS,WAAW;UAAA;UAAA,OACTD,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC;QAAA;UAAnCC,KAAK;UACXJ,MAAM,CAACK,OAAO,GAAG;YAAEC,aAAa,EAAEF;UAAM,CAAC;UAAC,iCACnCJ,MAAM;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACd;EAAA;IAAA;EAAA;AAAA,IAAC;;AAEF;AACA,IAAIO,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC,EAAE;EAC5CpB,IAAI,CAACqB,GAAG,CAAClB,MAAM,CAAC;AAClB;AAEA,eAAe;EACbmB,WAAW,uBAACC,MAAM,EAAE;IAClBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,OAAOtB,MAAM,CAACuB,GAAG,CAAC,WAAW,EAAE;MAAEH,MAAM,EAAEA;IAAO,CAAC,CAAC;EACpD,CAAC;EACDI,aAAa,yBAACJ,MAAM,EAAE;IACpB,OAAOpB,MAAM,CAACyB,IAAI,CAAC,WAAW,EAAEL,MAAM,CAAC;EACzC,CAAC;EACDM,aAAa,yBAACN,MAAM,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,OAAOtB,MAAM,CAACuB,GAAG,CAAC,aAAa,EAAEH,MAAM,CAAC;EAC1C,CAAC;EACDO,eAAe,2BAACP,MAAM,EAAE;IACtB,OAAOpB,MAAM,CAACyB,IAAI,CAAC,aAAa,EAAEL,MAAM,CAAC;EAC3C,CAAC;EACDQ,YAAY,wBAACR,MAAM,EAAE;IACnBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,OAAOtB,MAAM,CAACuB,GAAG,CAAC,YAAY,EAAE;MAAEH,MAAM,EAAEA;IAAO,CAAC,CAAC;EACrD,CAAC;EACDS,WAAW,uBAACT,MAAM,EAAE;IAClBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,OAAOtB,MAAM,CAACuB,GAAG,CAAC,YAAY,GAAGH,MAAM,CAACU,EAAE,CAAC;EAC7C,CAAC;EAEDC,cAAc,0BAACX,MAAM,EAAE;IACrB,OAAOpB,MAAM,CAACyB,IAAI,CAAC,YAAY,EAAEL,MAAM,CAAC;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}