{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    SideVar: SideVar,\n    apexchart: VueApexCharts\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var route;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            route = useRoute();\n            _context.next = 3;\n            return api.getdailyTweetCount({\n              campaign_id: route.params.id\n            }).then(function (response) {\n              var tmp_options = _this.dailycountOptions;\n              tmp_options[\"xaxis\"][\"categories\"] = response[\"data\"][\"categories\"];\n              _this.dailycountOptions = tmp_options;\n              _this.dailycountSeries[0][\"name\"] = response[\"data\"][\"name\"][0];\n              _this.dailycountSeries[0][\"data\"] = response[\"data\"][\"data\"][0];\n              _this.dailycountSeries[1][\"name\"] = response[\"data\"][\"name\"][1];\n              _this.dailycountSeries[1][\"data\"] = response[\"data\"][\"data\"][1];\n            })[\"catch\"](function (error) {\n              console.log(\"error: \", error);\n            });\n          case 3:\n            _context.next = 5;\n            return api.getScore({\n              campaign_id: route.params.id\n            }).then(function (response) {\n              _this.scoreSeries = response[\"data\"][\"series\"];\n              _this.scoreOptions.labels = response[\"data\"][\"labels\"];\n            })[\"catch\"](function (error) {\n              console.log(\"error: \", error);\n            });\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\"\n        },\n        xaxis: {\n          // type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        }\n      },\n      dailycountSeries: [{\n        name: \"\",\n        data: []\n      }, {\n        name: \"\",\n        data: []\n      }],\n      scoreOptions: {\n        labels: []\n      },\n      scoreSeries: []\n    };\n  },\n  computed: {},\n  methods: {}\n};","map":{"version":3,"mappings":";;;AAkDA,OAAOA,OAAM,MAAO,0BAA0B;AAC9C,OAAOC,GAAE,MAAO,eAAe;AAC/B,SAASC,QAAO,QAAS,YAAY;AACrC,OAAOC,aAAY,MAAO,iBAAiB;AAE3C,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVL,OAAO,EAAPA,OAAO;IACPM,SAAS,EAAEH;EACb,CAAC;EACKI,OAAO,qBAAG;IAAA;IAAA;MAAA;MAAA;QAAA;UAAA;YACRC,KAAI,GAAIN,QAAQ,EAAE;YAAA;YAAA,OAClBD,GAAE,CACLQ,kBAAkB,CAAC;cAAEC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;YAAG,CAAC,EACnDC,IAAI,CAAC,UAACC,QAAQ,EAAK;cAClB,IAAIC,WAAU,GAAI,KAAI,CAACC,iBAAiB;cACxCD,WAAW,CAAC,OAAO,CAAC,CAAC,YAAY,IAAID,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC;cACnE,KAAI,CAACE,iBAAgB,GAAID,WAAW;cACpC,KAAI,CAACE,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,IAAIH,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cAC9D,KAAI,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,IAAIH,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cAC9D,KAAI,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,IAAIH,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cAC9D,KAAI,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,IAAIH,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChE,CAAC,UACK,CAAC,UAACI,KAAK,EAAK;cAChBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;YAC/B,CAAC,CAAC;UAAA;YAAA;YAAA,OACEjB,GAAE,CACLoB,QAAQ,CAAC;cAAEX,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;YAAG,CAAC,EACzCC,IAAI,CAAC,UAACC,QAAQ,EAAK;cAClB,KAAI,CAACQ,WAAU,GAAIR,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;cAC7C,KAAI,CAACS,YAAY,CAACC,MAAK,GAAIV,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;YACvD,CAAC,UACK,CAAC,UAACI,KAAK,EAAK;cAChBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;YAC/B,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACN,CAAC;EACDO,IAAI,kBAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,OAAO,EAAE,IAAI;MACbX,iBAAiB,EAAE;QACjBY,KAAK,EAAE;UACLhB,EAAE,EAAE;QACN,CAAC;QACDiB,KAAK,EAAE;UACL;UACAC,UAAU,EAAE,EAAE;UACdN,MAAM,EAAE;YACNO,KAAK,EAAE;cACLC,MAAM,EAAE;YACV;UACF;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,IAAI,EAAE,IAAI;UACVV,MAAM,EAAE;YACNQ,MAAM,EAAE;UACV;QACF;MACF,CAAC;MACDf,gBAAgB,EAAE,CAChB;QACEb,IAAI,EAAE,EAAE;QACRqB,IAAI,EAAE;MACR,CAAC,EACD;QACErB,IAAI,EAAE,EAAE;QACRqB,IAAI,EAAE;MACR,CAAC,CACF;MACDF,YAAY,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;MACDF,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDa,QAAQ,EAAE,CAAC,CAAC;EACZC,OAAO,EAAE,CAAC;AACZ,CAAC","names":["SideVar","api","useRoute","VueApexCharts","name","components","apexchart","mounted","route","getdailyTweetCount","campaign_id","params","id","then","response","tmp_options","dailycountOptions","dailycountSeries","error","console","log","getScore","scoreSeries","scoreOptions","labels","data","campaign_name","keyword","chart","xaxis","categories","style","colors","legend","show","computed","methods"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignAnalitics.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <div>\n      <!-- side var  -->\n      <SideVar />\n      <!-- campaign list -->\n      <div class=\"mx-auto lg:ml-80\">\n        <section class=\"py-3\">\n          <div class=\"container px-4 mx-auto\">\n            <div class=\"pt-6 pb-8 bg-gray-500 rounded-xl\">\n              <div class=\"px-6\">\n                <h4 class=\"text-lg text-gray-100 font-semibold mb-6\">\n                  CAMPAIGN ANALIZE\n                </h4>\n                <div class=\"text-left\">\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-12\">\n                    Daily data\n                  </p>\n                  <div>\n                    <apexchart\n                      width=\"500\"\n                      height=\"400\"\n                      type=\"bar\"\n                      :options=\"dailycountOptions\"\n                      :series=\"dailycountSeries\"\n                    ></apexchart>\n                  </div>\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-6\">\n                    Score distribution\n                  </p>\n                  <div>\n                    <apexchart\n                      width=\"500\"\n                      height=\"400\"\n                      type=\"donut\"\n                      :options=\"scoreOptions\"\n                      :series=\"scoreSeries\"\n                    ></apexchart>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    SideVar,\n    apexchart: VueApexCharts,\n  },\n  async mounted() {\n    const route = useRoute();\n    await api\n      .getdailyTweetCount({ campaign_id: route.params.id })\n      .then((response) => {\n        let tmp_options = this.dailycountOptions;\n        tmp_options[\"xaxis\"][\"categories\"] = response[\"data\"][\"categories\"];\n        this.dailycountOptions = tmp_options;\n        this.dailycountSeries[0][\"name\"] = response[\"data\"][\"name\"][0];\n        this.dailycountSeries[0][\"data\"] = response[\"data\"][\"data\"][0];\n        this.dailycountSeries[1][\"name\"] = response[\"data\"][\"name\"][1];\n        this.dailycountSeries[1][\"data\"] = response[\"data\"][\"data\"][1];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n    await api\n      .getScore({ campaign_id: route.params.id })\n      .then((response) => {\n        this.scoreSeries = response[\"data\"][\"series\"];\n        this.scoreOptions.labels = response[\"data\"][\"labels\"];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n  },\n  data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n        },\n        xaxis: {\n          // type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n      },\n      dailycountSeries: [\n        {\n          name: \"\",\n          data: [],\n        },\n        {\n          name: \"\",\n          data: [],\n        },\n      ],\n      scoreOptions: {\n        labels: [],\n      },\n      scoreSeries: [],\n    };\n  },\n  computed: {},\n  methods: {},\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}