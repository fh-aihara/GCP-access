{"ast":null,"code":"import axios from \"axios\";\nimport mock from \"./mock/api\";\nimport { getAuth } from \"@firebase/auth\";\nexport var client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\"\n});\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\naxios.interceptors.request.use(function (request) {\n  var user = getAuth().currentUser();\n  var token = user.getIdToken();\n  request.headers.common[\"Authorization\"] = token;\n  return request;\n});\nexport default {\n  /**\n   * Todoリスト取得API\n   * 結果はPromiseを返してハンドリングする\n   * @param {Object} params パラメータ\n   */\n  getAccounts: function getAccounts(params) {\n    return client.get(\"/accounts\", {\n      params: params\n    });\n  },\n  createAccount: function createAccount(params) {\n    return client.post(\"/accounts\", params);\n  },\n  getOrganizers: function getOrganizers(params) {\n    return client.get(\"/organizers\", params);\n  },\n  createOrganizer: function createOrganizer(params) {\n    console.log(params);\n    return client.post(\"/organizers\", params);\n  },\n  getCampaigns: function getCampaigns(params) {\n    console.log(params);\n    return client.get(\"/campaigns\", {\n      params: params\n    });\n  },\n  createCampaign: function createCampaign(params) {\n    console.log(params);\n    return client.post(\"/campaigns\", params);\n  }\n};","map":{"version":3,"names":["axios","mock","getAuth","client","create","baseURL","JSON","parse","process","env","VUE_APP_USE_MOCK","run","interceptors","request","use","user","currentUser","token","getIdToken","headers","common","getAccounts","params","get","createAccount","post","getOrganizers","createOrganizer","console","log","getCampaigns","createCampaign"],"sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\nimport mock from \"./mock/api\";\nimport { getAuth } from \"@firebase/auth\";\n\nexport const client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\",\n});\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\n\naxios.interceptors.request.use((request) => {\n  const user = getAuth().currentUser();\n  const token = user.getIdToken();\n  request.headers.common[\"Authorization\"] = token;\n  return request;\n});\n\nexport default {\n  /**\n   * Todoリスト取得API\n   * 結果はPromiseを返してハンドリングする\n   * @param {Object} params パラメータ\n   */\n  getAccounts(params) {\n    return client.get(\"/accounts\", { params: params });\n  },\n  createAccount(params) {\n    return client.post(\"/accounts\", params);\n  },\n  getOrganizers(params) {\n    return client.get(\"/organizers\", params);\n  },\n  createOrganizer(params) {\n    console.log(params);\n    return client.post(\"/organizers\", params);\n  },\n  getCampaigns(params) {\n    console.log(params);\n    return client.get(\"/campaigns\", { params: params });\n  },\n  createCampaign(params) {\n    console.log(params);\n    return client.post(\"/campaigns\", params);\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,OAAO,QAAQ,gBAAgB;AAExC,OAAO,IAAMC,MAAM,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,IAAIC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC,EAAE;EAC5CT,IAAI,CAACU,GAAG,CAACR,MAAM,CAAC;AAClB;AAEAH,KAAK,CAACY,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAACD,OAAO,EAAK;EAC1C,IAAME,IAAI,GAAGb,OAAO,EAAE,CAACc,WAAW,EAAE;EACpC,IAAMC,KAAK,GAAGF,IAAI,CAACG,UAAU,EAAE;EAC/BL,OAAO,CAACM,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAGH,KAAK;EAC/C,OAAOJ,OAAO;AAChB,CAAC,CAAC;AAEF,eAAe;EACb;AACF;AACA;AACA;AACA;EACEQ,WAAW,uBAACC,MAAM,EAAE;IAClB,OAAOnB,MAAM,CAACoB,GAAG,CAAC,WAAW,EAAE;MAAED,MAAM,EAAEA;IAAO,CAAC,CAAC;EACpD,CAAC;EACDE,aAAa,yBAACF,MAAM,EAAE;IACpB,OAAOnB,MAAM,CAACsB,IAAI,CAAC,WAAW,EAAEH,MAAM,CAAC;EACzC,CAAC;EACDI,aAAa,yBAACJ,MAAM,EAAE;IACpB,OAAOnB,MAAM,CAACoB,GAAG,CAAC,aAAa,EAAED,MAAM,CAAC;EAC1C,CAAC;EACDK,eAAe,2BAACL,MAAM,EAAE;IACtBM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,OAAOnB,MAAM,CAACsB,IAAI,CAAC,aAAa,EAAEH,MAAM,CAAC;EAC3C,CAAC;EACDQ,YAAY,wBAACR,MAAM,EAAE;IACnBM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,OAAOnB,MAAM,CAACoB,GAAG,CAAC,YAAY,EAAE;MAAED,MAAM,EAAEA;IAAO,CAAC,CAAC;EACrD,CAAC;EACDS,cAAc,0BAACT,MAAM,EAAE;IACrBM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,OAAOnB,MAAM,CAACsB,IAAI,CAAC,YAAY,EAAEH,MAAM,CAAC;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}