{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts,\n    Datepicker: Datepicker\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var route;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            route = useRoute();\n            _context.next = 3;\n            return api.getdailyTweetCount({\n              campaign_id: route.params.id\n            }).then(function (response) {\n              _this.dailycountOptions.xaxis.categories = response[\"data\"][\"categories\"];\n              console.log(response[\"data\"]);\n              for (var i = 0; i < response[\"data\"][\"name\"].length; i++) {\n                _this.dailycountSeries.push({\n                  name: response[\"data\"][\"name\"][i],\n                  data: response[\"data\"][\"data\"][i]\n                });\n              }\n              _this.tweetCount = response[\"data\"][\"data\"][0].reduce(function (a, b) {\n                return a + b;\n              });\n              _this.tweetCount_yesterday = _this.tweetCount - response[\"data\"][\"data\"][0].slice(-1)[0];\n              _this.engagementCount = 0;\n              _this.engagementCount += response[\"data\"][\"data\"][1].reduce(function (a, b) {\n                return a + b;\n              });\n              _this.engagementCount += response[\"data\"][\"data\"][2].reduce(function (a, b) {\n                return a + b;\n              });\n              _this.engagementCount += response[\"data\"][\"data\"][3].reduce(function (a, b) {\n                return a + b;\n              });\n              _this.engagementCount += response[\"data\"][\"data\"][4].reduce(function (a, b) {\n                return a + b;\n              });\n              _this.engagementCount_yesterday = _this.engagementCount - response[\"data\"][\"data\"][1].slice(-2)[0] - response[\"data\"][\"data\"][2].slice(-2)[0] - response[\"data\"][\"data\"][3].slice(-2)[0] - response[\"data\"][\"data\"][4].slice(-2)[0];\n            })[\"catch\"](function () {\n              _this.$toast.show(\"分析データの取得に失敗しました\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000\n              });\n            });\n          case 3:\n            _context.next = 5;\n            return api.getScore({\n              campaign_id: route.params.id\n            }).then(function (response) {\n              _this.scoreSeries = response[\"data\"][\"series\"].slice(0, 21);\n              _this.scoreOptions.labels = response[\"data\"][\"labels\"].slice(0, 21);\n              _this.paricipantsCount = response[\"data\"][\"labels\"].length;\n              if (_this.paricipantsCount != 0) {\n                _this.scoreCount = response[\"data\"][\"series\"].reduce(function (a, b) {\n                  return a + b;\n                });\n              } else _this.scoreCount = 0;\n            })[\"catch\"](function (error) {\n              console.log(error);\n              _this.$toast.show(\"スコアデータの取得に失敗しました\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000\n              });\n            });\n          case 5:\n            _context.next = 7;\n            return api.getCampaign({\n              id: route.params.id\n            }).then(function (response) {\n              _this.campaign = response[\"data\"][0];\n              var start_date = new Date(_this.campaign[\"start_time\"]);\n              start_date.setHours(start_date.getHours() + 9);\n              var end_date = new Date(_this.campaign[\"end_time\"]);\n              end_date.setHours(end_date.getHours() + 9);\n              _this.date = [start_date, end_date];\n            })[\"catch\"](function (error) {\n              console.log(error);\n              _this.$toast.show(\"キャンペーンデータの取得に失敗しました\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000\n              });\n            });\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      campaign: null,\n      date: [],\n      tweetCount: \"-\",\n      engagementCount: \"-\",\n      paricipantsCount: \"-\",\n      scoreCount: \"-\",\n      tweetCount_yesterday: 1,\n      engagementCount_yesterday: 1,\n      paricipantsCount_yesterday: 1,\n      scoreCount_yesterday: 1,\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      downloading: false,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\"\n        },\n        title: {\n          text: \"\",\n          align: \"left\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false\n            }\n          },\n          yaxis: {\n            lines: {\n              show: false\n            }\n          }\n        }\n      },\n      dailycountSeries: [],\n      scoreOptions: {\n        labels: [],\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        },\n        title: {\n          text: \"\"\n        }\n      },\n      scoreSeries: []\n    };\n  },\n  computed: {},\n  methods: {\n    downlordranking: function downlordranking() {\n      var _this2 = this;\n      this.downloading = true;\n      var csv = \"\\uFEFF\";\n      api.getRanking({\n        campaign_id: this.$route.params.id,\n        start: this.date[0],\n        end: this.date[1]\n      }).then(function (response) {\n        csv += response[\"data\"];\n        var blob = new Blob([csv], {\n          type: \"text/csv\"\n        });\n        var link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(blob);\n        link.download = \"sociama_ranking.csv\";\n        link.click();\n        _this2.$toast.show(\"ランキングファイルが完了しました\", {\n          type: \"success\",\n          position: \"top-right\",\n          duration: 3000\n        });\n        _this2.downloading = false;\n      })[\"catch\"](function (error) {\n        _this2.$toast.show(\"ランキングファイルの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n        console.log(\"error: \", error);\n        _this2.downloading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["api","useRoute","VueApexCharts","Datepicker","name","components","apexchart","mounted","route","getdailyTweetCount","campaign_id","params","id","then","response","dailycountOptions","xaxis","categories","console","log","i","length","dailycountSeries","push","data","tweetCount","reduce","a","b","tweetCount_yesterday","slice","engagementCount","engagementCount_yesterday","$toast","show","type","position","duration","getScore","scoreSeries","scoreOptions","labels","paricipantsCount","scoreCount","error","getCampaign","campaign","start_date","Date","setHours","getHours","end_date","date","campaign_name","keyword","paricipantsCount_yesterday","scoreCount_yesterday","chart_height","window","innerHeight","chart_width","innerWidth","downloading","chart","title","text","align","dataLabels","enabled","style","colors","yaxis","legend","grid","lines","computed","methods","downlordranking","csv","getRanking","$route","start","end","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignAnalitics.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <div class=\"px-6\">\n        <PageTitle>Campaign Analisys </PageTitle>>\n        <!-- summary seciton -->\n        <div class=\"container px-4 mx-auto\">\n          <!-- max-w-xs\tmax-width: 20rem; /* 320px */ -->\n          <div class=\"max-w-none mx-auto bg-gray-600 rounded-xl\">\n            <div class=\"flex flex-wrap\">\n              <div\n                class=\"w-full sm:w-1/2 lg:w-1/4 pl-4 md:pl-8 xl:pl-10 border-b lg:border-b-0 sm:border-r border-gray-700\"\n              >\n                <div class=\"py-5 px-6\">\n                  <h5\n                    class=\"text-sm font-semibold text-gray-300 mb-6 leading-normal tracking-wide\"\n                  >\n                    Count tweets<i\n                      class=\"pi pi-question-circle mx-1\"\n                      v-tippy=\"{\n                        content:\n                          'ツイートが作成されてから約15分以内に反映されます。tweetが作成されてから24時間が経過するとエンゲージメントとスコアが確定します。増加率はUTC 00:00を基準にした前日比です。',\n                      }\"\n                    ></i>\n                  </h5>\n                  <div class=\"flex flex-wrap justify-center mb-1 -m-2\">\n                    <div class=\"w-auto p-2\">\n                      <h4\n                        class=\"text-2xl text-gray-100 font-bold tracking-wide\"\n                      >\n                        {{ tweetCount.toLocaleString() }}\n                      </h4>\n                    </div>\n                    <div class=\"w-auto p-2\">\n                      <div\n                        class=\"inline-flex px-2 h-7 items-center justify-center text-green-500 bg-green-900 rounded-full\"\n                      >\n                        <i class=\"text-xs mr-1 pi pi-arrow-up\"></i>\n                        <span class=\"text-xs font-medium\"\n                          >{{\n                            Math.floor(\n                              (tweetCount / tweetCount_yesterday - 1) * 100\n                            )\n                          }}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                class=\"w-full sm:w-1/2 lg:w-1/4 pl-4 md:pl-8 xl:pl-10 border-b lg:border-b-0 lg:border-r border-gray-700\"\n              >\n                <div class=\"py-5 px-6\">\n                  <h5\n                    class=\"text-sm font-semibold text-gray-300 mb-6 leading-normal tracking-wide\"\n                  >\n                    Engagements<i\n                      class=\"pi pi-question-circle mx-1\"\n                      v-tippy=\"{\n                        content:\n                          'ツイート作成後24時間が経過したtweetのエンゲージメントの合計です。増加率はUTC 00:00を基準にした前日比です。',\n                      }\"\n                    ></i>\n                  </h5>\n                  <div class=\"flex flex-wrap justify-center mb-1 -m-2\">\n                    <div class=\"w-auto p-2\">\n                      <h4\n                        class=\"text-2xl text-gray-100 font-bold tracking-wide\"\n                      >\n                        {{ engagementCount.toLocaleString() }}\n                      </h4>\n                    </div>\n                    <div class=\"w-auto p-2\">\n                      <div\n                        class=\"inline-flex px-2 h-7 items-center justify-center text-green-500 bg-green-900 rounded-full\"\n                      >\n                        <i class=\"text-xs mr-1 pi pi-arrow-up\"></i>\n                        <span class=\"text-xs font-medium\"\n                          >{{\n                            Math.floor(\n                              (engagementCount / engagementCount_yesterday -\n                                1) *\n                                100\n                            )\n                          }}%</span\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                class=\"w-full sm:w-1/2 lg:w-1/4 pl-4 md:pl-8 xl:pl-10 border-b md:border-b-0 sm:border-r border-gray-700\"\n              >\n                <div class=\"py-5 px-6\">\n                  <h5\n                    class=\"text-sm font-semibold text-gray-300 mb-6 leading-normal tracking-wide\"\n                  >\n                    Participants<i\n                      class=\"pi pi-question-circle mx-1\"\n                      v-tippy=\"{\n                        content:\n                          'TweetやLike、Retweet、QTでキャンペーンに参加した人数です',\n                      }\"\n                    ></i>\n                  </h5>\n                  <div class=\"flex flex-wrap justify-center mb-1 -m-2\">\n                    <div class=\"w-auto p-2\">\n                      <h4\n                        class=\"text-2xl text-gray-100 font-bold tracking-wide\"\n                      >\n                        {{ paricipantsCount.toLocaleString() }}\n                      </h4>\n                    </div>\n                    <!-- <div class=\"w-auto p-2\">\n                            <div\n                              class=\"inline-flex px-2 h-7 items-center justify-center text-green-500 bg-green-900 rounded-full\"\n                            >\n                              <i class=\"text-xs mr-1 pi pi-arrow-up\"></i>\n                              <span class=\"text-xs font-medium\">-%</span>\n                            </div>\n                          </div> -->\n                  </div>\n                </div>\n              </div>\n              <div class=\"w-full sm:w-1/2 lg:w-1/4 pl-4 md:pl-8 xl:pl-10\">\n                <div class=\"py-5 px-6\">\n                  <h5\n                    class=\"text-sm font-semibold text-gray-300 mb-6 leading-normal tracking-wide\"\n                  >\n                    Score<i\n                      class=\"pi pi-question-circle mx-1\"\n                      v-tippy=\"{\n                        content:\n                          '全参加者が獲得したスコアの合計です。２倍期間を設定している場合や、参加者の中に非公開ユーザーが含まれる場合、最終的なランキングのスコアの合計とは一致しない場合があります。',\n                      }\"\n                    ></i>\n                  </h5>\n                  <div class=\"flex flex-wrap justify-center mb-1 -m-2\">\n                    <div class=\"w-auto p-2\">\n                      <h4\n                        class=\"text-2xl text-gray-100 font-bold tracking-wide\"\n                      >\n                        {{ scoreCount.toLocaleString() }}\n                      </h4>\n                    </div>\n                    <!-- <div class=\"w-auto p-2\">\n                            <div\n                              class=\"inline-flex px-2 h-7 items-center justify-center text-green-500 bg-green-900 rounded-full\"\n                            >\n                              <i class=\"text-xs mr-1 pi pi-arrow-up\"></i>\n                              <span class=\"text-xs font-medium\">-%</span>\n                            </div>\n                          </div> -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"text-left grid grid-cols-3 mt-3\">\n          <div v-for=\"dailycount in dailycountSeries\" :key=\"dailycount\">\n            <p class=\"text-lg text-gray-200 font-semibold mb-3 mt-3\">\n              {{ dailycount[\"name\"] }}\n            </p>\n            <div v-if=\"dailycountOptions.xaxis.categories.length > 0\">\n              <apexchart\n                :width=\"full\"\n                :height=\"chart_height\"\n                :title=\"dailycount.name\"\n                :options=\"dailycountOptions\"\n                :series=\"[dailycount]\"\n              ></apexchart>\n            </div>\n          </div>\n          <div></div>\n          <div class=\"col-span-3\">\n            <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-6\">\n              Score distribution(top 20)\n            </p>\n            <p class=\"text-xs text-gray-200 font-semibold mb-6\">\n              ※速報値：2倍期間や同一コンテンツの非加点は考慮していない\n            </p>\n            <div v-if=\"scoreOptions.labels.length > 0\">\n              <apexchart\n                :width=\"full\"\n                height=\"400\"\n                type=\"donut\"\n                :options=\"scoreOptions\"\n                :series=\"scoreSeries\"\n              ></apexchart>\n            </div>\n          </div>\n          <div class=\"mt-6 col-span-3\">\n            <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-6\">\n              Get Ranking CSV\n            </p>\n            <div class=\"w-2/5\">\n              <Datepicker v-model=\"date\" range />\n              <button\n                class=\"mt-6 inline-block py-2 px-4 text-sm text-center font-semibold leading-normal rounded-lg transition duration-200 text-blue-50\"\n                :class=\"\n                  !downloading\n                    ? 'bg-blue-500 hover:bg-blue-600'\n                    : 'bg-blue-700 hover:bg-blue-800'\n                \"\n                :disabled=\"downloading\"\n                @click=\"downlordranking\"\n              >\n                <i\n                  class=\"pi pi-spin pi-spinner text-xs mr-1\"\n                  v-if=\"downloading\"\n                ></i>\n                Download\n              </button>\n            </div>\n          </div>\n        </div>\n      </div> </RightColumnOutline\n    >>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts,\n    Datepicker,\n  },\n  async mounted() {\n    const route = useRoute();\n    await api\n      .getdailyTweetCount({ campaign_id: route.params.id })\n      .then((response) => {\n        this.dailycountOptions.xaxis.categories =\n          response[\"data\"][\"categories\"];\n        console.log(response[\"data\"]);\n        for (let i = 0; i < response[\"data\"][\"name\"].length; i++) {\n          this.dailycountSeries.push({\n            name: response[\"data\"][\"name\"][i],\n            data: response[\"data\"][\"data\"][i],\n          });\n        }\n        this.tweetCount = response[\"data\"][\"data\"][0].reduce(function (a, b) {\n          return a + b;\n        });\n        this.tweetCount_yesterday =\n          this.tweetCount - response[\"data\"][\"data\"][0].slice(-1)[0];\n        this.engagementCount = 0;\n        this.engagementCount += response[\"data\"][\"data\"][1].reduce(function (\n          a,\n          b\n        ) {\n          return a + b;\n        });\n        this.engagementCount += response[\"data\"][\"data\"][2].reduce(function (\n          a,\n          b\n        ) {\n          return a + b;\n        });\n        this.engagementCount += response[\"data\"][\"data\"][3].reduce(function (\n          a,\n          b\n        ) {\n          return a + b;\n        });\n        this.engagementCount += response[\"data\"][\"data\"][4].reduce(function (\n          a,\n          b\n        ) {\n          return a + b;\n        });\n        this.engagementCount_yesterday =\n          this.engagementCount -\n          response[\"data\"][\"data\"][1].slice(-2)[0] -\n          response[\"data\"][\"data\"][2].slice(-2)[0] -\n          response[\"data\"][\"data\"][3].slice(-2)[0] -\n          response[\"data\"][\"data\"][4].slice(-2)[0];\n      })\n      .catch(() => {\n        this.$toast.show(\"分析データの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000,\n        });\n      });\n    await api\n      .getScore({ campaign_id: route.params.id })\n      .then((response) => {\n        this.scoreSeries = response[\"data\"][\"series\"].slice(0, 21);\n        this.scoreOptions.labels = response[\"data\"][\"labels\"].slice(0, 21);\n        this.paricipantsCount = response[\"data\"][\"labels\"].length;\n        if (this.paricipantsCount != 0) {\n          this.scoreCount = response[\"data\"][\"series\"].reduce(function (a, b) {\n            return a + b;\n          });\n        } else this.scoreCount = 0;\n      })\n      .catch((error) => {\n        console.log(error);\n        this.$toast.show(\"スコアデータの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000,\n        });\n      });\n    await api\n      .getCampaign({ id: route.params.id })\n      .then((response) => {\n        this.campaign = response[\"data\"][0];\n        let start_date = new Date(this.campaign[\"start_time\"]);\n        start_date.setHours(start_date.getHours() + 9);\n        let end_date = new Date(this.campaign[\"end_time\"]);\n        end_date.setHours(end_date.getHours() + 9);\n        this.date = [start_date, end_date];\n      })\n      .catch((error) => {\n        console.log(error);\n        this.$toast.show(\"キャンペーンデータの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000,\n        });\n      });\n  },\n  data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      campaign: null,\n      date: [],\n      tweetCount: \"-\",\n      engagementCount: \"-\",\n      paricipantsCount: \"-\",\n      scoreCount: \"-\",\n      tweetCount_yesterday: 1,\n      engagementCount_yesterday: 1,\n      paricipantsCount_yesterday: 1,\n      scoreCount_yesterday: 1,\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      downloading: false,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\",\n        },\n        title: {\n          text: \"\",\n          align: \"left\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false,\n            },\n          },\n          yaxis: {\n            lines: {\n              show: false,\n            },\n          },\n        },\n      },\n      dailycountSeries: [],\n      scoreOptions: {\n        labels: [],\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n        title: {\n          text: \"\",\n        },\n      },\n      scoreSeries: [],\n    };\n  },\n  computed: {},\n  methods: {\n    downlordranking() {\n      this.downloading = true;\n      let csv = \"\\ufeff\";\n      api\n        .getRanking({\n          campaign_id: this.$route.params.id,\n          start: this.date[0],\n          end: this.date[1],\n        })\n        .then((response) => {\n          csv += response[\"data\"];\n          let blob = new Blob([csv], { type: \"text/csv\" });\n          let link = document.createElement(\"a\");\n          link.href = window.URL.createObjectURL(blob);\n          link.download = \"sociama_ranking.csv\";\n          link.click();\n          this.$toast.show(\"ランキングファイルが完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000,\n          });\n          this.downloading = false;\n        })\n        .catch((error) => {\n          this.$toast.show(\"ランキングファイルの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          console.log(\"error: \", error);\n          this.downloading = false;\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}