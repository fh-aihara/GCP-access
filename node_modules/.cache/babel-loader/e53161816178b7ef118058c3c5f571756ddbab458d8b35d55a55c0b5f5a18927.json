{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"KycList\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"flex justify-between items-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \"KYC待ち\")], -1 /* HOISTED */);\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"flex justify-between items-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \"KYC保留\")], -1 /* HOISTED */);\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"flex justify-between items-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \"KYC完了\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SideVar = _resolveComponent(\"SideVar\");\n  var _component_PageTitle = _resolveComponent(\"PageTitle\");\n  var _component_RightColumnOutline = _resolveComponent(\"RightColumnOutline\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <input @change=\\\"selectedFile\\\" type=\\\"file\\\" name=\\\"file\\\" />\\n  <button @click=\\\"upload\\\" type=\\\"submit\\\">アップロード</button> \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createCommentVNode(\" side var  \"), _createVNode(_component_SideVar), _createCommentVNode(\" input panel \"), _createVNode(_component_RightColumnOutline, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_PageTitle, null, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(\"KYC一覧\")];\n        }),\n        _: 1 /* STABLE */\n      }), _hoisted_2, _hoisted_3, _hoisted_4];\n    }),\n    _: 1 /* STABLE */\n  })])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAGO,SAAM;AAAS;8BAOdA,oBAEM;EAFD,SAAM;AAAmC,iBAC5CA,oBAA0D;EAArD,SAAM;AAAmC,GAAC,OAAK;8BAEtDA,oBAEM;EAFD,SAAM;AAAmC,iBAC5CA,oBAA0D;EAArD,SAAM;AAAmC,GAAC,OAAK;8BAEtDA,oBAEM;EAFD,SAAM;AAAmC,iBAC5CA,oBAA0D;EAArD,SAAM;AAAmC,GAAC,OAAK;;;;;;6DAhB5DC,oJACyD,EACzDD,oBAkBM,OAlBNE,UAkBM,GAjBJF,oBAgBM,cAfJC,kCAAkB,EAClBE,aAAWC,qBACXH,oCAAoB,EACpBE,aAWqBE;wBAVnB;MAAA,OAA4B,CAA5BF,aAA4BG;4BAAjB;UAAA,OAAK,kBAAL,OAAK;;;UAChBC,UAEM,EACNC,UAEM,EACNC,UAEM","names":["_createElementVNode","_createCommentVNode","_hoisted_1","_createVNode","_component_SideVar","_component_RightColumnOutline","_component_PageTitle","_hoisted_2","_hoisted_3","_hoisted_4"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/KycList.vue"],"sourcesContent":["<template>\n  <!-- <input @change=\"selectedFile\" type=\"file\" name=\"file\" />\n  <button @click=\"upload\" type=\"submit\">アップロード</button> -->\n  <div class=\"KycList\">\n    <div>\n      <!-- side var  -->\n      <SideVar />\n      <!-- input panel -->\n      <RightColumnOutline>\n        <PageTitle>KYC一覧</PageTitle>\n        <div class=\"flex justify-between items-center\">\n          <div class=\"text-white text-left ml-4 text-sm\">KYC待ち</div>\n        </div>\n        <div class=\"flex justify-between items-center\">\n          <div class=\"text-white text-left ml-4 text-sm\">KYC保留</div>\n        </div>\n        <div class=\"flex justify-between items-center\">\n          <div class=\"text-white text-left ml-4 text-sm\">KYC完了</div>\n        </div>\n      </RightColumnOutline>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  data: function () {\n    return {};\n  },\n  components: {\n    SideVar,\n  },\n  setup() {\n    const sortBy = \"created_at\";\n    const sortType = \"asc\";\n    const headers = [\n      { text: \"verification_id\", value: \"verification_id\", sortable: true },\n      { text: \"user_id\", value: \"user_id\", sortable: true },\n      { text: \"image_url\", value: \"image_url\", sortable: true },\n      { text: \"status\", value: \"status\", sortable: true },\n      { text: \"memo\", value: \"memo\", sortable: true },\n      { text: \"updated_at\", value: \"updated_at\", sortable: true },\n      { text: \"created_at\", value: \"created_at\", sortable: true },\n    ];\n    let items = ref([]);\n    onMounted(() => {});\n    return { headers, items, sortBy, sortType };\n  },\n\n  mounted() {\n    this.getage_verifications();\n    this.show_flag = true;\n  },\n  data() {\n    return {\n      show_flag: false,\n      selectedTable: \"events\",\n      optionTables: [\n        {\n          id: 1,\n          name: \"events\",\n        },\n        { id: 2, name: \"users\" },\n        { id: 3, name: \"age_verifications\" },\n        { id: 4, name: \"user_photos\" },\n        { id: 5, name: \"chat_rooms\" },\n        { id: 6, name: \"chat_room_user\" },\n        { id: 7, name: \"friends\" },\n        {\n          id: 8,\n          name: \"messages\",\n        },\n        { id: 9, name: \"areas\" },\n        { id: 10, name: \"theme\" },\n        { id: 11, name: \"participants\" },\n        { id: 12, name: \"user_opinions\" },\n        { id: 13, name: \"blocks\" },\n      ],\n    };\n  },\n\n  computed: {},\n  methods: {\n    getage_verifications() {\n      api\n        .getage_verifications()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              verification_id: response[\"data\"][i][\"verification_id\"],\n              user_id: response[\"data\"][i][\"user_id\"],\n              image_url: response[\"data\"][i][\"image_url\"],\n              status: response[\"data\"][i][\"status\"],\n              memo: response[\"data\"][i][\"memo\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}