{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"campaign_analize\"\n};\nvar _hoisted_2 = {\n  \"class\": \"flex justify-between items-center\"\n};\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \" チャンネルごとの盛り上がりを確認しましょう \", -1 /* HOISTED */);\nvar _hoisted_4 = {\n  \"class\": \"text-xs text-white flex items-center w-auto\"\n};\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"mr-4\"\n}, \"表示期間\", -1 /* HOISTED */);\nvar _hoisted_6 = {\n  key: 0,\n  \"class\": \"w-64\"\n};\nvar _hoisted_7 = {\n  \"class\": \"m-4 p-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SideVar = _resolveComponent(\"SideVar\");\n  var _component_PageTitle = _resolveComponent(\"PageTitle\");\n  var _component_Datepicker = _resolveComponent(\"Datepicker\");\n  var _component_EasyDataTable = _resolveComponent(\"EasyDataTable\");\n  var _component_RightColumnOutline = _resolveComponent(\"RightColumnOutline\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" side var  \"), _createVNode(_component_SideVar), _createCommentVNode(\" main div \"), _createVNode(_component_RightColumnOutline, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_PageTitle, null, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(\"Discord Channels\")];\n        }),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, $data.show_flag ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_Datepicker, {\n        modelValue: $setup.date,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $setup.date = $event;\n        }),\n        range: \"\",\n        format: _ctx.yyyy / _ctx.MM / _ctx.dd,\n        \"enable-time-picker\": false\n      }, null, 8 /* PROPS */, [\"modelValue\", \"format\"])])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_EasyDataTable, {\n        headers: $setup.headers,\n        items: $setup.items,\n        \"sort-by\": $setup.sortBy,\n        \"sort-type\": $setup.sortType\n      }, null, 8 /* PROPS */, [\"headers\", \"items\", \"sort-by\", \"sort-type\"])])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;AAAkB;;EAMpB,SAAM;AAAmC;8BAC5CA,oBAEM;EAFD,SAAM;AAAmC,GAAC,yBAE/C;;EACK,SAAM;AAA6C;8BACtDA,oBAA4B;EAAvB,SAAM;AAAM,GAAC,MAAI;;;EACA,SAAM;;;EAU3B,SAAM;AAAS;;;;;;;uBAtBxBC,oBA+BM,OA/BNC,UA+BM,GA9BJC,kCAAkB,EAClBC,aAAWC,qBACXF,iCAAiB,EACjBC,aA0BqBE;wBAzBnB;MAAA,OAAuC,CAAvCF,aAAuCG;4BAA5B;UAAA,OAAgB,kBAAhB,kBAAgB;;;UAC3BP,oBAeM,OAfNQ,UAeM,GAdJC,UAEM,EACNT,oBAUM,OAVNU,UAUM,GATJC,UAA4B,EACjBC,eAAS,kBAApBX,oBAOM,OAPNY,UAOM,GANJT,aAKEU;oBAJSC,WAAI;;iBAAJA,WAAI;QAAA;QACbC,KAAK,EAAL,EAAK;QACJC,MAAM,EAAEC,SAAI,GAAGA,OAAE,GAAGA,OAAE;QACtB,oBAAkB,EAAE;oGAK7BlB,oBAOM,OAPNmB,UAOM,GANJf,aAKEgB;QAJCC,OAAO,EAAEN,cAAO;QAChBO,KAAK,EAAEP,YAAK;QACZ,SAAO,EAAEA,aAAM;QACf,WAAS,EAAEA","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_SideVar","_component_RightColumnOutline","_component_PageTitle","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","$data","_hoisted_6","_component_Datepicker","$setup","range","format","_ctx","_hoisted_7","_component_EasyDataTable","headers","items"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/DiscordChannels.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Discord Channels</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          チャンネルごとの盛り上がりを確認しましょう\n        </div>\n        <div class=\"text-xs text-white flex items-center w-auto\">\n          <div class=\"mr-4\">表示期間</div>\n          <div v-if=\"show_flag\" class=\"w-64\">\n            <Datepicker\n              v-model=\"date\"\n              range\n              :format=\"yyyy / MM / dd\"\n              :enable-time-picker=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"m-4 p-2\">\n        <EasyDataTable\n          :headers=\"headers\"\n          :items=\"items\"\n          :sort-by=\"sortBy\"\n          :sort-type=\"sortType\"\n        />\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    Datepicker,\n  },\n  setup() {\n    let date = ref();\n    const sortBy = \"count_actions\";\n    const sortType = \"desc\";\n\n    const headers = [\n      { text: \"チャンネル名\", value: \"channel_name\" },\n      {\n        text: \"アクション数\",\n        value: \"count_actions\",\n        sortable: true,\n        width: 200,\n      },\n      { text: \"メッセージ数\", value: \"count_messages\", sortable: true },\n      { text: \"リアクション数\", value: \"count_reactions\", sortable: true },\n      // { text: \"アクション人数\", value: \"count_action_users\", sortable: true },\n      { text: \"メッセージ人数\", value: \"count_message_users\", sortable: true },\n      {\n        text: \"リアクション人数\",\n        value: \"count_reaction_users\",\n        sortable: true,\n      },\n    ];\n\n    let items = ref([]);\n\n    onMounted(() => {\n      // 日付の最小〜最大を計算する処理\n      const today = new Date();\n      let toDate = new Date(new Date().setDate(today.getDate() + 1));\n      let fromDate = new Date(new Date().setDate(toDate.getDate() - 30));\n      date.value = [fromDate, toDate];\n    });\n    return {\n      date,\n      headers,\n      items,\n      sortBy,\n      sortType,\n    };\n  },\n  mounted() {\n    this.show_flag = true;\n    // this.getDiscordChannels();\n  },\n  watch: {\n    date: {\n      handler() {\n        this.items = [];\n        console.log(\n          \"change date\",\n          this.date[0].toISOString().slice(0, 10),\n          this.date[1].toISOString().slice(0, 10)\n        );\n        this.getDiscordChannels();\n      },\n      deep: true,\n    },\n  },\n\n  data() {\n    return {\n      show_flag: false,\n      today: new Date(),\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordChannels() {\n      api\n        .getDiscordChannels({\n          data_from: this.date[0].toISOString().slice(0, 10),\n          data_to: this.date[1].toISOString().slice(0, 10),\n        })\n        .then((response) => {\n          console.log(response);\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              channel_name: response[\"data\"][i][\"channel_name\"],\n              count_actions:\n                response[\"data\"][i][\"count_messages\"] +\n                response[\"data\"][i][\"count_reactions\"],\n              count_messages: response[\"data\"][i][\"count_messages\"],\n              count_reactions: response[\"data\"][i][\"count_reactions\"],\n              count_message_users: response[\"data\"][i][\"count_message_users\"],\n              count_reaction_users: response[\"data\"][i][\"count_reaction_users\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"分析データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}