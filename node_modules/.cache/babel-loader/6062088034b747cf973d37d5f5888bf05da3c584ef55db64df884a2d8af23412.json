{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport SideVar from \"@/components/SideVar.vue\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nimport api from \"../api/api.js\";\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport checks from \"../assets/mixins/Checks\";\nexport default {\n  name: \"Campaign_regit\",\n  mixins: [checks],\n  components: {\n    SideVar: SideVar\n  },\n  setup: function setup() {\n    var date = ref();\n    return {\n      date: date\n    };\n  },\n  data: function data() {\n    return {\n      campaign_id: null,\n      conditions_twitter_account: [],\n      conditions_tweet: [],\n      reword_amount: null,\n      reword_list: [],\n      gift_filled: false,\n      reword_update: false,\n      campaign_category: null,\n      account_loading: false,\n      tweet_loading: false,\n      account_regist_loading: false,\n      tweet_regist_loading: false,\n      delete_loading: false,\n      gift_loading: false,\n      discordGuild: null,\n      discordInviteUrl: \"\",\n      discordConnect: false,\n      discordConditionExists: false,\n      discordConnectLoading: false,\n      discordDisconnectLoading: false,\n      walletConditionExists: false,\n      walletConnectLoading: false,\n      walletDisconnectLoading: false,\n      externalSiteUrl: \"\",\n      externalSiteRegistLoading: false,\n      externalSiteDeleteLoading: false,\n      externalSiteConditionExists: false\n    };\n  },\n  mounted: function mounted() {\n    var route = useRoute();\n    this.campaign_id = route.params.id;\n    this.getConditions();\n    this.getCampaign();\n    this.getDiscordInfo();\n  },\n  computed: {\n    plan: function plan() {\n      return this.$store.getters[\"subscribePlan\"];\n    }\n  },\n  watch: {\n    // twitterアカウントのテキストボックス\n    twitter_account: function twitter_account(value) {\n      this.twitter_account_check = false;\n      this.twitter_account_result = \"\";\n      if (value.indexOf(\"@\")) {\n        this.twitter_account = \"@\" + value;\n      }\n    },\n    // tweet URLのテキストボックス\n    tweet_url: function tweet_url() {\n      this.tweet_url_check = false;\n      this.tweet_url_result = \"\";\n    },\n    reword_list: {\n      handler: function handler() {\n        var _ = true;\n        for (var i = 0; i < this.reword_list.length; i++) {\n          if (this.reword_list[i][0].length == 0) {\n            this.gift_filled = false;\n            _ = false;\n            break;\n          }\n          if (this.reword_list[i][1].length == 0) {\n            this.gift_filled = false;\n            _ = false;\n            break;\n          }\n        }\n        if (_ == true) {\n          this.gift_filled = true;\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    getConditions: function getConditions() {\n      var _this = this;\n      this.conditions_tweet = [];\n      this.conditions_twitter_account = [];\n      this.discordConditionExists = false;\n      this.walletConditionExists = false;\n      this.externalSiteConditionExists = false;\n      this.externalSiteUrl = \"\";\n      api.getConditions({\n        campaign_id: this.$route.params.id\n      }).then(function (response) {\n        console.log(response);\n        var response_data = response[\"data\"];\n        for (var i in response_data) {\n          if (response_data[i][\"actions\"] == \"FOLLOW\") {\n            _this.conditions_twitter_account.push({\n              user_id: response_data[i][\"user_id\"],\n              username: response_data[i][\"username\"],\n              followers: response_data[i][\"followers\"]\n            });\n          } else if (response_data[i][\"actions\"] == \"RETWEET\") {\n            _this.conditions_tweet.push({\n              tweet_id: response_data[i][\"tweet_id\"],\n              username: response_data[i][\"username\"],\n              text: response_data[i][\"text\"]\n            });\n          } else if (response_data[i][\"actions\"] == \"DISCORD_SERVER_JOIN\") {\n            _this.discordConditionExists = true;\n            _this.discordInviteUrl = response_data[i][\"invite_url\"];\n          } else if (response_data[i][\"actions\"] == \"WALLET_CONNECT\") {\n            _this.walletConditionExists = true;\n          } else if (response_data[i][\"actions\"] == \"EXTERNAL_SITE_VISIT\") {\n            _this.externalSiteConditionExists = true;\n            _this.externalSiteUrl = response_data[i][\"external_site_url\"];\n          }\n        }\n      })[\"catch\"](function (error) {\n        console.log(\"error: \", error);\n        _this.$toast.show(\"条件の取得に失敗しました。時間を置いて再度お試しください。\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n      });\n    },\n    createFollowConditionPromise: function createFollowConditionPromise() {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        api.createConditions({\n          campaign_id: _this2.$route.params.id,\n          user_id: _this2.twitter_account_id,\n          actions: \"FOLLOW\"\n        }).then(function () {\n          _this2.twitter_account = \"@\";\n          _this2.twitter_account_check = false;\n          _this2.getConditions();\n          _this2.$toast.show(\"フォロー条件の追加が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this2.$toast.show(\"フォロー条件の追加に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          _this2.twitter_account_check = false;\n          resolve(\"rejected\");\n        });\n      });\n    },\n    createRetweetConditionPromise: function createRetweetConditionPromise() {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        api.createConditions({\n          campaign_id: _this3.$route.params.id,\n          tweet_id: _this3.tweet_id,\n          actions: \"RETWEET\"\n        }).then(function () {\n          _this3.conditions_tweet_url = [];\n          _this3.tweet_url = \"\";\n          _this3.tweet_url_check = false;\n          _this3.getConditions();\n          _this3.$toast.show(\"リツイート条件の追加が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this3.$toast.show(\"リツイート条件の追加に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    deleteFollowConditionPromise: function deleteFollowConditionPromise(user_id) {\n      var _this4 = this;\n      return new Promise(function (resolve) {\n        api.deletefollowConditions({\n          campaign_id: _this4.$route.params.id,\n          user_id: user_id\n        }).then(function () {\n          _this4.twitter_account = \"@\";\n          _this4.twitter_account_check = false;\n          _this4.$toast.show(\"フォロー条件の削除が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          _this4.getConditions();\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this4.$toast.show(\"フォロー条件の削除に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    deleteRetweetConditionPromise: function deleteRetweetConditionPromise(tweet_id) {\n      var _this5 = this;\n      return new Promise(function (resolve) {\n        api.deleteretweetConditions({\n          campaign_id: _this5.$route.params.id,\n          tweet_id: tweet_id\n        }).then(function () {\n          _this5.tweet_url = \"\";\n          _this5.tweet_url_check = false;\n          _this5.$toast.show(\"リツイート条件の削除が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          _this5.getConditions();\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this5.$toast.show(\"リツイート条件の削除に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    createDiscordConditionPromise: function createDiscordConditionPromise() {\n      var _this6 = this;\n      return new Promise(function (resolve) {\n        api.createConditions({\n          campaign_id: _this6.$route.params.id,\n          guild_id: _this6.discordGuild.item_data_1,\n          actions: \"DISCORD_SERVER_JOIN\",\n          invite_url: _this6.discordInviteUrl\n        }).then(function () {\n          _this6.getConditions();\n          _this6.$toast.show(\"Discord条件の追加が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this6.$toast.show(\"Discord条件の追加に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    deleteDiscordConditionPromise: function deleteDiscordConditionPromise() {\n      var _this7 = this;\n      return new Promise(function (resolve) {\n        api.deletediscordConditions({\n          campaign_id: _this7.$route.params.id,\n          guild_id: _this7.discordGuild.item_data_1\n        }).then(function () {\n          _this7.$toast.show(\"Discord条件の削除が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          _this7.getConditions();\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this7.$toast.show(\"Discord条件の削除に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    createWalletConditionPromise: function createWalletConditionPromise() {\n      var _this8 = this;\n      return new Promise(function (resolve) {\n        api.createConditions({\n          campaign_id: _this8.$route.params.id,\n          actions: \"WALLET_CONNECT\"\n        }).then(function () {\n          _this8.getConditions();\n          _this8.$toast.show(\"Wallet条件の追加が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this8.$toast.show(\"Wallet条件の追加に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    deleteWalletConditionPromise: function deleteWalletConditionPromise() {\n      var _this9 = this;\n      return new Promise(function (resolve) {\n        api.deleteWalletConditions({\n          campaign_id: _this9.$route.params.id\n        }).then(function () {\n          _this9.$toast.show(\"Wallet条件の削除が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          _this9.getConditions();\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this9.$toast.show(\"Wallet条件の削除に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    createExternalSiteConditionPromise: function createExternalSiteConditionPromise(url) {\n      var _this10 = this;\n      return new Promise(function (resolve) {\n        api.createConditions({\n          campaign_id: _this10.$route.params.id,\n          external_site_url: url,\n          actions: \"EXTERNAL_SITE_VISIT\"\n        }).then(function () {\n          _this10.getConditions();\n          _this10.$toast.show(\"外部サイト条件の追加が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this10.$toast.show(\"外部サイト条件の追加に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    deleteExternalSiteConditionPromise: function deleteExternalSiteConditionPromise() {\n      var _this11 = this;\n      return new Promise(function (resolve) {\n        api.deleteExternalSiteConditions({\n          campaign_id: _this11.$route.params.id\n        }).then(function () {\n          _this11.$toast.show(\"外部サイト条件の削除が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          _this11.getConditions();\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this11.$toast.show(\"外部サイト条件の削除に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    },\n    getCampaign: function getCampaign() {\n      var _this12 = this;\n      api.getCampaign({\n        id: this.$route.params.id\n      }).then(function (response) {\n        _this12.campaign_category = response[\"data\"][0][\"category\"];\n        _this12.reword_amount = response[\"data\"][0][\"amount\"];\n        for (var i = 0; i < _this12.reword_amount; i++) {\n          _this12.reword_list.push([\"\", \"\", \"\"]);\n        }\n        api.getGifts({\n          campaign_id: _this12.$route.params.id\n        }).then(function (response) {\n          console.log(response);\n          if (response[\"data\"].length != 0) {\n            for (var i = 0; i < _this12.reword_amount; i++) {\n              _this12.reword_list[i][0] = response[\"data\"][i][\"label\"];\n              _this12.reword_list[i][1] = response[\"data\"][i][\"code\"];\n              _this12.reword_list[i][2] = response[\"data\"][i][\"gift_id\"];\n              _this12.reword_update = true;\n            }\n          }\n        })[\"catch\"](function (error) {\n          _this12.$toast.show(\"ギフトの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n        });\n      })[\"catch\"](function (error) {\n        _this12.$toast.show(\"キャンペーンの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n        console.log(\"error: \", error);\n      });\n    },\n    createGifts: function createGifts() {\n      var _this13 = this;\n      this.gift_loading = true;\n      api.createGifts({\n        campaign_id: this.$route.params.id,\n        gifts: this.reword_list\n      }).then(function () {\n        _this13.$toast.show(\"ギフトの登録が完了しました\", {\n          type: \"success\",\n          position: \"top-right\",\n          duration: 3000\n        });\n        _this13.gift_loading = false;\n        _this13.$router.go({\n          name: \"addConditions\",\n          params: {\n            id: _this13.$route.params.id\n          }\n        });\n      })[\"catch\"](function (error) {\n        _this13.$toast.show(\"ギフトの登録に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n        console.log(\"error: \", error);\n        _this13.gift_loading = false;\n      });\n    },\n    updateGifts: function updateGifts() {\n      var _this14 = this;\n      this.gift_loading = true;\n      api.updateGifts({\n        campaign_id: this.$route.params.id,\n        gifts: this.reword_list\n      }).then(function () {\n        _this14.$toast.show(\"ギフトの変更が完了しました\", {\n          type: \"success\",\n          position: \"top-right\",\n          duration: 3000\n        });\n        _this14.gift_loading = false;\n        _this14.$router.go({\n          name: \"addConditions\",\n          params: {\n            id: _this14.$route.params.id\n          }\n        });\n      })[\"catch\"](function (error) {\n        _this14.$toast.show(\"ギフトの変更に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n        console.log(\"error: \", error);\n        _this14.gift_loading = false;\n      });\n    },\n    handleFileSelect: function handleFileSelect(e) {\n      var _this15 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var file, i, _i;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _this15;\n              _context.next = 3;\n              return e.target.files[0].text();\n            case 3:\n              _context.t1 = _context.sent;\n              file = _context.t0.parseCSV.call(_context.t0, _context.t1);\n              if (!(file.length != _this15.reword_amount)) {\n                _context.next = 8;\n                break;\n              }\n              _this15.$toast.show(\"CSVのデータ数が一致しません。ヘッダーなしでデータ行の数をギフトの数と一致させてください\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000\n              });\n              return _context.abrupt(\"return\");\n            case 8:\n              i = 0;\n            case 9:\n              if (!(i < _this15.reword_list.length)) {\n                _context.next = 16;\n                break;\n              }\n              if (!(file[i].length != 2)) {\n                _context.next = 13;\n                break;\n              }\n              _this15.$toast.show(\"CSVのデータ数が一致しません。各行は ラベル, コード の２列のみ入力してください\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000\n              });\n              return _context.abrupt(\"return\");\n            case 13:\n              i++;\n              _context.next = 9;\n              break;\n            case 16:\n              for (_i = 0; _i < _this15.reword_list.length; _i++) {\n                _this15.reword_list[_i][0] = file[_i][0];\n                _this15.reword_list[_i][1] = file[_i][1];\n              }\n              _this15.reword_list.splice;\n              _this15.$toast.show(\"CSVの読み込みが完了しました\", {\n                type: \"success\",\n                position: \"top-right\",\n                duration: 3000\n              });\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    parseCSV: function parseCSV(data) {\n      return data.split(\"\\n\").map(function (row) {\n        return row.split(\",\");\n      });\n    },\n    getDiscordInfo: function getDiscordInfo() {\n      var _this16 = this;\n      api.getItemsDiscord().then(function (response) {\n        console.log(response);\n        if (response.data.length != 0) {\n          _this16.discordGuild = response.data[0];\n          _this16.discordConnect = true;\n        }\n      })[\"catch\"](function (error) {\n        console.log(\"error\", error);\n        _this16.$toast.show(\"Discordのデータ取得に失敗しました\", {\n          type: \"error\",\n          position: \"top\",\n          duration: 5000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["SideVar","api","ref","useRoute","checks","name","mixins","components","setup","date","data","campaign_id","conditions_twitter_account","conditions_tweet","reword_amount","reword_list","gift_filled","reword_update","campaign_category","account_loading","tweet_loading","account_regist_loading","tweet_regist_loading","delete_loading","gift_loading","discordGuild","discordInviteUrl","discordConnect","discordConditionExists","discordConnectLoading","discordDisconnectLoading","walletConditionExists","walletConnectLoading","walletDisconnectLoading","externalSiteUrl","externalSiteRegistLoading","externalSiteDeleteLoading","externalSiteConditionExists","mounted","route","params","id","getConditions","getCampaign","getDiscordInfo","computed","plan","$store","getters","watch","twitter_account","value","twitter_account_check","twitter_account_result","indexOf","tweet_url","tweet_url_check","tweet_url_result","handler","_","i","length","deep","methods","$route","then","response","console","log","response_data","push","user_id","username","followers","tweet_id","text","error","$toast","show","type","position","duration","createFollowConditionPromise","Promise","resolve","createConditions","twitter_account_id","actions","createRetweetConditionPromise","conditions_tweet_url","deleteFollowConditionPromise","deletefollowConditions","deleteRetweetConditionPromise","deleteretweetConditions","createDiscordConditionPromise","guild_id","item_data_1","invite_url","deleteDiscordConditionPromise","deletediscordConditions","createWalletConditionPromise","deleteWalletConditionPromise","deleteWalletConditions","createExternalSiteConditionPromise","url","external_site_url","deleteExternalSiteConditionPromise","deleteExternalSiteConditions","getGifts","createGifts","gifts","$router","go","updateGifts","handleFileSelect","e","target","files","file","parseCSV","splice","split","map","row","getItemsDiscord"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignModifyConditions.vue"],"sourcesContent":["<template>\n  <div class=\"campaignModifyConditions\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- input panel -->\n    <RightColumnOutline>\n      <div\n        class=\"flex flex-wrap items-center justify-between -mx-4 mb-8 pb-6 border-b border-gray-400 border-opacity-3\"\n      >\n        <div class=\"w-auto px-4 mb-0\">\n          <h2\n            class=\"mb-6 md:text-3xl font-bold font-heading tracking-px-n leading-none md:max-w-xl mx-auto text-gray-100 text-left\"\n          >\n            Campaign Setting\n          </h2>\n          <div\n            v-if=\"campaign_category == 'FOLLOW_AND_RETWEET'\"\n            class=\"flex items-center justify-left\"\n          >\n            <div class=\"w-auto px-4 mb-0\">\n              <span class=\"text-sm font-medium text-gray-100\"\n                >キャンペーンURL\n                <i\n                  class=\"pi pi-question-circle mr-1\"\n                  v-tippy=\"{\n                    content:\n                      '利用者がキャンペーン参加条件を確認するページのURLです。キャンペーンを告知する際にご利用ください',\n                  }\"\n                ></i>\n              </span>\n            </div>\n            <div class=\"text-white text-sm w-auto\">\n              https://app.social-marketing.io/action-raffle/{{ campaign_id }}\n            </div>\n          </div>\n        </div>\n        <div class=\"w-auto px-4\"></div>\n      </div>\n      <!-- FOLLOW -->\n      <div>\n        <h4\n          class=\"text-xl font-bold tracking-wide text-white mb-5 text-left flex items-center\"\n        >\n          <img\n            class=\"w-8 mx-4\"\n            src=\"https://sociama-product-image.s3.ap-northeast-1.amazonaws.com/iconfinder-social-media-applications-6twitter-4102580_113802.png\"\n            alt=\"twitter_icon\"\n          />\n          FOLLOW\n        </h4>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n        >\n          <div class=\"w-1/3 pl-18 text-left\">\n            <span class=\"text-sm font-medium text-gray-100\"\n              >Twitterアカウント *\n            </span>\n          </div>\n          <div class=\"w-full sm:w-1/3 px-4\">\n            <div class=\"max-w-xl\">\n              <input\n                class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n                id=\"formInput1-3\"\n                type=\"text\"\n                v-model=\"twitter_account\"\n                placeholder=\"@username\"\n              />\n            </div>\n          </div>\n          <div class=\"w-1/4 px-4\">\n            <div class=\"max-w-xl\">\n              <DoButton\n                :clickFunction=\"checkTwitterAccountPromise\"\n                :values=\"{}\"\n                :disabled=\"!twitter_account || twitter_account_check\"\n                >アカウントチェック</DoButton\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"flex flex-wrap items-center -mx-4 mb-8\">\n          <div class=\"w-1/3 px-4 pb-4\"></div>\n          <div class=\"w-2/3 px-4\">\n            <div\n              v-if=\"twitter_account_result\"\n              class=\"max-w-xl text-gray-100 text-left\"\n            >\n              {{ twitter_account_result }}\n            </div>\n          </div>\n        </div>\n        <div class=\"mb-8\">\n          <DoButton\n            :clickFunction=\"createFollowConditionPromise\"\n            :values=\"{}\"\n            :disabled=\"!twitter_account_check\"\n            >登録</DoButton\n          >\n        </div>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-3\"\n        >\n          <div class=\"w-1/3 pl-18 text-left\">\n            <span class=\"text-sm font-medium text-gray-100\"> 登録済条件 </span>\n          </div>\n          <div class=\"w-2/3 px-4\">\n            <table class=\"w-full min-w-max\">\n              <thead>\n                <tr class=\"text-left\">\n                  <th class=\"p-0\">\n                    <div class=\"py-3 px-6 rounded-l-xl bg-gray-600\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"\n                        >username</span\n                      >\n                    </div>\n                  </th>\n                  <th class=\"p-0\">\n                    <div class=\"py-3 px-6 bg-gray-600\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"\n                        >user_id</span\n                      >\n                    </div>\n                  </th>\n                  <th class=\"p-0\">\n                    <div class=\"py-3 px-6 bg-gray-600\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"\n                        >followers</span\n                      >\n                    </div>\n                  </th>\n                  <th class=\"p-0\">\n                    <div class=\"py-6 px-6 bg-gray-600 rounded-r-xl\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"> </span>\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  v-for=\"twitter_account in conditions_twitter_account\"\n                  v-bind:key=\"twitter_account\"\n                >\n                  <td class=\"p-0\">\n                    <div class=\"flex items-center h-16 px-6\">\n                      <a\n                        class=\"text-sm text-blue-400 font-medium underline\"\n                        :href=\"\n                          'https://twitter.com/' + twitter_account.username\n                        \"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >{{ twitter_account.username }}</a\n                      >\n                    </div>\n                  </td>\n                  <td class=\"p-0\">\n                    <div class=\"flex items-center h-16 px-6\">\n                      <div class=\"flex h-full items-center\">\n                        <span class=\"text-sm font-medium text-gray-100\">{{\n                          twitter_account.user_id\n                        }}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td class=\"p-0\">\n                    <div class=\"flex items-center h-16 px-6\">\n                      <span class=\"text-sm text-gray-100 font-medium\">{{\n                        twitter_account.followers\n                      }}</span>\n                    </div>\n                  </td>\n                  <td class=\"p-0\">\n                    <BackButton\n                      :clickFunction=\"deleteFollowConditionPromise\"\n                      :values=\"twitter_account.user_id\"\n                      ><i class=\"pi pi-trash\"></i\n                    ></BackButton>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <!-- RETWEET -->\n      <div>\n        <h4\n          class=\"text-xl font-bold tracking-wide text-white mb-5 text-left flex items-center\"\n        >\n          <img\n            class=\"w-8 mx-4\"\n            src=\"https://sociama-product-image.s3.ap-northeast-1.amazonaws.com/iconfinder-social-media-applications-6twitter-4102580_113802.png\"\n            alt=\"twitter_icon\"\n          />\n          RETWEET\n        </h4>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n        >\n          <div class=\"w-1/3 px-4\">\n            <span class=\"text-sm font-medium text-gray-100\">Tweet URL </span>\n          </div>\n          <div class=\"w-1/3 px-4\">\n            <div class=\"max-w-xl\">\n              <input\n                class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n                type=\"text\"\n                v-model=\"tweet_url\"\n                placeholder=\"https://\"\n              />\n            </div>\n          </div>\n          <div class=\"w-1/4 px-4\">\n            <div class=\"max-w-xl\">\n              <DoButton\n                :clickFunction=\"checkTweetPromise\"\n                :values=\"{}\"\n                :disabled=\"!tweet_url || tweet_url_check\"\n                >ツイートチェック</DoButton\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"flex flex-wrap items-center -mx-4 pb-8\">\n          <div class=\"w-full sm:w-1/3 px-4 pb-4 sm:mb-0\">\n            <span class=\"text-sm font-medium text-gray-100\"></span>\n          </div>\n          <div class=\"w-full sm:w-2/3 px-4\">\n            <div\n              v-if=\"tweet_url_result\"\n              class=\"max-w-xl text-gray-100 text-left\"\n            >\n              {{ tweet_url_result }}\n            </div>\n          </div>\n        </div>\n        <div class=\"mb-8\">\n          <DoButton\n            :clickFunction=\"createRetweetConditionPromise\"\n            :values=\"{}\"\n            :disabled=\"!tweet_url_check\"\n            >登録</DoButton\n          >\n        </div>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-3\"\n        >\n          <div class=\"w-full sm:w-1/3 px-4 mb-4 sm:mb-0\">\n            <span class=\"text-sm font-medium text-gray-100\">登録済条件 </span>\n          </div>\n          <div class=\"w-2/3 px-4\">\n            <table class=\"w-full min-w-max\">\n              <thead>\n                <tr class=\"text-left\">\n                  <th class=\"p-0\">\n                    <div class=\"py-3 px-6 rounded-l-xl bg-gray-600\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"\n                        >tweet_id</span\n                      >\n                    </div>\n                  </th>\n                  <th class=\"p-0\">\n                    <div class=\"py-3 px-6 bg-gray-600\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"\n                        >user_name</span\n                      >\n                    </div>\n                  </th>\n                  <th class=\"p-0\">\n                    <div class=\"py-3 px-6 bg-gray-600\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"\n                        >text</span\n                      >\n                    </div>\n                  </th>\n                  <th class=\"p-0\">\n                    <div class=\"py-6 px-6 bg-gray-600 rounded-r-xl\">\n                      <span class=\"text-xs text-gray-300 font-semibold\"> </span>\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"tweet in conditions_tweet\" v-bind:key=\"tweet\">\n                  <td class=\"p-0\">\n                    <div class=\"flex items-center h-16 px-6\">\n                      <a\n                        class=\"text-sm text-blue-400 font-medium underline\"\n                        :href=\"\n                          'https://twitter.com/' +\n                          tweet.username +\n                          '/status/' +\n                          tweet.tweet_id\n                        \"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >{{ tweet.tweet_id }}</a\n                      >\n                    </div>\n                  </td>\n                  <td class=\"p-0\">\n                    <div class=\"flex items-center h-16 px-6\">\n                      <div class=\"flex h-full items-center\">\n                        <span class=\"text-sm font-medium text-gray-100\">{{\n                          tweet.username\n                        }}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td class=\"p-0\">\n                    <div class=\"flex items-center h-16 px-6\">\n                      <span class=\"text-sm text-gray-100 font-medium\">{{\n                        tweet.text.length < 10\n                          ? tweet.text\n                          : tweet.text.slice(0, 10) + \"...\"\n                      }}</span>\n                    </div>\n                  </td>\n                  <td class=\"p-0\">\n                    <BackButton\n                      :clickFunction=\"deleteRetweetConditionPromise\"\n                      :values=\"tweet.tweet_id\"\n                      ><i class=\"pi pi-trash\"></i\n                    ></BackButton>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <!-- DISCORD -->\n      <div\n        class=\"pb-8 mb-8 border-b border-gray-400 border-opacity-3\"\n        v-if=\"plan == 'GOLD'\"\n      >\n        <h4\n          class=\"text-xl font-bold tracking-wide text-white mb-5 text-left flex items-center\"\n        >\n          <img\n            class=\"w-8 mx-4\"\n            src=\"https://sociama-product-image.s3.ap-northeast-1.amazonaws.com/discord_icon_130958.png\"\n            alt=\"discord_icon\"\n          />\n          DISCORD\n        </h4>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n        >\n          <div class=\"w-full sm:w-1/3 px-4 mb-4 sm:mb-0\">\n            <span class=\"text-sm font-medium text-gray-100\"\n              >サーバーへの参加<i\n                class=\"pi pi-question-circle mx-1\"\n                v-tippy=\"{\n                  content:\n                    'Discordサーバーへの参加を条件にする場合、事前に外部サービス連携画面からDiscordサーバーとの連携が必要です',\n                }\"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n        >\n          <div class=\"w-full sm:w-1/3 px-4 mb-4 sm:mb-0\">\n            <span class=\"text-sm font-medium text-gray-100\"\n              >参加先サーバー\n            </span>\n          </div>\n          <div class=\"w-1/3\">\n            <div class=\"max-w-xl text-white text-left\">\n              <div v-if=\"discordGuild\" class=\"flex items-center justify-start\">\n                <img\n                  :src=\"\n                    'https://cdn.discordapp.com/icons/' +\n                    discordGuild.item_data_1 +\n                    '/' +\n                    discordGuild.item_data_3\n                  \"\n                  alt=\"discord_icon\"\n                  class=\"w-8 mx-4\"\n                />\n                {{ discordGuild.item_data_2 }}\n              </div>\n              <div v-else>Discordサーバーが未連携です</div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n        >\n          <div class=\"w-full sm:w-1/3 px-4 mb-4 sm:mb-0\">\n            <span class=\"text-sm font-medium text-gray-100\">招待URL </span>\n          </div>\n          <div class=\"w-1/3\">\n            <div class=\"max-w-xl text-white text-left\">\n              <div v-if=\"discordGuild\" class=\"flex items-center justify-start\">\n                <div class=\"\">\n                  <input\n                    class=\"block py-4 px-3 mx-4 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n                    type=\"text\"\n                    v-model=\"discordInviteUrl\"\n                    placeholder=\"https://\"\n                  />\n                </div>\n              </div>\n              <div v-else>Discordサーバーが未連携です</div>\n            </div>\n          </div>\n          <div class=\"w-1/4 px-4\">\n            <div class=\"max-w-xl\" v-if=\"!discordConditionExists\">\n              <DoButton\n                :clickFunction=\"createDiscordConditionPromise\"\n                :values=\"{}\"\n                :disabled=\"\n                  !discordConnect || discordConditionExists || !discordInviteUrl\n                \"\n                >キャンペーン条件に追加</DoButton\n              >\n            </div>\n            <div class=\"max-w-xl\" v-else>\n              <BackButton\n                :clickFunction=\"deleteDiscordConditionPromise\"\n                :values=\"{}\"\n                :disabled=\"!discordConditionExists\"\n                >キャンペーン条件に追加</BackButton\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- WALLET -->\n      <div\n        class=\"pb-8 mb-8 border-b border-gray-400 border-opacity-3\"\n        v-if=\"plan == 'GOLD'\"\n      >\n        <h4\n          class=\"text-xl font-bold tracking-wide text-white mb-5 text-left flex items-center\"\n        >\n          <img\n            class=\"w-8 mx-4\"\n            src=\"https://sociama-product-image.s3.ap-northeast-1.amazonaws.com/MetaMask_Fox.svg.png\"\n            alt=\"metamask_icon\"\n          />\n          WALLET\n        </h4>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n        >\n          <div class=\"w-full sm:w-1/3 px-4 mb-4 sm:mb-0\">\n            <span class=\"text-sm font-medium text-gray-100\"\n              >ウォレット連携（アドレス登録）<i\n                class=\"pi pi-question-circle mx-1\"\n                v-tippy=\"{\n                  content:\n                    'キャンペーン参加者がMetamaskウォレットを連携してERC20アドレスを登録することを条件とする項目です',\n                }\"\n              ></i>\n            </span>\n          </div>\n          <div class=\"w-1/3 px-4\"></div>\n          <div class=\"w-1/4 px-4\">\n            <div class=\"max-w-xl\" v-if=\"!walletConditionExists\">\n              <button\n                class=\"inline-block py-4 px-4 text-xs text-center font-semibold leading-normal rounded-lg transition duration-200 w-48\"\n                :class=\"\n                  !walletConnectLoading && !walletConditionExists\n                    ? 'text-blue-50 bg-blue-500 hover:bg-blue-600'\n                    : 'text-gray-300 bg-gray-700 hover:bg-gray-800'\n                \"\n                :disabled=\"walletConnectLoading || walletConditionExists\"\n                @click=\"createWalletCondition()\"\n              >\n                <i\n                  class=\"pi pi-spin pi-spinner text-xs\"\n                  v-if=\"walletConnectLoading\"\n                ></i>\n                キャンペーン条件に追加\n              </button>\n            </div>\n            <div class=\"max-w-xl\" v-else>\n              <button\n                class=\"inline-block py-4 px-4 text-xs text-center font-semibold leading-normal rounded-lg transition duration-200 w-48\"\n                :class=\"\n                  !walletDisconnectLoading && walletConditionExists\n                    ? 'text-blue-50 bg-red-500 hover:bg-red-600'\n                    : 'text-gray-300 bg-red-700 hover:bg-red-800'\n                \"\n                :disabled=\"walletDisconnectLoading || !walletConditionExists\"\n                @click=\"deleteWalletCondition()\"\n              >\n                <i\n                  class=\"pi pi-spin pi-spinner text-xs\"\n                  v-if=\"walletDisconnectLoading\"\n                ></i>\n                キャンペーン条件から削除\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 外部サイトリンク -->\n      <div\n        class=\"pb-8 mb-8 border-b border-gray-400 border-opacity-3\"\n        v-if=\"plan == 'GOLD'\"\n      >\n        <h4\n          class=\"text-xl font-bold tracking-wide text-white mb-5 text-left flex items-center\"\n        >\n          <i class=\"w-8 ml-6 pi pi-sign-out\"></i>\n          外部サイト\n        </h4>\n        <div\n          class=\"flex flex-wrap items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n        >\n          <div class=\"w-full sm:w-1/3 px-4 mb-4 sm:mb-0\">\n            <span class=\"text-sm font-medium text-gray-100\"\n              >外部サイトURL<i\n                class=\"pi pi-question-circle mx-1\"\n                v-tippy=\"{\n                  content:\n                    '登録された外部リンクに遷移することを条件として設定することができます。',\n                }\"\n              ></i>\n            </span>\n          </div>\n          <div class=\"w-1/3\">\n            <div class=\"max-w-xl text-white text-left\">\n              <div class=\"flex items-center justify-start\">\n                <div class=\"\">\n                  <input\n                    class=\"block py-4 px-3 mx-4 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n                    type=\"text\"\n                    v-model=\"externalSiteUrl\"\n                    placeholder=\"https://\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"w-1/4 px-4\">\n            <div class=\"max-w-xl\" v-if=\"!externalSiteConditionExists\">\n              <button\n                class=\"inline-block py-4 px-4 text-xs text-center font-semibold leading-normal rounded-lg transition duration-200 w-48\"\n                :class=\"\n                  !externalSiteRegistLoading &&\n                  !externalSiteConditionExists &&\n                  externalSiteUrl != ''\n                    ? 'text-blue-50 bg-blue-500 hover:bg-blue-600'\n                    : 'text-gray-300 bg-gray-700 hover:bg-gray-800'\n                \"\n                :disabled=\"\n                  externalSiteRegistLoading ||\n                  externalSiteConditionExists ||\n                  !externalSiteUrl\n                \"\n                @click=\"createExternalSiteCondition(externalSiteUrl)\"\n              >\n                <i\n                  class=\"pi pi-spin pi-spinner text-xs\"\n                  v-if=\"externalSiteRegistLoading\"\n                ></i>\n                キャンペーン条件に追加\n              </button>\n            </div>\n            <div class=\"max-w-xl\" v-else>\n              <button\n                class=\"inline-block py-4 px-4 text-xs text-center font-semibold leading-normal rounded-lg transition duration-200 w-48\"\n                :class=\"\n                  externalSiteConditionExists && !externalSiteDeleteLoading\n                    ? 'text-blue-50 bg-red-500 hover:bg-red-600'\n                    : 'text-gray-300 bg-red-700 hover:bg-red-800'\n                \"\n                :disabled=\"\n                  !externalSiteConditionExists || externalSiteDeleteLoading\n                \"\n                @click=\"deleteExternalSiteCondition()\"\n              >\n                <i\n                  class=\"pi pi-spin pi-spinner text-xs\"\n                  v-if=\"externalSiteDeleteLoading\"\n                ></i>\n                キャンペーン条件から削除\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- REWORD -->\n      <div>\n        <div class=\"flex justify-between\">\n          <h4 class=\"text-xl font-bold tracking-wide text-white mb-8 text-left\">\n            REWARD\n          </h4>\n          <input\n            class=\"text-white mr-4\"\n            type=\"file\"\n            accept=\"text/csv\"\n            @change=\"handleFileSelect\"\n          />\n        </div>\n        <div class=\"flex flex-wrap justify-center items-center -mx-4\">\n          <div class=\"text-white\">No</div>\n          <div class=\"w-full sm:w-1/3 px-4\">\n            <div class=\"max-w-xl\">\n              <a\n                class=\"block py-4 px-3 w-full text-sm text-gray-50 font-medium outline-none\"\n                >ラベル</a\n              >\n            </div>\n          </div>\n          <div class=\"w-full sm:w-1/2 px-4\">\n            <div class=\"max-w-xl\">\n              <a\n                class=\"block py-4 px-3 w-full text-sm text-gray-50 font-medium outline-none\"\n                >ギフトコード</a\n              >\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"flex flex-wrap justify-center items-center -mx-4 mb-4 border-gray-400 border-opacity-20\"\n          v-for=\"(reword, index) in reword_list\"\n          v-bind:key=\"reword.code\"\n        >\n          <div class=\"text-white\">{{ index + 1 }}</div>\n          <div class=\"w-full sm:w-1/3 px-4\">\n            <div class=\"max-w-xl\">\n              <input\n                class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n                id=\"formInput1-3\"\n                type=\"text\"\n                v-model=\"reword[0]\"\n                placeholder=\"label\"\n              />\n            </div>\n          </div>\n          <div class=\"w-full sm:w-1/2 px-4\">\n            <div class=\"max-w-xl\">\n              <input\n                class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n                id=\"formInput1-3\"\n                type=\"text\"\n                v-model=\"reword[1]\"\n                placeholder=\"code\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"mb-8\">\n          <button\n            class=\"inline-block py-2 px-4 text-xs text-center font-semibold leading-normal rounded-lg transition duration-200 mt-4\"\n            :class=\"\n              gift_filled && !gift_loading\n                ? 'text-blue-50 bg-blue-500 hover:bg-blue-600'\n                : 'text-gray-300 bg-gray-700 hover:bg-gray-800'\n            \"\n            :disabled=\"!gift_filled || gift_loading\"\n            v-if=\"!reword_update\"\n            @click=\"createGifts\"\n          >\n            <i class=\"pi pi-spin pi-spinner text-xs\" v-if=\"gift_loading\"></i>\n\n            登録\n          </button>\n          <button\n            class=\"inline-block py-2 px-4 text-xs text-center font-semibold leading-normal rounded-lg transition duration-200 mt-4\"\n            :class=\"\n              gift_filled && !gift_loading\n                ? 'text-blue-50 bg-blue-500 hover:bg-blue-600'\n                : 'text-gray-300 bg-gray-700 hover:bg-gray-800'\n            \"\n            :disabled=\"!gift_filled || gift_loading\"\n            v-if=\"reword_update\"\n            @click=\"updateGifts\"\n          >\n            <i class=\"pi pi-spin pi-spinner text-xs\" v-if=\"gift_loading\"></i>\n\n            変更\n          </button>\n        </div>\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nimport api from \"../api/api.js\";\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport checks from \"../assets/mixins/Checks\";\n\nexport default {\n  name: \"Campaign_regit\",\n  mixins: [checks],\n  components: {\n    SideVar,\n  },\n  setup() {\n    let date = ref();\n    return {\n      date,\n    };\n  },\n  data() {\n    return {\n      campaign_id: null,\n      conditions_twitter_account: [],\n      conditions_tweet: [],\n      reword_amount: null,\n      reword_list: [],\n      gift_filled: false,\n      reword_update: false,\n      campaign_category: null,\n\n      account_loading: false,\n      tweet_loading: false,\n      account_regist_loading: false,\n      tweet_regist_loading: false,\n      delete_loading: false,\n      gift_loading: false,\n\n      discordGuild: null,\n      discordInviteUrl: \"\",\n      discordConnect: false,\n      discordConditionExists: false,\n      discordConnectLoading: false,\n      discordDisconnectLoading: false,\n\n      walletConditionExists: false,\n      walletConnectLoading: false,\n      walletDisconnectLoading: false,\n\n      externalSiteUrl: \"\",\n      externalSiteRegistLoading: false,\n      externalSiteDeleteLoading: false,\n      externalSiteConditionExists: false,\n    };\n  },\n  mounted() {\n    const route = useRoute();\n    this.campaign_id = route.params.id;\n    this.getConditions();\n    this.getCampaign();\n    this.getDiscordInfo();\n  },\n  computed: {\n    plan: function () {\n      return this.$store.getters[\"subscribePlan\"];\n    },\n  },\n  watch: {\n    // twitterアカウントのテキストボックス\n    twitter_account(value) {\n      this.twitter_account_check = false;\n      this.twitter_account_result = \"\";\n      if (value.indexOf(\"@\")) {\n        this.twitter_account = \"@\" + value;\n      }\n    },\n    // tweet URLのテキストボックス\n    tweet_url() {\n      this.tweet_url_check = false;\n      this.tweet_url_result = \"\";\n    },\n    reword_list: {\n      handler() {\n        let _ = true;\n        for (var i = 0; i < this.reword_list.length; i++) {\n          if (this.reword_list[i][0].length == 0) {\n            this.gift_filled = false;\n            _ = false;\n            break;\n          }\n          if (this.reword_list[i][1].length == 0) {\n            this.gift_filled = false;\n            _ = false;\n            break;\n          }\n        }\n        if (_ == true) {\n          this.gift_filled = true;\n        }\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    getConditions: function () {\n      this.conditions_tweet = [];\n      this.conditions_twitter_account = [];\n      this.discordConditionExists = false;\n      this.walletConditionExists = false;\n      this.externalSiteConditionExists = false;\n      this.externalSiteUrl = \"\";\n      api\n        .getConditions({ campaign_id: this.$route.params.id })\n        .then((response) => {\n          console.log(response);\n          let response_data = response[\"data\"];\n          for (var i in response_data) {\n            if (response_data[i][\"actions\"] == \"FOLLOW\") {\n              this.conditions_twitter_account.push({\n                user_id: response_data[i][\"user_id\"],\n                username: response_data[i][\"username\"],\n                followers: response_data[i][\"followers\"],\n              });\n            } else if (response_data[i][\"actions\"] == \"RETWEET\") {\n              this.conditions_tweet.push({\n                tweet_id: response_data[i][\"tweet_id\"],\n                username: response_data[i][\"username\"],\n                text: response_data[i][\"text\"],\n              });\n            } else if (response_data[i][\"actions\"] == \"DISCORD_SERVER_JOIN\") {\n              this.discordConditionExists = true;\n              this.discordInviteUrl = response_data[i][\"invite_url\"];\n            } else if (response_data[i][\"actions\"] == \"WALLET_CONNECT\") {\n              this.walletConditionExists = true;\n            } else if (response_data[i][\"actions\"] == \"EXTERNAL_SITE_VISIT\") {\n              this.externalSiteConditionExists = true;\n              this.externalSiteUrl = response_data[i][\"external_site_url\"];\n            }\n          }\n        })\n        .catch((error) => {\n          console.log(\"error: \", error);\n          this.$toast.show(\n            \"条件の取得に失敗しました。時間を置いて再度お試しください。\",\n            {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            }\n          );\n        });\n    },\n    createFollowConditionPromise() {\n      return new Promise((resolve) => {\n        api\n          .createConditions({\n            campaign_id: this.$route.params.id,\n            user_id: this.twitter_account_id,\n            actions: \"FOLLOW\",\n          })\n          .then(() => {\n            this.twitter_account = \"@\";\n            this.twitter_account_check = false;\n            this.getConditions();\n            this.$toast.show(\"フォロー条件の追加が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"フォロー条件の追加に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            this.twitter_account_check = false;\n            resolve(\"rejected\");\n          });\n      });\n    },\n    createRetweetConditionPromise() {\n      return new Promise((resolve) => {\n        api\n          .createConditions({\n            campaign_id: this.$route.params.id,\n            tweet_id: this.tweet_id,\n            actions: \"RETWEET\",\n          })\n          .then(() => {\n            this.conditions_tweet_url = [];\n            this.tweet_url = \"\";\n            this.tweet_url_check = false;\n            this.getConditions();\n            this.$toast.show(\"リツイート条件の追加が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"リツイート条件の追加に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    deleteFollowConditionPromise(user_id) {\n      return new Promise((resolve) => {\n        api\n          .deletefollowConditions({\n            campaign_id: this.$route.params.id,\n            user_id: user_id,\n          })\n          .then(() => {\n            this.twitter_account = \"@\";\n            this.twitter_account_check = false;\n            this.$toast.show(\"フォロー条件の削除が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            this.getConditions();\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"フォロー条件の削除に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    deleteRetweetConditionPromise(tweet_id) {\n      return new Promise((resolve) => {\n        api\n          .deleteretweetConditions({\n            campaign_id: this.$route.params.id,\n            tweet_id: tweet_id,\n          })\n          .then(() => {\n            this.tweet_url = \"\";\n            this.tweet_url_check = false;\n            this.$toast.show(\"リツイート条件の削除が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            this.getConditions();\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"リツイート条件の削除に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    createDiscordConditionPromise() {\n      return new Promise((resolve) => {\n        api\n          .createConditions({\n            campaign_id: this.$route.params.id,\n            guild_id: this.discordGuild.item_data_1,\n            actions: \"DISCORD_SERVER_JOIN\",\n            invite_url: this.discordInviteUrl,\n          })\n          .then(() => {\n            this.getConditions();\n            this.$toast.show(\"Discord条件の追加が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"Discord条件の追加に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    deleteDiscordConditionPromise() {\n      return new Promise((resolve) => {\n        api\n          .deletediscordConditions({\n            campaign_id: this.$route.params.id,\n            guild_id: this.discordGuild.item_data_1,\n          })\n          .then(() => {\n            this.$toast.show(\"Discord条件の削除が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            this.getConditions();\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"Discord条件の削除に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    createWalletConditionPromise() {\n      return new Promise((resolve) => {\n        api\n          .createConditions({\n            campaign_id: this.$route.params.id,\n            actions: \"WALLET_CONNECT\",\n          })\n          .then(() => {\n            this.getConditions();\n            this.$toast.show(\"Wallet条件の追加が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"Wallet条件の追加に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    deleteWalletConditionPromise() {\n      return new Promise((resolve) => {\n        api\n          .deleteWalletConditions({\n            campaign_id: this.$route.params.id,\n          })\n          .then(() => {\n            this.$toast.show(\"Wallet条件の削除が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            this.getConditions();\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"Wallet条件の削除に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    createExternalSiteConditionPromise(url) {\n      return new Promise((resolve) => {\n        api\n          .createConditions({\n            campaign_id: this.$route.params.id,\n            external_site_url: url,\n            actions: \"EXTERNAL_SITE_VISIT\",\n          })\n          .then(() => {\n            this.getConditions();\n            this.$toast.show(\"外部サイト条件の追加が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"外部サイト条件の追加に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    deleteExternalSiteConditionPromise() {\n      return new Promise((resolve) => {\n        api\n          .deleteExternalSiteConditions({\n            campaign_id: this.$route.params.id,\n          })\n          .then(() => {\n            this.$toast.show(\"外部サイト条件の削除が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            this.getConditions();\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"外部サイト条件の削除に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n    getCampaign() {\n      api\n        .getCampaign({ id: this.$route.params.id })\n        .then((response) => {\n          this.campaign_category = response[\"data\"][0][\"category\"];\n          this.reword_amount = response[\"data\"][0][\"amount\"];\n          for (var i = 0; i < this.reword_amount; i++) {\n            this.reword_list.push([\"\", \"\", \"\"]);\n          }\n          api\n            .getGifts({\n              campaign_id: this.$route.params.id,\n            })\n            .then((response) => {\n              console.log(response);\n              if (response[\"data\"].length != 0) {\n                for (var i = 0; i < this.reword_amount; i++) {\n                  this.reword_list[i][0] = response[\"data\"][i][\"label\"];\n                  this.reword_list[i][1] = response[\"data\"][i][\"code\"];\n                  this.reword_list[i][2] = response[\"data\"][i][\"gift_id\"];\n                  this.reword_update = true;\n                }\n              }\n            })\n            .catch((error) => {\n              this.$toast.show(\"ギフトの取得に失敗しました\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000,\n              });\n              console.log(\"error: \", error);\n            });\n        })\n        .catch((error) => {\n          this.$toast.show(\"キャンペーンの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          console.log(\"error: \", error);\n        });\n    },\n    createGifts() {\n      this.gift_loading = true;\n      api\n        .createGifts({\n          campaign_id: this.$route.params.id,\n          gifts: this.reword_list,\n        })\n        .then(() => {\n          this.$toast.show(\"ギフトの登録が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000,\n          });\n          this.gift_loading = false;\n          this.$router.go({\n            name: \"addConditions\",\n            params: { id: this.$route.params.id },\n          });\n        })\n        .catch((error) => {\n          this.$toast.show(\"ギフトの登録に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          console.log(\"error: \", error);\n          this.gift_loading = false;\n        });\n    },\n    updateGifts() {\n      this.gift_loading = true;\n      api\n        .updateGifts({\n          campaign_id: this.$route.params.id,\n          gifts: this.reword_list,\n        })\n        .then(() => {\n          this.$toast.show(\"ギフトの変更が完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000,\n          });\n          this.gift_loading = false;\n          this.$router.go({\n            name: \"addConditions\",\n            params: { id: this.$route.params.id },\n          });\n        })\n        .catch((error) => {\n          this.$toast.show(\"ギフトの変更に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          console.log(\"error: \", error);\n          this.gift_loading = false;\n        });\n    },\n    async handleFileSelect(e) {\n      // 読み込んだCSVファイルを配列に変換\n      const file = this.parseCSV(await e.target.files[0].text());\n\n      // フォーマットチェック\n      // 行数チェック\n      if (file.length != this.reword_amount) {\n        this.$toast.show(\n          \"CSVのデータ数が一致しません。ヘッダーなしでデータ行の数をギフトの数と一致させてください\",\n          {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          }\n        );\n        return;\n      }\n      // 列数チェック\n      for (let i = 0; i < this.reword_list.length; i++) {\n        if (file[i].length != 2) {\n          this.$toast.show(\n            \"CSVのデータ数が一致しません。各行は ラベル, コード の２列のみ入力してください\",\n            {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            }\n          );\n          return;\n        }\n      }\n\n      for (let i = 0; i < this.reword_list.length; i++) {\n        this.reword_list[i][0] = file[i][0];\n        this.reword_list[i][1] = file[i][1];\n      }\n      this.reword_list.splice;\n      this.$toast.show(\"CSVの読み込みが完了しました\", {\n        type: \"success\",\n        position: \"top-right\",\n        duration: 3000,\n      });\n    },\n    parseCSV(data) {\n      return data.split(\"\\n\").map((row) => row.split(\",\"));\n    },\n    getDiscordInfo() {\n      api\n        .getItemsDiscord()\n        .then((response) => {\n          console.log(response);\n          if (response.data.length != 0) {\n            this.discordGuild = response.data[0];\n            this.discordConnect = true;\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n          this.$toast.show(\"Discordのデータ取得に失敗しました\", {\n            type: \"error\",\n            position: \"top\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}