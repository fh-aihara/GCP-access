{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport api from \"../api/api.js\";\n// import { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport RankingPanel from \"../components/layout/RankingComponent.vue\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts,\n    RankingPanel: RankingPanel,\n    Datepicker: Datepicker\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var today, toDate, fromDate;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // const route = useRoute();\n            _this.getDiscordSummary();\n            // 日付の最小〜最大を計算する処理\n            today = new Date();\n            toDate = new Date(new Date().setDate(today.getDate()));\n            fromDate = new Date(new Date().setDate(toDate.getDate() - 30));\n            _this.date.value = [fromDate, toDate];\n            console.log(_this.date);\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      date: null,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\"\n        },\n        title: {\n          text: \"\",\n          align: \"left\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false\n            }\n          },\n          yaxis: {\n            lines: {\n              show: false\n            }\n          }\n        }\n      },\n      dailycountSeries: []\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordSummary: function getDiscordSummary() {\n      var _this2 = this;\n      api.getDiscordSummary().then(function (response) {\n        console.log(response);\n        _this2.dailycountOptions.xaxis.categories = response[\"data\"][\"categories\"];\n        for (var i = 0; i < response[\"data\"][\"name\"].length; i++) {\n          _this2.dailycountSeries.push({\n            name: response[\"data\"][\"name\"][i],\n            data: response[\"data\"][\"data\"][i]\n          });\n        }\n      })[\"catch\"](function () {\n        _this2.$toast.show(\"分析データの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["api","VueApexCharts","RankingPanel","Datepicker","name","components","apexchart","mounted","getDiscordSummary","today","Date","toDate","setDate","getDate","fromDate","date","value","console","log","data","chart_height","window","innerHeight","chart_width","innerWidth","dailycountOptions","chart","id","type","title","text","align","dataLabels","enabled","xaxis","categories","labels","style","colors","yaxis","legend","show","grid","lines","dailycountSeries","computed","methods","then","response","i","length","push","$toast","position","duration"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/DiscordSummary.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Discord Summary</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          コミュニティの状況を確認しましょう\n        </div>\n        <div class=\"text-xs text-white flex items-center\">\n          <div class=\"mr-4\">表示期間</div>\n          <div><Datepicker v-model=\"date\" range /></div>\n        </div>\n      </div>\n      <div class=\"px-4\">\n        <div class=\"text-left grid grid-cols-3 mt-3\">\n          <div v-for=\"dailycount in dailycountSeries\" :key=\"dailycount\">\n            <p class=\"text-lg text-gray-200 font-semibold mb-3 mt-3\">\n              {{ dailycount[\"name\"] }}\n            </p>\n            <div v-if=\"dailycountOptions.xaxis.categories.length > 0\">\n              <div\n                v-if=\"\n                  dailycount['name'] == '被メンションランカー' ||\n                  dailycount['name'] == 'メンションランカー' ||\n                  dailycount['name'] == 'リアクションランカー'\n                \"\n              >\n                <div>\n                  <RankingPanel\n                    :panelClass=\"''\"\n                    :ranking=\"dailycount['data']\"\n                  ></RankingPanel>\n                </div>\n              </div>\n              <div v-else>\n                <apexchart\n                  :width=\"full\"\n                  :height=\"chart_height\"\n                  :title=\"dailycount.name\"\n                  :options=\"dailycountOptions\"\n                  :series=\"[dailycount]\"\n                ></apexchart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\n// import { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport RankingPanel from \"../components/layout/RankingComponent.vue\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts,\n    RankingPanel,\n    Datepicker,\n  },\n  async mounted() {\n    // const route = useRoute();\n    this.getDiscordSummary();\n    // 日付の最小〜最大を計算する処理\n    const today = new Date();\n    let toDate = new Date(new Date().setDate(today.getDate()));\n    let fromDate = new Date(new Date().setDate(toDate.getDate() - 30));\n    this.date.value = [fromDate, toDate];\n    console.log(this.date);\n  },\n  data() {\n    return {\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      date: null,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\",\n        },\n        title: {\n          text: \"\",\n          align: \"left\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false,\n            },\n          },\n          yaxis: {\n            lines: {\n              show: false,\n            },\n          },\n        },\n      },\n      dailycountSeries: [],\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordSummary() {\n      api\n        .getDiscordSummary()\n        .then((response) => {\n          console.log(response);\n          this.dailycountOptions.xaxis.categories =\n            response[\"data\"][\"categories\"];\n          for (let i = 0; i < response[\"data\"][\"name\"].length; i++) {\n            this.dailycountSeries.push({\n              name: response[\"data\"][\"name\"][i],\n              data: response[\"data\"][\"data\"][i],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"分析データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}