{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport api from \"../api/api.js\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  name: \"tableView\",\n  components: {},\n  setup: function setup() {\n    var sortBy = \"count_actions\";\n    var sortType = \"desc\";\n    var headers = [{\n      text: \"チャンネル名\",\n      value: \"channel_name\"\n    }, {\n      text: \"アクション数\",\n      value: \"count_actions\",\n      sortable: true,\n      width: 150\n    }, {\n      text: \"メッセージ数\",\n      value: \"count_messages\",\n      sortable: true,\n      width: 150\n    }, {\n      text: \"リアクション数\",\n      value: \"count_reactions\",\n      sortable: true,\n      width: 150\n    }, {\n      text: \"メッセージ人数\",\n      value: \"count_message_users\",\n      sortable: true,\n      width: 150\n    }, {\n      text: \"リアクション人数\",\n      value: \"count_reaction_users\",\n      sortable: true,\n      width: 150\n    }];\n    var items = ref([]);\n    onMounted(function () {});\n    return {\n      headers: headers,\n      items: items,\n      sortBy: sortBy,\n      sortType: sortType\n    };\n  },\n  mounted: function mounted() {\n    this.show_flag = true;\n  },\n  watch: {},\n  data: function data() {\n    return {\n      show_flag: false,\n      selectedTable: \"\",\n      optionTables: [{\n        id: 1,\n        name: \"events\"\n      }, {\n        id: 2,\n        name: \"users\"\n      }, {\n        id: 3,\n        name: \"age_verifications\"\n      }, {\n        id: 4,\n        name: \"user_photos\"\n      }, {\n        id: 5,\n        name: \"chat_rooms\"\n      }, {\n        id: 6,\n        name: \"chat_room_user\"\n      }, {\n        id: 7,\n        name: \"friends\"\n      }, {\n        id: 8,\n        name: \"messages\"\n      }, {\n        id: 9,\n        name: \"areas\"\n      }, {\n        id: 10,\n        name: \"theme\"\n      }, {\n        id: 11,\n        name: \"participants\"\n      }, {\n        id: 12,\n        name: \"user_opinions\"\n      }, {\n        id: 13,\n        name: \"blocks\"\n      }]\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordChannels: function getDiscordChannels() {\n      var _this = this;\n      api.getDiscordChannels({\n        data_from: this.date[0].toISOString().slice(0, 10),\n        data_to: this.date[1].toISOString().slice(0, 10)\n      }).then(function (response) {\n        console.log(response);\n        for (var i = 0; i < response[\"data\"].length; i++) {\n          _this.items.push({\n            channel_name: response[\"data\"][i][\"channel_name\"],\n            count_actions: response[\"data\"][i][\"count_messages\"] + response[\"data\"][i][\"count_reactions\"],\n            count_messages: response[\"data\"][i][\"count_messages\"],\n            count_reactions: response[\"data\"][i][\"count_reactions\"],\n            count_message_users: response[\"data\"][i][\"count_message_users\"],\n            count_reaction_users: response[\"data\"][i][\"count_reaction_users\"]\n          });\n        }\n      })[\"catch\"](function () {\n        _this.$toast.show(\"分析データの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["api","ref","onMounted","name","components","setup","sortBy","sortType","headers","text","value","sortable","width","items","mounted","show_flag","watch","data","selectedTable","optionTables","id","computed","methods","getDiscordChannels","data_from","date","toISOString","slice","data_to","then","response","console","log","i","length","push","channel_name","count_actions","count_messages","count_reactions","count_message_users","count_reaction_users","$toast","show","type","position","duration"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/TableView.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Table View</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          データベースの中身を参照・更新することができます。現状作成・削除の機能はありません。\n        </div>\n      </div>\n      <div>\n        <select v-model=\"selectedFruits\">\n          <option disabled value=\"\">aaaaa</option>\n          <option\n            v-for=\"table in optionTables\"\n            v-bind:value=\"table.name\"\n            v-bind:key=\"table.id\"\n          ></option>\n        </select>\n      </div>\n      <div class=\"m-4 p-2\">\n        <EasyDataTable\n          :headers=\"headers\"\n          :items=\"items\"\n          :sort-by=\"sortBy\"\n          :sort-type=\"sortType\"\n        />\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"tableView\",\n  components: {},\n  setup() {\n    const sortBy = \"count_actions\";\n    const sortType = \"desc\";\n    const headers = [\n      { text: \"チャンネル名\", value: \"channel_name\" },\n      {\n        text: \"アクション数\",\n        value: \"count_actions\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"メッセージ数\",\n        value: \"count_messages\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"リアクション数\",\n        value: \"count_reactions\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"メッセージ人数\",\n        value: \"count_message_users\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"リアクション人数\",\n        value: \"count_reaction_users\",\n        sortable: true,\n        width: 150,\n      },\n    ];\n\n    let items = ref([]);\n\n    onMounted(() => {});\n    return {\n      headers,\n      items,\n      sortBy,\n      sortType,\n    };\n  },\n  mounted() {\n    this.show_flag = true;\n  },\n  watch: {},\n  data() {\n    return {\n      show_flag: false,\n      selectedTable: \"\",\n      optionTables: [\n        { id: 1, name: \"events\" },\n        { id: 2, name: \"users\" },\n        { id: 3, name: \"age_verifications\" },\n        { id: 4, name: \"user_photos\" },\n        { id: 5, name: \"chat_rooms\" },\n        { id: 6, name: \"chat_room_user\" },\n        { id: 7, name: \"friends\" },\n        { id: 8, name: \"messages\" },\n        { id: 9, name: \"areas\" },\n        { id: 10, name: \"theme\" },\n        { id: 11, name: \"participants\" },\n        { id: 12, name: \"user_opinions\" },\n        { id: 13, name: \"blocks\" },\n      ],\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordChannels() {\n      api\n        .getDiscordChannels({\n          data_from: this.date[0].toISOString().slice(0, 10),\n          data_to: this.date[1].toISOString().slice(0, 10),\n        })\n        .then((response) => {\n          console.log(response);\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              channel_name: response[\"data\"][i][\"channel_name\"],\n              count_actions:\n                response[\"data\"][i][\"count_messages\"] +\n                response[\"data\"][i][\"count_reactions\"],\n              count_messages: response[\"data\"][i][\"count_messages\"],\n              count_reactions: response[\"data\"][i][\"count_reactions\"],\n              count_message_users: response[\"data\"][i][\"count_message_users\"],\n              count_reaction_users: response[\"data\"][i][\"count_reaction_users\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"分析データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}