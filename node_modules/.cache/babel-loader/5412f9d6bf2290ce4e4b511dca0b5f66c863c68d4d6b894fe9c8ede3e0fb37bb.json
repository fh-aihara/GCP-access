{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"campaign_analize\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"flex justify-between items-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \" データベースの中身を参照・更新することができます。現状作成・削除の機能はありません。 \")], -1 /* HOISTED */);\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"果物一覧\", -1 /* HOISTED */);\nvar _hoisted_4 = [\"value\"];\nvar _hoisted_5 = {\n  \"class\": \"m-4 p-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SideVar = _resolveComponent(\"SideVar\");\n  var _component_PageTitle = _resolveComponent(\"PageTitle\");\n  var _component_EasyDataTable = _resolveComponent(\"EasyDataTable\");\n  var _component_RightColumnOutline = _resolveComponent(\"RightColumnOutline\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" side var  \"), _createVNode(_component_SideVar), _createCommentVNode(\" main div \"), _createVNode(_component_RightColumnOutline, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_PageTitle, null, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(\"Table View\")];\n        }),\n        _: 1 /* STABLE */\n      }), _hoisted_2, _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.selectedFruits = $event;\n        })\n      }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.optionFruits, function (fruit) {\n        return _openBlock(), _createElementBlock(\"option\", {\n          value: fruit.name,\n          key: fruit.id\n        }, _toDisplayString(_ctx.Fruit.name), 9 /* TEXT, PROPS */, _hoisted_4);\n      }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedFruits]])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_EasyDataTable, {\n        headers: $setup.headers,\n        items: $setup.items,\n        \"sort-by\": $setup.sortBy,\n        \"sort-type\": $setup.sortType\n      }, null, 8 /* PROPS */, [\"headers\", \"items\", \"sort-by\", \"sort-type\"])])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;EACO,SAAM;AAAkB;8BAMzBA,oBAIM;EAJD,SAAM;AAAmC,iBAC5CA,oBAEM;EAFD,SAAM;AAAmC,GAAC,8CAE/C;8BAIEA,oBAAuC;EAA/BC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,MAAI;;;EAU7B,SAAM;AAAS;;;;;;uBAvBxBC,oBAgCM,OAhCNC,UAgCM,GA/BJC,kCAAkB,EAClBC,aAAWC,qBACXF,iCAAiB,EACjBC,aA2BqBE;wBA1BnB;MAAA,OAAiC,CAAjCF,aAAiCG;4BAAtB;UAAA,OAAU,kBAAV,YAAU;;;UACrBC,UAIM,EACNV,oBAWM,8BAVJA,oBASS;;iBATQW,oBAAc;QAAA;UAC7BC,UAAuC,qBACvCT,oBAMSU,6BALSF,kBAAY,YAArBG,KAAK;6BADdX,oBAMS;UAJAD,KAAK,EAAEY,KAAK,CAACC,IAAI;UACjBC,GAAG,EAAEF,KAAK,CAACG;4BAEfC,UAAK,CAACH,IAAI;+EAPAJ,oBAAc,OAWjCX,oBAOM,OAPNmB,UAOM,GANJb,aAKEc;QAJCC,OAAO,EAAEC,cAAO;QAChBC,KAAK,EAAED,YAAK;QACZ,SAAO,EAAEA,aAAM;QACf,WAAS,EAAEA","names":["_createElementVNode","disabled","value","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_SideVar","_component_RightColumnOutline","_component_PageTitle","_hoisted_2","$data","_hoisted_3","_Fragment","fruit","name","key","id","_ctx","_hoisted_5","_component_EasyDataTable","headers","$setup","items"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/TableView.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Table View</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          データベースの中身を参照・更新することができます。現状作成・削除の機能はありません。\n        </div>\n      </div>\n      <div>\n        <select v-model=\"selectedFruits\">\n          <option disabled value=\"\">果物一覧</option>\n          <option\n            v-for=\"fruit in optionFruits\"\n            v-bind:value=\"fruit.name\"\n            v-bind:key=\"fruit.id\"\n          >\n            {{ Fruit.name }}\n          </option>\n        </select>\n      </div>\n      <div class=\"m-4 p-2\">\n        <EasyDataTable\n          :headers=\"headers\"\n          :items=\"items\"\n          :sort-by=\"sortBy\"\n          :sort-type=\"sortType\"\n        />\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"tableView\",\n  components: {},\n  setup() {\n    const sortBy = \"count_actions\";\n    const sortType = \"desc\";\n    const headers = [\n      { text: \"チャンネル名\", value: \"channel_name\" },\n      {\n        text: \"アクション数\",\n        value: \"count_actions\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"メッセージ数\",\n        value: \"count_messages\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"リアクション数\",\n        value: \"count_reactions\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"メッセージ人数\",\n        value: \"count_message_users\",\n        sortable: true,\n        width: 150,\n      },\n      {\n        text: \"リアクション人数\",\n        value: \"count_reaction_users\",\n        sortable: true,\n        width: 150,\n      },\n    ];\n\n    let items = ref([]);\n\n    onMounted(() => {});\n    return {\n      headers,\n      items,\n      sortBy,\n      sortType,\n    };\n  },\n  mounted() {\n    this.show_flag = true;\n  },\n  watch: {},\n  data() {\n    return {\n      show_flag: false,\n      selectedFruits: \"\",\n      optionFruits: [\n        { id: 1, name: \"りんご\" },\n        { id: 2, name: \"みかん\" },\n        { id: 3, name: \"ぶどう\" },\n      ],\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordChannels() {\n      api\n        .getDiscordChannels({\n          data_from: this.date[0].toISOString().slice(0, 10),\n          data_to: this.date[1].toISOString().slice(0, 10),\n        })\n        .then((response) => {\n          console.log(response);\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              channel_name: response[\"data\"][i][\"channel_name\"],\n              count_actions:\n                response[\"data\"][i][\"count_messages\"] +\n                response[\"data\"][i][\"count_reactions\"],\n              count_messages: response[\"data\"][i][\"count_messages\"],\n              count_reactions: response[\"data\"][i][\"count_reactions\"],\n              count_message_users: response[\"data\"][i][\"count_message_users\"],\n              count_reaction_users: response[\"data\"][i][\"count_reaction_users\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"分析データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}