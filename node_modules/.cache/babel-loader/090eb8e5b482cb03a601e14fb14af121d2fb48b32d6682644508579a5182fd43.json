{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nimport checks from \"../assets/mixins/Checks\";\nimport api from \"../api/api.js\";\nimport { ref, onMounted, inject } from \"vue\";\nexport default {\n  name: \"Campaign_regist\",\n  mixins: [checks],\n  components: {\n    Datepicker: Datepicker\n  },\n  setup: function setup() {\n    var date = ref();\n    var min_date = ref();\n    var toast = inject(\"toast\");\n    var small_campaign_count = ref(0);\n    var big_campaign_count = ref(0);\n\n    // キャンペーン実施可能数を確認する\n    var checkCount = function checkCount() {\n      api.getMyOrganizer().then(function (response) {\n        small_campaign_count.value = response.data.small_campaign_count;\n        big_campaign_count.value = response.data.big_campaign_count;\n        if (small_campaign_count.value == 0 && big_campaign_count.value == 0) {\n          // 何もできることがない\n          toast.show(\"キャンペーン開催可能数が０です。\\\n              利用回数が不足している場合はプランのアップグレードをご検討ください\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n        }\n      })[\"catch\"](function (error) {\n        toast.show(\"キャンペーン利用可能数の取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n        console.log(\"error: \", error);\n      });\n    };\n    onMounted(function () {\n      // キャンペーン可能数を計算する処理\n      checkCount();\n\n      // 日付の最小〜最大を計算する処理\n      var today = new Date();\n      var startDate = new Date(new Date().setDate(today.getDate() + 1));\n      startDate.setHours(21, 0, 0, 0);\n      var endDate = new Date(new Date().setDate(startDate.getDate() + 7));\n      endDate.setHours(21, 0, 0, 0);\n      date.value = [startDate, endDate];\n      min_date.value = new Date(new Date().setHours(today.getHours() + 1));\n    });\n    return {\n      date: date,\n      min_date: min_date,\n      small_campaign_count: small_campaign_count,\n      big_campaign_count: big_campaign_count\n    };\n  },\n  data: function data() {\n    return {\n      campaign_name: null,\n      category: null,\n      keyword: null,\n      keyword_check: null,\n      keyword_count: null,\n      keyword_check_result: null,\n      \"abstract\": null,\n      detail: null,\n      reword_amount: null,\n      reword_currency: null,\n      distribution_type: null,\n      nouse_in_this_version: false,\n      // For Instant Win\n      estimated_participants_count: null\n    };\n  },\n  computed: {\n    filled: function filled() {\n      return this.campaign_name && this.keyword_check && this.category && this.keyword && this.small_campaign_count + this.big_campaign_count > 0;\n    },\n    follow_and_retweet_filled: function follow_and_retweet_filled() {\n      return this.campaign_name && this.category && this.reword_amount && this.date[1] && this.twitter_account_check && (this.tweet_url_check || !this.tweet_url && !this.tweet_url_check) && this.small_campaign_count + this.big_campaign_count > 0;\n    },\n    instant_win_filled: function instant_win_filled() {\n      return this.campaign_name && this.category && this.reword_amount && this.date[1] && this.twitter_account_check && this.estimated_participants_count && this.big_campaign_count > 0;\n    },\n    condition_flag: function condition_flag() {\n      // init\n      var return_dict = {\n        keyword: false,\n        abstruct: false,\n        detail: false,\n        distribution_type: false,\n        amount: false,\n        currency_id: false,\n        start_time: false,\n        end_time: false,\n        twitter_account: false,\n        twitter_url: false,\n        estimated_participants_count: false\n      };\n      if (this.category == null) {\n        return return_dict;\n      } else if (this.category == \"HASHTAG\") {\n        return_dict = {\n          keyword: true,\n          abstruct: true,\n          detail: true,\n          distribution_type: false,\n          amount: false,\n          currency_id: false,\n          start_time: true,\n          end_time: true,\n          twitter_account: false,\n          twitter_url: false,\n          estimated_participants_count: false\n        };\n        return return_dict;\n      } else if (this.category == \"FOLLOW_AND_RETWEET\") {\n        return_dict = {\n          keyword: false,\n          abstruct: false,\n          detail: false,\n          distribution_type: false,\n          amount: true,\n          currency_id: false,\n          start_time: false,\n          end_time: true,\n          twitter_account: true,\n          twitter_url: true,\n          estimated_participants_count: false\n        };\n        return return_dict;\n      } else if (this.category == \"INSTANT_WIN\") {\n        return_dict = {\n          keyword: false,\n          abstruct: false,\n          detail: false,\n          distribution_type: false,\n          amount: true,\n          estimated_participants_count: true,\n          currency_id: false,\n          start_time: true,\n          end_time: true,\n          twitter_account: true,\n          twitter_url: false\n        };\n        return return_dict;\n      } else {\n        return return_dict;\n      }\n    },\n    plan: function plan() {\n      return this.$store.getters[\"subscribePlan\"];\n    }\n  },\n  watch: {\n    keyword: function keyword(value) {\n      this.keyword_check = false;\n      this.keyword_check_result = \"\";\n      if (value.indexOf(\"#\")) {\n        this.keyword = \"#\" + value;\n      }\n    },\n    twitter_account: function twitter_account(value) {\n      this.twitter_account_check = false;\n      this.twitter_account_result = \"\";\n      if (value.indexOf(\"@\")) {\n        this.twitter_account = \"@\" + value;\n      }\n    },\n    tweet_url: function tweet_url() {\n      this.tweet_url_check = false;\n      this.tweet_url_result = \"\";\n    },\n    date: function date(value) {\n      if (value != null) {\n        var diffTime = value[1].getTime() - value[0].getTime();\n        var diffDay = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n        if (diffDay > 7) {\n          this.date = null;\n          this.$toast.show(\"キャンペーン期間は１週間以内で設定してください\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n        }\n      }\n    }\n  },\n  methods: {\n    createCampaignPromise: function createCampaignPromise() {\n      var _this = this;\n      return new Promise(function (resolve) {\n        var status = 1;\n        var start = _this.date[0];\n        var end = _this.date[1];\n        if (_this.category == \"FOLLOW_AND_RETWEET\") {\n          start = null;\n        }\n        api.createCampaign({\n          status: status,\n          keyword: _this.keyword,\n          start_time: start,\n          end_time: end,\n          detail: _this.detail,\n          campaign_name: _this.campaign_name,\n          distribution_type: _this.distribution_type,\n          amount: _this.reword_amount,\n          currency_id: _this.reword_currency,\n          category: _this.category\n        }).then(function (response) {\n          if (_this.category == \"FOLLOW_AND_RETWEET\") {\n            if (_this.tweet_url_check) {\n              api.createConditions({\n                campaign_id: response[\"data\"][\"campaign_id\"],\n                user_id: _this.twitter_account_id,\n                actions: \"FOLLOW\"\n              }).then(function () {\n                api.createConditions({\n                  campaign_id: response[\"data\"][\"campaign_id\"],\n                  tweet_id: _this.tweet_id,\n                  actions: \"RETWEET\"\n                }).then(function () {\n                  _this.$toast.show(\"キャンペーンの登録が完了しました\", {\n                    type: \"success\",\n                    position: \"top-right\",\n                    duration: 3000\n                  });\n                  _this.$router.replace(\"/campaigns\");\n                })[\"catch\"](function (error) {\n                  _this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n                    type: \"error\",\n                    position: \"top-right\",\n                    duration: 5000\n                  });\n                  console.log(\"error: \", error);\n                });\n              });\n            } else {\n              // tweetを登録する場合\n              api.createConditions({\n                campaign_id: response[\"data\"][\"campaign_id\"],\n                user_id: _this.twitter_account_id,\n                actions: \"FOLLOW\"\n              }).then(function () {\n                _this.$toast.show(\"キャンペーンの登録が完了しました\", {\n                  type: \"success\",\n                  position: \"top-right\",\n                  duration: 3000\n                });\n                _this.$router.replace(\"/campaigns\");\n              })[\"catch\"](function (error) {\n                _this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n                  type: \"error\",\n                  position: \"top-right\",\n                  duration: 5000\n                });\n                console.log(\"error: \", error);\n              });\n            }\n            resolve(\"resolved\");\n          }\n          // Instant win\n          if (_this.category == \"INSTANT_WIN\") {\n            api.createConditions({\n              campaign_id: response[\"data\"][\"campaign_id\"],\n              user_id: _this.twitter_account_id,\n              actions: \"FOLLOW\"\n            }).then(function () {\n              api.postInstantWin({\n                campaign_id: response[\"data\"][\"campaign_id\"],\n                total_win: _this.reword_amount,\n                est_participant: _this.estimated_participants_count,\n                remain_win: _this.reword_amount,\n                prob: _this.reword_amount / _this.estimated_participants_count\n              }).then(function () {\n                _this.$toast.show(\"キャンペーンの登録が完了しました\", {\n                  type: \"success\",\n                  position: \"top-right\",\n                  duration: 3000\n                });\n                _this.$router.replace(\"/campaigns\");\n              })[\"catch\"](function (error) {\n                _this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n                  type: \"error\",\n                  position: \"top-right\",\n                  duration: 5000\n                });\n                console.log(\"error: \", error);\n              });\n            });\n            resolve(\"resolved\");\n          }\n          // hashtag\n          if (_this.category == \"HASHTAG\") {\n            _this.$toast.show(\"キャンペーンの登録が完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000\n            });\n            _this.$router.replace(\"/campaigns\");\n            resolve(\"resolved\");\n          }\n        })[\"catch\"](function (error) {\n          _this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Datepicker","checks","api","ref","onMounted","inject","name","mixins","components","setup","date","min_date","toast","small_campaign_count","big_campaign_count","checkCount","getMyOrganizer","then","response","value","data","show","type","position","duration","error","console","log","today","Date","startDate","setDate","getDate","setHours","endDate","getHours","campaign_name","category","keyword","keyword_check","keyword_count","keyword_check_result","detail","reword_amount","reword_currency","distribution_type","nouse_in_this_version","estimated_participants_count","computed","filled","follow_and_retweet_filled","twitter_account_check","tweet_url_check","tweet_url","instant_win_filled","condition_flag","return_dict","abstruct","amount","currency_id","start_time","end_time","twitter_account","twitter_url","plan","$store","getters","watch","indexOf","twitter_account_result","tweet_url_result","diffTime","getTime","diffDay","Math","floor","$toast","methods","createCampaignPromise","Promise","resolve","status","start","end","createCampaign","createConditions","campaign_id","user_id","twitter_account_id","actions","tweet_id","$router","replace","postInstantWin","total_win","est_participant","remain_win","prob"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/CampaignCreate.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_regist\">\n    <SideVar />\n    <RightColumnOutline>\n      <PageTitle>Create Campaign</PageTitle>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >キャンペーン名 *\n          </span>\n        </div>\n        <div class=\"w-2/3 px-4 max-w-xl\">\n          <div class=\"flex flex-wrap items-center -mx-3 w-full px-3\">\n            <input\n              class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n              type=\"text\"\n              v-model=\"campaign_name\"\n              placeholder=\"xxxx記念キャンペーン\"\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >開催するキャンペーンの種類 *\n          </span>\n        </div>\n        <div class=\"w-2/3 px-4 max-w-xl\">\n          <div\n            class=\"relative block px-3 w-full text-sm font-medium border border-gray-400 hover:border-white focus-within:border-green-500 rounded-lg\"\n          >\n            <span\n              class=\"absolute top-1/2 right-0 mr-5 transform -translate-y-1/2\"\n            >\n              <i class=\"pi pi-chevron-down\"></i>\n            </span>\n            <select\n              class=\"w-full py-4 text-gray-50 placeholder-gray-300 appearance-none bg-transparent outline-none\"\n              id=\"category\"\n              v-model=\"category\"\n            >\n              <option\n                class=\"bg-gray-500\"\n                value=\"FOLLOW_AND_RETWEET\"\n                v-if=\"plan != 'FREE'\"\n              >\n                フォロー＆リツイート\n              </option>\n              <option\n                class=\"bg-gray-500\"\n                value=\"HASHTAG\"\n                v-if=\"plan == 'SILVER' || plan == 'GOLD'\"\n              >\n                ハッシュタグキャンペーン\n              </option>\n              <option\n                class=\"bg-gray-500\"\n                value=\"INSTANT_WIN\"\n                v-if=\"plan == 'GOLD'\"\n              >\n                インスタントウィン\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center mb-4 border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.keyword\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >キーワード\n            <i\n              class=\"pi pi-question-circle mr-1\"\n              v-tippy=\"{\n                content:\n                  'ハッシュタグ必須。ハッシュタグは１つのみ登録してください。',\n              }\"\n            ></i\n            >*\n          </span>\n        </div>\n        <div class=\"w-1/3 px-4 max-w-xl\">\n          <input\n            class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n            type=\"text\"\n            v-model=\"keyword\"\n            placeholder=\"#xxxx記念\"\n          />\n        </div>\n        <div class=\"w-1/4 px-4 max-w-xl\">\n          <DoButton\n            :clickFunction=\"checkKeywordPromise\"\n            :values=\"{}\"\n            :disabled=\"!keyword || keyword_check\"\n            >キーワードチェック</DoButton\n          >\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.keyword\"\n      >\n        <div class=\"w-1/3 px-4 pb-4\">\n          <span class=\"text-sm font-medium text-gray-100\"></span>\n        </div>\n        <div class=\"w-2/3 px-4\">\n          <div\n            v-if=\"keyword_check_result\"\n            class=\"max-w-xl text-gray-100 text-left\"\n          >\n            {{ keyword_check_result }}\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"nouse_in_this_version\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >キャンペーン概要</span\n          >\n        </div>\n        <div class=\"w-2/3 px-4 max-w-xl\">\n          <input\n            class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n            id=\"abstract\"\n            type=\"text\"\n            v-model=\"abstract\"\n            placeholder=\"概要：xxxのサービス開始1周年を記念したキャンペーン。総額yyyyyドル分のzzzzをポイントの高い順にプレゼント\"\n          />\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.detail\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >キャンペーン詳細</span\n          >\n        </div>\n        <div class=\"w-2/3 px-4 max-w-xl\">\n          <textarea\n            class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n            rows=\"4\"\n            v-model=\"detail\"\n            placeholder=\"メモとしてご利用ください\"\n          />\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.start_time && condition_flag.end_time\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >キャンペーン期間<i\n              class=\"pi pi-question-circle m-1\"\n              v-tippy=\"{\n                content:\n                  '現在時刻の１時間後以降で、１週間以内の期間を指定してください。',\n              }\"\n            ></i>\n            *\n          </span>\n        </div>\n        <div class=\"w-2/3 px-4 max-w-xl flex -mx-3\">\n          <div class=\"relative block px-3 w-full text-gray-100\">\n            <Datepicker v-model=\"date\" range :min-date=\"min_date\" />\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"!condition_flag.start_time && condition_flag.end_time\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\">募集期限 * </span>\n        </div>\n        <div class=\"w-2/3 px-4 max-w-xl flex -mx-3\">\n          <div class=\"relative block px-3 w-full text-gray-100\">\n            <Datepicker v-model=\"date[1]\" :min-date=\"min_date\" />\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.amount\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\">当選人数 * </span>\n        </div>\n        <div class=\"w-1/3 px-4 max-w-xl\">\n          <input\n            class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n            type=\"number\"\n            v-model=\"reword_amount\"\n            placeholder=\"10\"\n          />\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.estimated_participants_count\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >想定参加人数\n            <i\n              class=\"pi pi-question-circle mr-1\"\n              v-tippy=\"{\n                content: '当選確率を決定するために利用します',\n              }\"\n            ></i\n            >*\n          </span>\n        </div>\n        <div class=\"w-1/3 px-4 max-w-xl\">\n          <input\n            class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n            type=\"number\"\n            v-model=\"estimated_participants_count\"\n            placeholder=\"10000\"\n          />\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.distribution\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\">報酬の分配方法</span>\n        </div>\n        <div class=\"w-2/3 px-4 max-w-xl\">\n          <div\n            class=\"relative block px-3 w-full text-sm font-medium border border-gray-400 hover:border-white focus-within:border-green-500 rounded-lg\"\n          >\n            <span\n              class=\"absolute top-1/2 right-0 mr-5 transform -translate-y-1/2\"\n            >\n              <i class=\"pi pi-chevron-down\"></i>\n            </span>\n            <select\n              class=\"w-full py-4 text-gray-50 placeholder-gray-50 appearance-none bg-transparent outline-none\"\n              id=\"distribution_type\"\n              v-model=\"distribution_type\"\n            >\n              <option class=\"bg-gray-500\" value=\"1\">\n                獲得ポイントに基づくルールベースの分配\n              </option>\n              <option class=\"bg-gray-500\" value=\"2\">\n                獲得ポイントに基づく抽選\n              </option>\n              <option class=\"bg-gray-500\" value=\"3\">\n                その他（要望に合わせて対応いたします）\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center mb-4 border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.twitter_account\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >Twitterアカウント\n            <i\n              class=\"pi pi-question-circle mr-1\"\n              v-tippy=\"{\n                content:\n                  'フォローを参加条件とする対象アカウントを入力してください',\n              }\"\n            ></i\n            >*\n          </span>\n        </div>\n        <div class=\"w-1/3 px-4\">\n          <div class=\"max-w-xl\">\n            <input\n              class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n              id=\"twitter_account\"\n              type=\"text\"\n              v-model=\"twitter_account\"\n              placeholder=\"@username\"\n            />\n          </div>\n        </div>\n        <div class=\"w-1/4 px-4\">\n          <div class=\"max-w-xl\">\n            <DoButton\n              :clickFunction=\"checkTwitterAccountPromise\"\n              :values=\"{}\"\n              :disabled=\"!twitter_account || twitter_account_check\"\n              >アカウントチェック</DoButton\n            >\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.twitter_account\"\n      >\n        <div class=\"w-full sm:w-1/3 px-4 pb-4 sm:mb-0\">\n          <span class=\"text-sm font-medium text-gray-100\"></span>\n        </div>\n        <div class=\"w-full sm:w-2/3 px-4\">\n          <div\n            v-if=\"twitter_account_result\"\n            class=\"max-w-xl text-gray-100 text-left\"\n          >\n            {{ twitter_account_result }}\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center mb-4 border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.twitter_url\"\n      >\n        <div class=\"w-1/3 pl-18 text-left\">\n          <span class=\"text-sm font-medium text-gray-100\"\n            >Tweet URL\n            <i\n              class=\"pi pi-question-circle mr-1\"\n              v-tippy=\"{\n                content:\n                  'リツイートを参加条件とする対象ツイートを入力してください',\n              }\"\n            ></i>\n          </span>\n        </div>\n        <div class=\"w-full sm:w-1/3 px-4\">\n          <div class=\"max-w-xl\">\n            <input\n              class=\"block py-4 px-3 w-full text-sm text-gray-50 placeholder-gray-300 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-green-500 rounded-lg\"\n              id=\"tweet_url\"\n              type=\"text\"\n              v-model=\"tweet_url\"\n              placeholder=\"https://\"\n            />\n          </div>\n        </div>\n        <div class=\"w-1/4 px-4\">\n          <div class=\"max-w-xl\">\n            <DoButton\n              :clickFunction=\"checkTweetPromise\"\n              :values=\"{}\"\n              :disabled=\"!tweet_url || tweet_url_check\"\n              >ツイートチェック</DoButton\n            >\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20\"\n        v-if=\"condition_flag.twitter_url\"\n      >\n        <div class=\"w-full sm:w-1/3 px-4 pb-4 sm:mb-0\">\n          <span class=\"text-sm font-medium text-gray-100\"></span>\n        </div>\n        <div class=\"w-full sm:w-2/3 px-4\">\n          <div v-if=\"tweet_url_result\" class=\"max-w-xl text-gray-100 text-left\">\n            {{ tweet_url_result }}\n          </div>\n        </div>\n      </div>\n      <div v-if=\"category == 'HASHTAG'\">\n        <DoButton\n          :clickFunction=\"createCampaignPromise\"\n          :values=\"{}\"\n          :disabled=\"!filled\"\n          >登録</DoButton\n        >\n      </div>\n      <div v-if=\"category == 'FOLLOW_AND_RETWEET'\">\n        <DoButton\n          :clickFunction=\"createCampaignPromise\"\n          :values=\"{}\"\n          :disabled=\"!follow_and_retweet_filled\"\n          >登録</DoButton\n        >\n      </div>\n      <div v-if=\"category == 'INSTANT_WIN'\">\n        <DoButton\n          :clickFunction=\"createCampaignPromise\"\n          :values=\"{}\"\n          :disabled=\"!instant_win_filled\"\n          >登録</DoButton\n        >\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nimport checks from \"../assets/mixins/Checks\";\n\nimport api from \"../api/api.js\";\nimport { ref, onMounted, inject } from \"vue\";\n\nexport default {\n  name: \"Campaign_regist\",\n  mixins: [checks],\n  components: {\n    Datepicker,\n  },\n  setup() {\n    let date = ref();\n    let min_date = ref();\n    const toast = inject(\"toast\");\n    let small_campaign_count = ref(0);\n    let big_campaign_count = ref(0);\n\n    // キャンペーン実施可能数を確認する\n    const checkCount = function () {\n      api\n        .getMyOrganizer()\n        .then((response) => {\n          small_campaign_count.value = response.data.small_campaign_count;\n          big_campaign_count.value = response.data.big_campaign_count;\n          if (\n            small_campaign_count.value == 0 &&\n            big_campaign_count.value == 0\n          ) {\n            // 何もできることがない\n            toast.show(\n              \"キャンペーン開催可能数が０です。\\\n              利用回数が不足している場合はプランのアップグレードをご検討ください\",\n              {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000,\n              }\n            );\n          }\n        })\n        .catch((error) => {\n          toast.show(\"キャンペーン利用可能数の取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          console.log(\"error: \", error);\n        });\n    };\n\n    onMounted(() => {\n      // キャンペーン可能数を計算する処理\n      checkCount();\n\n      // 日付の最小〜最大を計算する処理\n      const today = new Date();\n      let startDate = new Date(new Date().setDate(today.getDate() + 1));\n      startDate.setHours(21, 0, 0, 0);\n      let endDate = new Date(new Date().setDate(startDate.getDate() + 7));\n      endDate.setHours(21, 0, 0, 0);\n      date.value = [startDate, endDate];\n\n      min_date.value = new Date(new Date().setHours(today.getHours() + 1));\n    });\n\n    return {\n      date,\n      min_date,\n      small_campaign_count,\n      big_campaign_count,\n    };\n  },\n  data() {\n    return {\n      campaign_name: null,\n      category: null,\n      keyword: null,\n      keyword_check: null,\n      keyword_count: null,\n      keyword_check_result: null,\n      abstract: null,\n      detail: null,\n      reword_amount: null,\n      reword_currency: null,\n      distribution_type: null,\n      nouse_in_this_version: false,\n\n      // For Instant Win\n      estimated_participants_count: null,\n    };\n  },\n  computed: {\n    filled() {\n      return (\n        this.campaign_name &&\n        this.keyword_check &&\n        this.category &&\n        this.keyword &&\n        this.small_campaign_count + this.big_campaign_count > 0\n      );\n    },\n    follow_and_retweet_filled() {\n      return (\n        this.campaign_name &&\n        this.category &&\n        this.reword_amount &&\n        this.date[1] &&\n        this.twitter_account_check &&\n        (this.tweet_url_check || (!this.tweet_url && !this.tweet_url_check)) &&\n        this.small_campaign_count + this.big_campaign_count > 0\n      );\n    },\n    instant_win_filled() {\n      return (\n        this.campaign_name &&\n        this.category &&\n        this.reword_amount &&\n        this.date[1] &&\n        this.twitter_account_check &&\n        this.estimated_participants_count &&\n        this.big_campaign_count > 0\n      );\n    },\n    condition_flag: function () {\n      // init\n      let return_dict = {\n        keyword: false,\n        abstruct: false,\n        detail: false,\n        distribution_type: false,\n        amount: false,\n        currency_id: false,\n        start_time: false,\n        end_time: false,\n        twitter_account: false,\n        twitter_url: false,\n        estimated_participants_count: false,\n      };\n      if (this.category == null) {\n        return return_dict;\n      } else if (this.category == \"HASHTAG\") {\n        return_dict = {\n          keyword: true,\n          abstruct: true,\n          detail: true,\n          distribution_type: false,\n          amount: false,\n          currency_id: false,\n          start_time: true,\n          end_time: true,\n          twitter_account: false,\n          twitter_url: false,\n          estimated_participants_count: false,\n        };\n        return return_dict;\n      } else if (this.category == \"FOLLOW_AND_RETWEET\") {\n        return_dict = {\n          keyword: false,\n          abstruct: false,\n          detail: false,\n          distribution_type: false,\n          amount: true,\n          currency_id: false,\n          start_time: false,\n          end_time: true,\n          twitter_account: true,\n          twitter_url: true,\n          estimated_participants_count: false,\n        };\n        return return_dict;\n      } else if (this.category == \"INSTANT_WIN\") {\n        return_dict = {\n          keyword: false,\n          abstruct: false,\n          detail: false,\n          distribution_type: false,\n          amount: true,\n          estimated_participants_count: true,\n          currency_id: false,\n          start_time: true,\n          end_time: true,\n          twitter_account: true,\n          twitter_url: false,\n        };\n        return return_dict;\n      } else {\n        return return_dict;\n      }\n    },\n    plan: function () {\n      return this.$store.getters[\"subscribePlan\"];\n    },\n  },\n  watch: {\n    keyword(value) {\n      this.keyword_check = false;\n      this.keyword_check_result = \"\";\n      if (value.indexOf(\"#\")) {\n        this.keyword = \"#\" + value;\n      }\n    },\n    twitter_account(value) {\n      this.twitter_account_check = false;\n      this.twitter_account_result = \"\";\n      if (value.indexOf(\"@\")) {\n        this.twitter_account = \"@\" + value;\n      }\n    },\n    tweet_url() {\n      this.tweet_url_check = false;\n      this.tweet_url_result = \"\";\n    },\n    date(value) {\n      if (value != null) {\n        var diffTime = value[1].getTime() - value[0].getTime();\n        var diffDay = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n        if (diffDay > 7) {\n          this.date = null;\n          this.$toast.show(\"キャンペーン期間は１週間以内で設定してください\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        }\n      }\n    },\n  },\n  methods: {\n    createCampaignPromise: function () {\n      return new Promise((resolve) => {\n        let status = 1;\n        let start = this.date[0];\n        let end = this.date[1];\n        if (this.category == \"FOLLOW_AND_RETWEET\") {\n          start = null;\n        }\n        api\n          .createCampaign({\n            status: status,\n            keyword: this.keyword,\n            start_time: start,\n            end_time: end,\n            detail: this.detail,\n            campaign_name: this.campaign_name,\n            distribution_type: this.distribution_type,\n            amount: this.reword_amount,\n            currency_id: this.reword_currency,\n            category: this.category,\n          })\n          .then((response) => {\n            if (this.category == \"FOLLOW_AND_RETWEET\") {\n              if (this.tweet_url_check) {\n                api\n                  .createConditions({\n                    campaign_id: response[\"data\"][\"campaign_id\"],\n                    user_id: this.twitter_account_id,\n                    actions: \"FOLLOW\",\n                  })\n                  .then(() => {\n                    api\n                      .createConditions({\n                        campaign_id: response[\"data\"][\"campaign_id\"],\n                        tweet_id: this.tweet_id,\n                        actions: \"RETWEET\",\n                      })\n                      .then(() => {\n                        this.$toast.show(\"キャンペーンの登録が完了しました\", {\n                          type: \"success\",\n                          position: \"top-right\",\n                          duration: 3000,\n                        });\n                        this.$router.replace(\"/campaigns\");\n                      })\n                      .catch((error) => {\n                        this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n                          type: \"error\",\n                          position: \"top-right\",\n                          duration: 5000,\n                        });\n                        console.log(\"error: \", error);\n                      });\n                  });\n              } else {\n                // tweetを登録する場合\n                api\n                  .createConditions({\n                    campaign_id: response[\"data\"][\"campaign_id\"],\n                    user_id: this.twitter_account_id,\n                    actions: \"FOLLOW\",\n                  })\n                  .then(() => {\n                    this.$toast.show(\"キャンペーンの登録が完了しました\", {\n                      type: \"success\",\n                      position: \"top-right\",\n                      duration: 3000,\n                    });\n                    this.$router.replace(\"/campaigns\");\n                  })\n                  .catch((error) => {\n                    this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n                      type: \"error\",\n                      position: \"top-right\",\n                      duration: 5000,\n                    });\n                    console.log(\"error: \", error);\n                  });\n              }\n              resolve(\"resolved\");\n            }\n            // Instant win\n            if (this.category == \"INSTANT_WIN\") {\n              api\n                .createConditions({\n                  campaign_id: response[\"data\"][\"campaign_id\"],\n                  user_id: this.twitter_account_id,\n                  actions: \"FOLLOW\",\n                })\n                .then(() => {\n                  api\n                    .postInstantWin({\n                      campaign_id: response[\"data\"][\"campaign_id\"],\n                      total_win: this.reword_amount,\n                      est_participant: this.estimated_participants_count,\n                      remain_win: this.reword_amount,\n                      prob:\n                        this.reword_amount / this.estimated_participants_count,\n                    })\n                    .then(() => {\n                      this.$toast.show(\"キャンペーンの登録が完了しました\", {\n                        type: \"success\",\n                        position: \"top-right\",\n                        duration: 3000,\n                      });\n                      this.$router.replace(\"/campaigns\");\n                    })\n                    .catch((error) => {\n                      this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n                        type: \"error\",\n                        position: \"top-right\",\n                        duration: 5000,\n                      });\n                      console.log(\"error: \", error);\n                    });\n                });\n              resolve(\"resolved\");\n            }\n            // hashtag\n            if (this.category == \"HASHTAG\") {\n              this.$toast.show(\"キャンペーンの登録が完了しました\", {\n                type: \"success\",\n                position: \"top-right\",\n                duration: 3000,\n              });\n              this.$router.replace(\"/campaigns\");\n              resolve(\"resolved\");\n            }\n          })\n          .catch((error) => {\n            this.$toast.show(\"キャンペーンの登録に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}