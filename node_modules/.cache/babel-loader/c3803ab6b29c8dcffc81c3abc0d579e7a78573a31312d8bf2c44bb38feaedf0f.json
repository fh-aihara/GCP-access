{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport api from \"../api/api.js\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    Datepicker: Datepicker\n  },\n  setup: function setup() {\n    var date = ref();\n    var headers = [{\n      text: \"チャンネル名\",\n      value: \"channel_name\"\n    }, {\n      text: \"アクション数\",\n      value: \"count_actions\",\n      sortable: true\n    }, {\n      text: \"メッセージ数\",\n      value: \"count_messages\",\n      sortable: true\n    }, {\n      text: \"リアクション数\",\n      value: \"count_reactions\",\n      sortable: true\n    },\n    // { text: \"アクション人数\", value: \"count_action_users\", sortable: true },\n    {\n      text: \"メッセージ人数\",\n      value: \"count_message_users\",\n      sortable: true\n    }, {\n      text: \"リアクション人数\",\n      value: \"count_reaction_users\",\n      sortable: true\n    }];\n    var items = ref([\n      // {\n      //   player: \"Stephen Curry\",\n      //   team: \"GSW\",\n      //   number: 30,\n      //   position: \"G\",\n      //   indicator: { height: \"6-2\", weight: 185 },\n      //   lastAttended: \"Davidson\",\n      //   country: \"USA\",\n      // },\n    ]);\n    onMounted(function () {\n      // 日付の最小〜最大を計算する処理\n      var today = new Date();\n      var toDate = new Date(new Date().setDate(today.getDate()));\n      var fromDate = new Date(new Date().setDate(toDate.getDate() - 30));\n      date.value = [fromDate, toDate];\n    });\n    return {\n      date: date,\n      headers: headers,\n      items: items\n    };\n  },\n  mounted: function mounted() {\n    this.show_flag = true;\n    this.getDiscordChannels();\n  },\n  watch: {\n    date: {\n      handler: function handler() {\n        this.items = [];\n        console.log(\"change date\", this.date[0].toISOString().slice(0, 10), this.date[1].toISOString().slice(0, 10));\n        this.getDiscordChannels();\n      },\n      deep: true\n    }\n  },\n  data: function data() {\n    return {\n      show_flag: false,\n      today: new Date()\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordChannels: function getDiscordChannels() {\n      var _this = this;\n      api.getDiscordChannels({\n        data_from: this.date[0].toISOString().slice(0, 10),\n        data_to: this.date[1].toISOString().slice(0, 10)\n      }).then(function (response) {\n        console.log(response);\n        for (var i = 0; i < response[\"data\"].length; i++) {\n          _this.items.push({\n            channel_name: response[\"data\"][i][\"channel_name\"],\n            count_actions: response[\"data\"][i][\"count_messages\"] + response[\"data\"][i][\"count_reactions\"],\n            count_messages: response[\"data\"][i][\"count_messages\"],\n            count_reactions: response[\"data\"][i][\"count_reactions\"],\n            count_message_users: response[\"data\"][i][\"count_message_users\"],\n            count_reaction_users: response[\"data\"][i][\"count_reaction_users\"]\n          });\n        }\n      })[\"catch\"](function () {\n        _this.$toast.show(\"分析データの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["api","Datepicker","ref","onMounted","name","components","setup","date","headers","text","value","sortable","items","today","Date","toDate","setDate","getDate","fromDate","mounted","show_flag","getDiscordChannels","watch","handler","console","log","toISOString","slice","deep","data","computed","methods","data_from","data_to","then","response","i","length","push","channel_name","count_actions","count_messages","count_reactions","count_message_users","count_reaction_users","$toast","show","type","position","duration"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/DiscordChannels.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Discord Channels</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          チャンネルごとの盛り上がりを確認しましょう\n        </div>\n        <div class=\"text-xs text-white flex items-center w-auto\">\n          <div class=\"mr-4\">表示期間</div>\n          <div v-if=\"show_flag\" class=\"w-64\">\n            <Datepicker\n              v-model=\"date\"\n              range\n              :format=\"yyyy / MM / dd\"\n              :enable-time-picker=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"m-4 p-2\">\n        <EasyDataTable :headers=\"headers\" :items=\"items\" />\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    Datepicker,\n  },\n  setup() {\n    let date = ref();\n\n    const headers = [\n      { text: \"チャンネル名\", value: \"channel_name\" },\n      { text: \"アクション数\", value: \"count_actions\", sortable: true },\n      { text: \"メッセージ数\", value: \"count_messages\", sortable: true },\n      { text: \"リアクション数\", value: \"count_reactions\", sortable: true },\n      // { text: \"アクション人数\", value: \"count_action_users\", sortable: true },\n      { text: \"メッセージ人数\", value: \"count_message_users\", sortable: true },\n      {\n        text: \"リアクション人数\",\n        value: \"count_reaction_users\",\n        sortable: true,\n      },\n    ];\n\n    let items = ref([\n      // {\n      //   player: \"Stephen Curry\",\n      //   team: \"GSW\",\n      //   number: 30,\n      //   position: \"G\",\n      //   indicator: { height: \"6-2\", weight: 185 },\n      //   lastAttended: \"Davidson\",\n      //   country: \"USA\",\n      // },\n    ]);\n\n    onMounted(() => {\n      // 日付の最小〜最大を計算する処理\n      const today = new Date();\n      let toDate = new Date(new Date().setDate(today.getDate()));\n      let fromDate = new Date(new Date().setDate(toDate.getDate() - 30));\n      date.value = [fromDate, toDate];\n    });\n    return {\n      date,\n      headers,\n      items,\n    };\n  },\n  mounted() {\n    this.show_flag = true;\n    this.getDiscordChannels();\n  },\n  watch: {\n    date: {\n      handler() {\n        this.items = [];\n        console.log(\n          \"change date\",\n          this.date[0].toISOString().slice(0, 10),\n          this.date[1].toISOString().slice(0, 10)\n        );\n        this.getDiscordChannels();\n      },\n      deep: true,\n    },\n  },\n\n  data() {\n    return {\n      show_flag: false,\n      today: new Date(),\n    };\n  },\n  computed: {},\n  methods: {\n    getDiscordChannels() {\n      api\n        .getDiscordChannels({\n          data_from: this.date[0].toISOString().slice(0, 10),\n          data_to: this.date[1].toISOString().slice(0, 10),\n        })\n        .then((response) => {\n          console.log(response);\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              channel_name: response[\"data\"][i][\"channel_name\"],\n              count_actions:\n                response[\"data\"][i][\"count_messages\"] +\n                response[\"data\"][i][\"count_reactions\"],\n              count_messages: response[\"data\"][i][\"count_messages\"],\n              count_reactions: response[\"data\"][i][\"count_reactions\"],\n              count_message_users: response[\"data\"][i][\"count_message_users\"],\n              count_reaction_users: response[\"data\"][i][\"count_reaction_users\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"分析データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}