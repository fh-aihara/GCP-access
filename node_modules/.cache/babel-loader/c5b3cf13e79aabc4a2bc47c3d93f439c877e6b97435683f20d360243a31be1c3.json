{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport api from \"../api/api.js\";\nimport { getAuth, sendEmailVerification, signInWithEmailAndPassword } from \"@firebase/auth\";\nimport store from \"@/store\";\nimport \"../firebase_config\";\nvar auth = getAuth();\nexport default {\n  data: function data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error_message: \"\"\n    };\n  },\n  computed: {\n    user: function user() {\n      return this.$store.getters[\"user\"];\n    },\n    idToken: function idToken() {\n      return this.$store.getters[\"idToken\"];\n    },\n    btnclass: function btnclass() {\n      if (this.email != \"\" && this.password != \"\") {\n        return \"bg-blue-500 hover:bg-blue-600\";\n      } else {\n        return \"bg-gray-500 hover:bg-gray-600\";\n      }\n    }\n  },\n  methods: {\n    signIn: function () {\n      var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this = this;\n        var user;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              user = null;\n              _context.next = 3;\n              return signInWithEmailAndPassword(auth, this.email, this.password).then(function (userCredential) {\n                user = userCredential.user;\n                if (user.emailVerified == false) {\n                  _this.error_message = \"メール認証が未済です。送付したメールから認証を完了してください\";\n                  sendEmailVerification(user, {\n                    url: \"https://social-marketing.io/login\"\n                  });\n                } else {\n                  store.commit(\"updateUser\", user);\n                  api.getAccounts().then(function () {\n                    api.checkSubscribe().then(function (response) {\n                      console.log(response);\n                      store.commit(\"updateSubscribePlan\", response[\"data\"]);\n                      _this.$router.replace(\"/campaigns\");\n                    })[\"catch\"](function (error) {\n                      console.log(\"subscribe check error:\", error);\n                      _this.$router.replace(\"/campaigns\");\n                    });\n                    _this.$router.replace(\"/campaigns\");\n                  })[\"catch\"](function (error) {\n                    console.log(\"login getAccounts error:\", error);\n                  });\n                }\n              })[\"catch\"](function (error) {\n                console.log(error.code + \" \" + error.message);\n                _this.error_message = \"EmailかPasswordが間違っています\";\n              });\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function signIn() {\n        return _signIn.apply(this, arguments);\n      }\n      return signIn;\n    }(),\n    refresh_error: function refresh_error() {\n      this.error_message = \"\";\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AA2EA,OAAOA,GAAE,MAAO,eAAe;AAC/B,SACEC,OAAO,EACPC,qBAAqB,EACrBC,0BAA0B,QACrB,gBAAgB;AACvB,OAAOC,KAAI,MAAO,SAAS;AAC3B,OAAO,oBAAoB;AAE3B,IAAMC,IAAG,GAAIJ,OAAO,EAAE;AAEtB,eAAe;EACbK,IAAI,kBAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,IAAI,kBAAG;MACL,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,MAAM,CAAC;IACpC,CAAC;IACDC,OAAO,qBAAG;MACR,OAAO,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,SAAS,CAAC;IACvC,CAAC;IACDE,QAAQ,EAAE,oBAAY;MACpB,IAAI,IAAI,CAACR,KAAI,IAAK,EAAC,IAAK,IAAI,CAACC,QAAO,IAAK,EAAE,EAAE;QAC3C,OAAO,+BAA+B;MACxC,OAAO;QACL,OAAO,+BAA+B;MACxC;IACF;EACF,CAAC;EACDQ,OAAO,EAAE;IACPC,MAAM;MAAA,yEAAE;QAAA;QAAA;QAAA;UAAA;YAAA;cACFN,IAAG,GAAI,IAAI;cAAA;cAAA,OACTR,0BAA0B,CAACE,IAAI,EAAE,IAAI,CAACE,KAAK,EAAE,IAAI,CAACC,QAAQ,EAC7DU,IAAI,CAAC,UAACC,cAAc,EAAK;gBACxBR,IAAG,GAAIQ,cAAc,CAACR,IAAI;gBAC1B,IAAIA,IAAI,CAACS,aAAY,IAAK,KAAK,EAAE;kBAC/B,KAAI,CAACX,aAAY,GACf,iCAAiC;kBACnCP,qBAAqB,CAACS,IAAI,EAAE;oBAC1BU,GAAG,EAAE;kBACP,CAAC,CAAC;gBACJ,OAAO;kBACLjB,KAAK,CAACkB,MAAM,CAAC,YAAY,EAAEX,IAAI,CAAC;kBAChCX,GAAE,CACCuB,WAAW,EAAC,CACZL,IAAI,CAAC,YAAM;oBACVlB,GAAE,CACCwB,cAAc,EAAC,CACfN,IAAI,CAAC,UAACO,QAAQ,EAAK;sBAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;sBACrBrB,KAAK,CAACkB,MAAM,CAAC,qBAAqB,EAAEG,QAAQ,CAAC,MAAM,CAAC,CAAC;sBACrD,KAAI,CAACG,OAAO,CAACC,OAAO,CAAC,YAAY,CAAC;oBACpC,CAAC,UACK,CAAC,UAACC,KAAK,EAAK;sBAChBJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEG,KAAK,CAAC;sBAC5C,KAAI,CAACF,OAAO,CAACC,OAAO,CAAC,YAAY,CAAC;oBACpC,CAAC,CAAC;oBACJ,KAAI,CAACD,OAAO,CAACC,OAAO,CAAC,YAAY,CAAC;kBACpC,CAAC,UACK,CAAC,UAACC,KAAK,EAAK;oBAChBJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEG,KAAK,CAAC;kBAChD,CAAC,CAAC;gBACN;cACF,CAAC,UACK,CAAC,UAACA,KAAK,EAAK;gBAChBJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAACC,IAAG,GAAI,GAAE,GAAID,KAAK,CAACE,OAAO,CAAC;gBAC7C,KAAI,CAACvB,aAAY,GAAI,wBAAwB;cAC/C,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACL;MAAA;QAAA;MAAA;MAAA;IAAA;IACDwB,aAAa,EAAE,yBAAY;MACzB,IAAI,CAACxB,aAAY,GAAI,EAAE;IACzB;EACF;AACF,CAAC","names":["api","getAuth","sendEmailVerification","signInWithEmailAndPassword","store","auth","data","email","password","error_message","computed","user","$store","getters","idToken","btnclass","methods","signIn","then","userCredential","emailVerified","url","commit","getAccounts","checkSubscribe","response","console","log","$router","replace","error","code","message","refresh_error"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"login_page\">\n    <section class=\"relative pt-12\">\n      <div class=\"container px-4 mx-auto\">\n        <div class=\"h-full\">\n          <div class=\"relative max-w-xs mx-auto text-center\">\n            <a class=\"w-24 inline-block mx-auto mb-10\" href=\"#\">\n              <img class=\"block\" src=\"../assets/sociama_01@4x.png\" alt=\"\" />\n            </a>\n            <h2 class=\"text-2xl text-gray-500 font-semibold mb-2\">\n              Log in to your account\n            </h2>\n            <p class=\"text-gray-400 font-medium mb-10\">\n              Welcome back! Please enter your account.\n            </p>\n            <form action=\"\">\n              <div\n                class=\"relative w-full h-14 py-4 px-3 mb-8 border border-gray-400 hover:border-blue focus-within:border-green-500 rounded-lg\"\n              >\n                <span\n                  class=\"absolute bottom-full left-0 ml-3 -mb-1 transform translate-y-0.5 text-xs font-semibold text-gray-600 px-1 bg-gray-200\"\n                  >Email</span\n                >\n                <input\n                  class=\"block w-full outline-none text-sm text-gray-600 font-medium\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"mail-address@example.com\"\n                  v-model=\"email\"\n                />\n              </div>\n              <div\n                class=\"relative w-full h-14 py-4 px-3 mb-3 border border-gray-400 hover:border-blue focus-within:border-green-500 rounded-lg\"\n              >\n                <span\n                  class=\"absolute bottom-full left-0 ml-3 -mb-1 transform translate-y-0.5 text-xs font-semibold text-gray-600 px-1 bg-gray-200\"\n                  >Password</span\n                >\n                <input\n                  class=\"block w-full outline-none bg-transparent text-sm text-gray-600 font-medium\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  v-model=\"password\"\n                />\n              </div>\n            </form>\n            <button\n              class=\"mt-6 block w-full py-4 mb-4 leading-6 text-white font-semibold rounded-lg transition duration-200\"\n              :class=\"\n                email != '' && this.password != ''\n                  ? 'bg-blue-500 hover:bg-blue-600'\n                  : 'bg-gray-500 hover:bg-gray-600'\n              \"\n              :disabled=\"!email || !password\"\n              @click=\"signIn\"\n            >\n              Sign In\n            </button>\n            <p class=\"font-medium\">\n              <router-link to=\"/sign-up\">\n                <span class=\"text-gray-300\">Don’t have an account?</span>\n                <a class=\"inline-block text-blue-500 hover:underline\" href=\"#\">\n                  Sign up</a\n                >\n              </router-link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport {\n  getAuth,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n} from \"@firebase/auth\";\nimport store from \"@/store\";\nimport \"../firebase_config\";\n\nconst auth = getAuth();\n\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error_message: \"\",\n    };\n  },\n  computed: {\n    user() {\n      return this.$store.getters[\"user\"];\n    },\n    idToken() {\n      return this.$store.getters[\"idToken\"];\n    },\n    btnclass: function () {\n      if (this.email != \"\" && this.password != \"\") {\n        return \"bg-blue-500 hover:bg-blue-600\";\n      } else {\n        return \"bg-gray-500 hover:bg-gray-600\";\n      }\n    },\n  },\n  methods: {\n    signIn: async function () {\n      let user = null;\n      await signInWithEmailAndPassword(auth, this.email, this.password)\n        .then((userCredential) => {\n          user = userCredential.user;\n          if (user.emailVerified == false) {\n            this.error_message =\n              \"メール認証が未済です。送付したメールから認証を完了してください\";\n            sendEmailVerification(user, {\n              url: \"https://social-marketing.io/login\",\n            });\n          } else {\n            store.commit(\"updateUser\", user);\n            api\n              .getAccounts()\n              .then(() => {\n                api\n                  .checkSubscribe()\n                  .then((response) => {\n                    console.log(response);\n                    store.commit(\"updateSubscribePlan\", response[\"data\"]);\n                    this.$router.replace(\"/campaigns\");\n                  })\n                  .catch((error) => {\n                    console.log(\"subscribe check error:\", error);\n                    this.$router.replace(\"/campaigns\");\n                  });\n                this.$router.replace(\"/campaigns\");\n              })\n              .catch((error) => {\n                console.log(\"login getAccounts error:\", error);\n              });\n          }\n        })\n        .catch((error) => {\n          console.log(error.code + \" \" + error.message);\n          this.error_message = \"EmailかPasswordが間違っています\";\n        });\n    },\n    refresh_error: function () {\n      this.error_message = \"\";\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}