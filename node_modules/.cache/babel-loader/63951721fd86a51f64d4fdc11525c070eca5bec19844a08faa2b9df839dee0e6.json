{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\n// import api from \"../api/api.js\";\n// import { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts\n  },\n  mounted: function mounted() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  } // const route = useRoute();\n  ,\n  data: function data() {\n    return {\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\"\n        },\n        title: {\n          text: \"\",\n          align: \"left\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\"\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false\n            }\n          },\n          yaxis: {\n            lines: {\n              show: false\n            }\n          }\n        }\n      },\n      dailycountSeries: [],\n      scoreOptions: {\n        labels: [],\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\"\n          }\n        },\n        title: {\n          text: \"\"\n        }\n      },\n      scoreSeries: []\n    };\n  },\n  computed: {},\n  methods: {\n    getCampaign: function getCampaign() {\n      var _this = this;\n      api.getdailyTweetCount({\n        campaign_id: route.params.id\n      }).then(function (response) {\n        _this.dailycountOptions.xaxis.categories = response[\"data\"][\"categories\"];\n        console.log(response[\"data\"]);\n        for (var i = 0; i < response[\"data\"][\"name\"].length; i++) {\n          _this.dailycountSeries.push({\n            name: response[\"data\"][\"name\"][i],\n            data: response[\"data\"][\"data\"][i]\n          });\n        }\n        _this.tweetCount = response[\"data\"][\"data\"][0].reduce(function (a, b) {\n          return a + b;\n        });\n        _this.tweetCount_yesterday = _this.tweetCount - response[\"data\"][\"data\"][0].slice(-1)[0];\n        _this.engagementCount = 0;\n        _this.engagementCount += response[\"data\"][\"data\"][1].reduce(function (a, b) {\n          return a + b;\n        });\n        _this.engagementCount += response[\"data\"][\"data\"][2].reduce(function (a, b) {\n          return a + b;\n        });\n        _this.engagementCount += response[\"data\"][\"data\"][3].reduce(function (a, b) {\n          return a + b;\n        });\n        _this.engagementCount += response[\"data\"][\"data\"][4].reduce(function (a, b) {\n          return a + b;\n        });\n        _this.engagementCount_yesterday = _this.engagementCount - response[\"data\"][\"data\"][1].slice(-2)[0] - response[\"data\"][\"data\"][2].slice(-2)[0] - response[\"data\"][\"data\"][3].slice(-2)[0] - response[\"data\"][\"data\"][4].slice(-2)[0];\n      })[\"catch\"](function () {\n        _this.$toast.show(\"分析データの取得に失敗しました\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["VueApexCharts","name","components","apexchart","mounted","data","chart_height","window","innerHeight","chart_width","innerWidth","dailycountOptions","chart","id","type","title","text","align","dataLabels","enabled","xaxis","categories","labels","style","colors","yaxis","legend","show","grid","lines","dailycountSeries","scoreOptions","scoreSeries","computed","methods","getCampaign","api","getdailyTweetCount","campaign_id","route","params","then","response","console","log","i","length","push","tweetCount","reduce","a","b","tweetCount_yesterday","slice","engagementCount","engagementCount_yesterday","$toast","position","duration"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/DiscordSummary.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Discord Summary</PageTitle>\n      <div>\n        <p class=\"text-white text-left ml-4 text-sm\">\n          コミュニティの状況を把握しましょう\n        </p>\n      </div>\n      <div class=\"px-4\">\n        <div class=\"text-left grid grid-cols-3 mt-3\">\n          <div v-for=\"dailycount in dailycountSeries\" :key=\"dailycount\">\n            <p class=\"text-lg text-gray-200 font-semibold mb-3 mt-3\">\n              {{ dailycount[\"name\"] }}\n            </p>\n            <div v-if=\"dailycountOptions.xaxis.categories.length > 0\">\n              <apexchart\n                :width=\"full\"\n                :height=\"chart_height\"\n                :title=\"dailycount.name\"\n                :options=\"dailycountOptions\"\n                :series=\"[dailycount]\"\n              ></apexchart>\n            </div>\n          </div>\n        </div>\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\n// import api from \"../api/api.js\";\n// import { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    apexchart: VueApexCharts,\n  },\n  async mounted() {\n    // const route = useRoute();\n  },\n  data() {\n    return {\n      chart_height: window.innerHeight / 3,\n      chart_width: window.innerWidth / 3,\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n          type: \"area\",\n        },\n        title: {\n          text: \"\",\n          align: \"left\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        yaxis: {\n          // type: \"datetime\",\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: false,\n            },\n          },\n          yaxis: {\n            lines: {\n              show: false,\n            },\n          },\n        },\n      },\n      dailycountSeries: [],\n      scoreOptions: {\n        labels: [],\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n        title: {\n          text: \"\",\n        },\n      },\n      scoreSeries: [],\n    };\n  },\n  computed: {},\n  methods: {\n    getCampaign() {\n      api\n        .getdailyTweetCount({ campaign_id: route.params.id })\n        .then((response) => {\n          this.dailycountOptions.xaxis.categories =\n            response[\"data\"][\"categories\"];\n          console.log(response[\"data\"]);\n          for (let i = 0; i < response[\"data\"][\"name\"].length; i++) {\n            this.dailycountSeries.push({\n              name: response[\"data\"][\"name\"][i],\n              data: response[\"data\"][\"data\"][i],\n            });\n          }\n          this.tweetCount = response[\"data\"][\"data\"][0].reduce(function (a, b) {\n            return a + b;\n          });\n          this.tweetCount_yesterday =\n            this.tweetCount - response[\"data\"][\"data\"][0].slice(-1)[0];\n          this.engagementCount = 0;\n          this.engagementCount += response[\"data\"][\"data\"][1].reduce(function (\n            a,\n            b\n          ) {\n            return a + b;\n          });\n          this.engagementCount += response[\"data\"][\"data\"][2].reduce(function (\n            a,\n            b\n          ) {\n            return a + b;\n          });\n          this.engagementCount += response[\"data\"][\"data\"][3].reduce(function (\n            a,\n            b\n          ) {\n            return a + b;\n          });\n          this.engagementCount += response[\"data\"][\"data\"][4].reduce(function (\n            a,\n            b\n          ) {\n            return a + b;\n          });\n          this.engagementCount_yesterday =\n            this.engagementCount -\n            response[\"data\"][\"data\"][1].slice(-2)[0] -\n            response[\"data\"][\"data\"][2].slice(-2)[0] -\n            response[\"data\"][\"data\"][3].slice(-2)[0] -\n            response[\"data\"][\"data\"][4].slice(-2)[0];\n        })\n        .catch(() => {\n          this.$toast.show(\"分析データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}