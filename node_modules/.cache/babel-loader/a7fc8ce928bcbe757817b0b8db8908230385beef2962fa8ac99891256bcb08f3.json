{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport api from \"@/api/api.js\";\nimport store from \"@/store\";\n// import { createHash } from \"crypto\";\n\nexport default {\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\",\n      loading: false\n    };\n  },\n  computed: {\n    user_id: function user_id() {\n      return this.$store.getters[\"userId\"];\n    },\n    token: function token() {\n      return this.$store.getters[\"authToken\"];\n    }\n  },\n  methods: {\n    signIn: function signIn() {\n      var _this = this;\n      this.loading = true;\n      var SHA256 = require(\"crypto-js/sha256\");\n      var pw_token = SHA256(this.password);\n      api.login({\n        name: this.username,\n        password: pw_token.toString()\n      }).then(function (response) {\n        // console.log(response);\n        var token = SHA256(_this.password + response.data);\n        // console.log(token.toString());\n        store.commit(\"updateauthToken\", token.toString());\n        _this.$toast.show(\"ログインに成功しました\", {\n          type: \"success\",\n          position: \"top-right\",\n          duration: 3000\n        });\n        api.getAdminUser().then(function (response) {\n          console.log(response);\n          store.commit(\"updateuserId\", response.data.admin_id);\n          store.commit(\"updateauthority\", response.data.authority);\n          _this.$router.replace(\"/table-view\");\n        })[\"catch\"](function () {\n          _this.$toast.show(\"アカウント情報の取得に失敗しました。システム管理者にお問合せください。\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n        });\n        _this.loading = false;\n      })[\"catch\"](function (error) {\n        _this.$toast.show(\"Username又はPasswordが間違っています\", {\n          type: \"error\",\n          position: \"top-right\",\n          duration: 5000\n        });\n        _this.loading = false;\n        console.log(error.code + \" \" + error.message);\n      });\n    },\n    refresh_error: function refresh_error() {\n      this.error_message = \"\";\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAiEA,OAAOA,GAAE,MAAO,cAAc;AAC9B,OAAOC,KAAI,MAAO,SAAS;AAC3B;;AAEA,eAAe;EACbC,IAAI,kBAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,qBAAG;MACR,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,QAAQ,CAAC;IACtC,CAAC;IACDC,KAAK,mBAAG;MACN,OAAO,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC;IACzC;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAY;MAAA;MAClB,IAAI,CAACP,OAAM,GAAI,IAAI;MACnB,IAAIQ,MAAK,GAAIC,OAAO,CAAC,kBAAkB,CAAC;MACxC,IAAMC,QAAO,GAAIF,MAAM,CAAC,IAAI,CAACT,QAAQ,CAAC;MACtCJ,GAAE,CACCgB,KAAK,CAAC;QACLC,IAAI,EAAE,IAAI,CAACd,QAAQ;QACnBC,QAAQ,EAAEW,QAAQ,CAACG,QAAQ;MAC7B,CAAC,EACAC,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClB;QACA,IAAMV,KAAI,GAAIG,MAAM,CAAC,KAAI,CAACT,QAAO,GAAIgB,QAAQ,CAAClB,IAAI,CAAC;QACnD;QACAD,KAAK,CAACoB,MAAM,CAAC,iBAAiB,EAAEX,KAAK,CAACQ,QAAQ,EAAE,CAAC;QACjD,KAAI,CAACI,MAAM,CAACC,IAAI,CAAC,aAAa,EAAE;UAC9BC,IAAI,EAAE,SAAS;UACfC,QAAQ,EAAE,WAAW;UACrBC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF1B,GAAE,CACC2B,YAAY,EAAC,CACbR,IAAI,CAAC,UAACC,QAAQ,EAAK;UAClBQ,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;UACrBnB,KAAK,CAACoB,MAAM,CAAC,cAAc,EAAED,QAAQ,CAAClB,IAAI,CAAC4B,QAAQ,CAAC;UACpD7B,KAAK,CAACoB,MAAM,CAAC,iBAAiB,EAAED,QAAQ,CAAClB,IAAI,CAAC6B,SAAS,CAAC;UACxD,KAAI,CAACC,OAAO,CAACC,OAAO,CAAC,aAAa,CAAC;QACrC,CAAC,UACK,CAAC,YAAM;UACX,KAAI,CAACX,MAAM,CAACC,IAAI,CACd,qCAAqC,EACrC;YACEC,IAAI,EAAE,OAAO;YACbC,QAAQ,EAAE,WAAW;YACrBC,QAAQ,EAAE;UACZ,EACD;QACH,CAAC,CAAC;QACJ,KAAI,CAACrB,OAAM,GAAI,KAAK;MACtB,CAAC,UACK,CAAC,UAAC6B,KAAK,EAAK;QAChB,KAAI,CAACZ,MAAM,CAACC,IAAI,CAAC,4BAA4B,EAAE;UAC7CC,IAAI,EAAE,OAAO;UACbC,QAAQ,EAAE,WAAW;UACrBC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF,KAAI,CAACrB,OAAM,GAAI,KAAK;QACpBuB,OAAO,CAACC,GAAG,CAACK,KAAK,CAACC,IAAG,GAAI,GAAE,GAAID,KAAK,CAACE,OAAO,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC;IACDC,aAAa,EAAE,yBAAY;MACzB,IAAI,CAACC,aAAY,GAAI,EAAE;IACzB;EACF;AACF,CAAC","names":["api","store","data","username","password","loading","computed","user_id","$store","getters","token","methods","signIn","SHA256","require","pw_token","login","name","toString","then","response","commit","$toast","show","type","position","duration","getAdminUser","console","log","admin_id","authority","$router","replace","error","code","message","refresh_error","error_message"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"login_page\">\n    <section class=\"relative pt-24\">\n      <div class=\"container px-4 mx-auto\">\n        <div class=\"h-full\">\n          <div class=\"relative max-w-xs mx-auto text-center\">\n            <div class=\"w-24 inline-block mx-auto mb-10\">\n              <img class=\"block\" src=\"../assets/icon.jpg\" />\n            </div>\n            <h2 class=\"text-2xl text-gray-500 font-semibold mb-2\"></h2>\n            <p class=\"text-gray-400 font-medium mb-10\">\n              Welcome back! Please enter your account.\n            </p>\n            <form action=\"\">\n              <div\n                class=\"relative w-full h-14 py-4 px-3 mb-8 border border-gray-400 hover:border-blue focus-within:border-green-500 rounded-lg\"\n              >\n                <span\n                  class=\"absolute bottom-full left-0 ml-3 -mb-1 transform translate-y-0.5 text-xs font-semibold text-gray-600 px-1 bg-gray-200\"\n                  >username</span\n                >\n                <input\n                  class=\"block w-full outline-none text-sm text-gray-600 font-medium\"\n                  type=\"text\"\n                  placeholder=\"hanabi\"\n                  v-model=\"username\"\n                />\n              </div>\n              <div\n                class=\"relative w-full h-14 py-4 px-3 mb-3 border border-gray-400 hover:border-blue focus-within:border-green-500 rounded-lg\"\n              >\n                <span\n                  class=\"absolute bottom-full left-0 ml-3 -mb-1 transform translate-y-0.5 text-xs font-semibold text-gray-600 px-1 bg-gray-200\"\n                  >Password</span\n                >\n                <input\n                  class=\"block w-full outline-none bg-transparent text-sm text-gray-600 font-medium\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  v-model=\"password\"\n                />\n              </div>\n            </form>\n            <button\n              class=\"mt-6 block w-full py-4 mb-4 leading-6 text-white font-semibold rounded-lg transition duration-200\"\n              :class=\"\n                username != '' && this.password != '' && !loading\n                  ? 'bg-green-500 hover:bg-green-600'\n                  : 'bg-gray-500 hover:bg-gray-600'\n              \"\n              :disabled=\"!username || !password || loading\"\n              @click=\"signIn\"\n            >\n              <i class=\"pi pi-spin pi-spinner text-sm\" v-if=\"loading\"></i>\n              Sign In\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport api from \"@/api/api.js\";\nimport store from \"@/store\";\n// import { createHash } from \"crypto\";\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      loading: false,\n    };\n  },\n  computed: {\n    user_id() {\n      return this.$store.getters[\"userId\"];\n    },\n    token() {\n      return this.$store.getters[\"authToken\"];\n    },\n  },\n  methods: {\n    signIn: function () {\n      this.loading = true;\n      var SHA256 = require(\"crypto-js/sha256\");\n      const pw_token = SHA256(this.password);\n      api\n        .login({\n          name: this.username,\n          password: pw_token.toString(),\n        })\n        .then((response) => {\n          // console.log(response);\n          const token = SHA256(this.password + response.data);\n          // console.log(token.toString());\n          store.commit(\"updateauthToken\", token.toString());\n          this.$toast.show(\"ログインに成功しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000,\n          });\n          api\n            .getAdminUser()\n            .then((response) => {\n              console.log(response);\n              store.commit(\"updateuserId\", response.data.admin_id);\n              store.commit(\"updateauthority\", response.data.authority);\n              this.$router.replace(\"/table-view\");\n            })\n            .catch(() => {\n              this.$toast.show(\n                \"アカウント情報の取得に失敗しました。システム管理者にお問合せください。\",\n                {\n                  type: \"error\",\n                  position: \"top-right\",\n                  duration: 5000,\n                }\n              );\n            });\n          this.loading = false;\n        })\n        .catch((error) => {\n          this.$toast.show(\"Username又はPasswordが間違っています\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n          this.loading = false;\n          console.log(error.code + \" \" + error.message);\n        });\n    },\n    refresh_error: function () {\n      this.error_message = \"\";\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}