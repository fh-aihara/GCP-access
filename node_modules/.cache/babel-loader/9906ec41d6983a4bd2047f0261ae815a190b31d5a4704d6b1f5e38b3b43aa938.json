{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { createUserWithEmailAndPassword, getAuth, sendEmailVerification } from \"@firebase/auth\";\nimport api from \"../api/api.js\";\nimport store from \"@/store\";\nimport \"../firebase_config\";\nvar auth = getAuth();\nexport default {\n  data: function data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      signUp_flag: true,\n      loading: false\n    };\n  },\n  computed: {\n    btnclass: function btnclass() {\n      if (this.name != \"\" && this.email != \"\" && this.password != \"\") {\n        return \"block w-full py-4 mb-4 leading-6 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg transition duration-200\";\n      } else {\n        return \"block w-full py-4 mb-4 leading-6 text-white font-semibold bg-gray-500 hover:bg-gray-600 rounded-lg transition duration-200\";\n      }\n    },\n    signUp_disable: function signUp_disable() {\n      //条件分岐を簡略化するためにboolを反転させた\n      return !(this.name != \"\" && this.email != \"\" && this.password != \"\" && this.signUp_flag);\n    }\n  },\n  methods: {\n    signUp: function signUp() {\n      var _this = this;\n      var user = null;\n      createUserWithEmailAndPassword(auth, this.email, this.password).then(function (userCredential) {\n        _this.loading = true;\n        user = userCredential.user;\n        // store.commit(\"updateUser\", user);\n        api.createOrganizer({\n          name: _this.name\n        }).then(function (organizer) {\n          api.createAccount({\n            organizer_id: organizer.data.organizer_id,\n            email: _this.email\n          }).then(function () {\n            sendEmailVerification(user, {\n              url: \"http://social-marketing.io/login\"\n            });\n            store.commit(\"updateUser\", null);\n            _this.$router.replace(\"/sent-mail\");\n          })[\"catch\"](function (error) {\n            _this.$toast.show(\"アカウントの作成に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000\n            });\n            store.commit(\"updateUser\", null);\n            console.log(error);\n          });\n        })[\"catch\"](function (error) {\n          _this.$toast.show(\"組織の作成に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          store.commit(\"updateUser\", null);\n          console.log(error);\n        });\n      })[\"catch\"](function (error) {\n        switch (error.code) {\n          case \"auth/email-already-in-use\":\n            _this.$toast.show(\"このアドレスは登録済です\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000\n            });\n            break;\n          case \"auth/invalid-email\":\n            _this.$toast.show(\"アドレスのフォーマットが正しくありません\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000\n            });\n            break;\n          default:\n            _this.$toast.show(\"エラーが発生しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000\n            });\n            console.log(error.code + \": \" + error.message);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["createUserWithEmailAndPassword","getAuth","sendEmailVerification","api","store","auth","data","name","email","password","signUp_flag","loading","computed","btnclass","signUp_disable","methods","signUp","user","then","userCredential","createOrganizer","organizer","createAccount","organizer_id","url","commit","$router","replace","error","$toast","show","type","position","duration","console","log","code","message"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/SignupPage.vue"],"sourcesContent":["<template>\n  <div class=\"SignIn_page\">\n    <section class=\"relative pt-12\">\n      <div class=\"container px-4 mx-auto\">\n        <div class=\"h-full\">\n          <div class=\"relative max-w-xs mx-auto text-center\">\n            <a class=\"w-24 inline-block mx-auto mb-10\" href=\"#\">\n              <img class=\"block\" src=\"../assets/sociama_01@4x.png\" alt=\"\" />\n            </a>\n            <h2 class=\"text-2xl text-gray-500 font-semibold mb-2\">\n              Create your account\n            </h2>\n            <br />\n            <div\n              class=\"relative w-full h-14 py-4 px-3 mb-8 border border-gray-400 hover:border-blue focus-within:border-green-500 rounded-lg\"\n            >\n              <span\n                class=\"absolute bottom-full left-0 ml-3 -mb-1 transform translate-y-0.5 text-xs font-semibold text-gray-600 px-1 bg-gray-200\"\n                >Organization name / Project name</span\n              >\n              <input\n                class=\"block w-full outline-none bg-transparent text-sm text-gray-600 font-medium\"\n                id=\"signUpInput1\"\n                type=\"text\"\n                placeholder=\"example inc.\"\n                v-model=\"name\"\n              />\n            </div>\n            <div\n              class=\"relative w-full h-14 py-4 px-3 mb-8 border border-gray-400 hover:border-blue focus-within:border-green-500 rounded-lg\"\n            >\n              <span\n                class=\"absolute bottom-full left-0 ml-3 -mb-1 transform translate-y-0.5 text-xs font-semibold text-gray-600 px-1 bg-gray-200\"\n                >Email</span\n              >\n              <input\n                class=\"block w-full outline-none bg-transparent text-sm text-gray-600 font-medium\"\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"mail-address@example.com\"\n                v-model=\"email\"\n              />\n            </div>\n            <div\n              class=\"relative w-full h-14 py-4 px-3 mb-6 border border-gray-400 hover:border-blue focus-within:border-green-500 rounded-lg\"\n            >\n              <span\n                class=\"absolute bottom-full left-0 ml-3 -mb-1 transform translate-y-0.5 text-xs font-semibold text-gray-600 px-1 bg-gray-200\"\n                >Password</span\n              >\n              <input\n                class=\"block w-full outline-none bg-transparent text-sm text-gray-600 font-medium\"\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                v-model=\"password\"\n              />\n            </div>\n            <button\n              class=\"block w-full py-4 mb-4 leading-6 text-white font-semibold rounded-lg transition duration-200\"\n              :class=\"\n                this.name != '' && this.email != '' && this.password != ''\n                  ? 'bg-blue-500 hover:bg-blue-600'\n                  : 'bg-gray-500 hover:bg-gray-600'\n              \"\n              v-bind:disabled=\"signUp_disable\"\n              @click=\"signUp\"\n            >\n              Sign Up\n            </button>\n            <p class=\"font-medium\">\n              <span class=\"text-gray-300\"\n                >Do you have any account already?\n              </span>\n              <router-link to=\"/login\">\n                <a class=\"inline-block text-blue-500 hover:underline\" href=\"#\">\n                  Sign in</a\n                >\n              </router-link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport {\n  createUserWithEmailAndPassword,\n  getAuth,\n  sendEmailVerification,\n} from \"@firebase/auth\";\nimport api from \"../api/api.js\";\nimport store from \"@/store\";\nimport \"../firebase_config\";\n\nconst auth = getAuth();\n\nexport default {\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      signUp_flag: true,\n      loading: false,\n    };\n  },\n  computed: {\n    btnclass: function () {\n      if (this.name != \"\" && this.email != \"\" && this.password != \"\") {\n        return \"block w-full py-4 mb-4 leading-6 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg transition duration-200\";\n      } else {\n        return \"block w-full py-4 mb-4 leading-6 text-white font-semibold bg-gray-500 hover:bg-gray-600 rounded-lg transition duration-200\";\n      }\n    },\n    signUp_disable: function () {\n      //条件分岐を簡略化するためにboolを反転させた\n      return !(\n        this.name != \"\" &&\n        this.email != \"\" &&\n        this.password != \"\" &&\n        this.signUp_flag\n      );\n    },\n  },\n  methods: {\n    signUp: function () {\n      var user = null;\n      createUserWithEmailAndPassword(auth, this.email, this.password)\n        .then((userCredential) => {\n          this.loading = true;\n          user = userCredential.user;\n          // store.commit(\"updateUser\", user);\n          api\n            .createOrganizer({ name: this.name })\n            .then((organizer) => {\n              api\n                .createAccount({\n                  organizer_id: organizer.data.organizer_id,\n                  email: this.email,\n                })\n                .then(() => {\n                  sendEmailVerification(user, {\n                    url: \"http://social-marketing.io/login\",\n                  });\n                  store.commit(\"updateUser\", null);\n                  this.$router.replace(\"/sent-mail\");\n                })\n                .catch((error) => {\n                  this.$toast.show(\"アカウントの作成に失敗しました\", {\n                    type: \"error\",\n                    position: \"top-right\",\n                    duration: 5000,\n                  });\n                  store.commit(\"updateUser\", null);\n                  console.log(error);\n                });\n            })\n            .catch((error) => {\n              this.$toast.show(\"組織の作成に失敗しました\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000,\n              });\n              store.commit(\"updateUser\", null);\n              console.log(error);\n            });\n        })\n        .catch((error) => {\n          switch (error.code) {\n            case \"auth/email-already-in-use\":\n              this.$toast.show(\"このアドレスは登録済です\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000,\n              });\n              break;\n            case \"auth/invalid-email\":\n              this.$toast.show(\"アドレスのフォーマットが正しくありません\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000,\n              });\n              break;\n            default:\n              this.$toast.show(\"エラーが発生しました\", {\n                type: \"error\",\n                position: \"top-right\",\n                duration: 5000,\n              });\n              console.log(error.code + \": \" + error.message);\n          }\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}