{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  methods: {\n    uploadFile: function uploadFile() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              formData = new FormData();\n              formData.append(\"file\", _this.$refs.fileInput.files[0]);\n              _context.next = 4;\n              return fetch(\"/api/upload\", {\n                method: \"POST\",\n                body: formData\n              });\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;AAQA,eAAe;EACbA,OAAO,EAAE;IACDC,UAAU,wBAAG;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACXC,QAAO,GAAI,IAAIC,QAAQ,EAAE;cAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,KAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;cAAA;cAAA,OAChDC,KAAK,CAAC,aAAa,EAAE;gBACzBC,MAAM,EAAE,MAAM;gBACdC,IAAI,EAAER;cACR,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACJ;EACF;AACF,CAAC","names":["methods","uploadFile","formData","FormData","append","$refs","fileInput","files","fetch","method","body"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignPageCreate.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"uploadFile\">\n    <input type=\"file\" ref=\"fileInput\" />\n    <button type=\"submit\">Upload</button>\n  </form>\n</template>\n\n<script>\nexport default {\n  methods: {\n    async uploadFile() {\n      const formData = new FormData();\n      formData.append(\"file\", this.$refs.fileInput.files[0]);\n      await fetch(\"/api/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}