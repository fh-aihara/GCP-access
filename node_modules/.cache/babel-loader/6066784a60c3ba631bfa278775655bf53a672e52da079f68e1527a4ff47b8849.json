{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport api from \"../api/api.js\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    Datepicker: Datepicker\n  },\n  mounted: function mounted() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      date: []\n    };\n  },\n  computed: {},\n  methods: {\n    downlordrankingPromise: function downlordrankingPromise() {\n      var _this = this;\n      return new Promise(function (resolve) {\n        var csv = \"\\uFEFF\";\n        api.getRanking({\n          campaign_id: _this.$route.params.id,\n          start: _this.date[0],\n          end: _this.date[1]\n        }).then(function (response) {\n          csv += response[\"data\"];\n          var blob = new Blob([csv], {\n            type: \"text/csv\"\n          });\n          var link = document.createElement(\"a\");\n          link.href = window.URL.createObjectURL(blob);\n          link.download = \"sociama_ranking.csv\";\n          link.click();\n          _this.$toast.show(\"ランキングファイルが完了しました\", {\n            type: \"success\",\n            position: \"top-right\",\n            duration: 3000\n          });\n          resolve(\"resolved\");\n        })[\"catch\"](function (error) {\n          _this.$toast.show(\"ランキングファイルの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000\n          });\n          console.log(\"error: \", error);\n          resolve(\"rejected\");\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;AA6BA,OAAOA,GAAE,MAAO,eAAe;AAC/B,OAAOC,UAAS,MAAO,wBAAwB;AAE/C,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVF,UAAU,EAAVA;EACF,CAAC;EACKG,OAAO,qBAAG;IAAA;MAAA;QAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAC,CAAC;EAClBC,IAAI,kBAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,OAAO,EAAE;IACPC,sBAAsB,oCAAG;MAAA;MACvB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAK;QAC9B,IAAIC,GAAE,GAAI,QAAQ;QAClBZ,GAAE,CACCa,UAAU,CAAC;UACVC,WAAW,EAAE,KAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;UAClCC,KAAK,EAAE,KAAI,CAACZ,IAAI,CAAC,CAAC,CAAC;UACnBa,GAAG,EAAE,KAAI,CAACb,IAAI,CAAC,CAAC;QAClB,CAAC,EACAc,IAAI,CAAC,UAACC,QAAQ,EAAK;UAClBT,GAAE,IAAKS,QAAQ,CAAC,MAAM,CAAC;UACvB,IAAIC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACX,GAAG,CAAC,EAAE;YAAEY,IAAI,EAAE;UAAW,CAAC,CAAC;UAChD,IAAIC,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;UACtCF,IAAI,CAACG,IAAG,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACT,IAAI,CAAC;UAC5CG,IAAI,CAACO,QAAO,GAAI,qBAAqB;UACrCP,IAAI,CAACQ,KAAK,EAAE;UACZ,KAAI,CAACC,MAAM,CAACC,IAAI,CAAC,kBAAkB,EAAE;YACnCX,IAAI,EAAE,SAAS;YACfY,QAAQ,EAAE,WAAW;YACrBC,QAAQ,EAAE;UACZ,CAAC,CAAC;UACF1B,OAAO,CAAC,UAAU,CAAC;QACrB,CAAC,UACK,CAAC,UAAC2B,KAAK,EAAK;UAChB,KAAI,CAACJ,MAAM,CAACC,IAAI,CAAC,qBAAqB,EAAE;YACtCX,IAAI,EAAE,OAAO;YACbY,QAAQ,EAAE,WAAW;YACrBC,QAAQ,EAAE;UACZ,CAAC,CAAC;UACFE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;UAC7B3B,OAAO,CAAC,UAAU,CAAC;QACrB,CAAC,CAAC;MACN,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["api","Datepicker","name","components","mounted","data","date","computed","methods","downlordrankingPromise","Promise","resolve","csv","getRanking","campaign_id","$route","params","id","start","end","then","response","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","click","$toast","show","position","duration","error","console","log"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/DiscordMembers.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Discord Members</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          メンバーの活動状況を確認しましょう\n        </div>\n        <div class=\"text-xs text-white flex items-center w-auto\">\n          <div class=\"mr-4\">表示期間</div>\n          <div v-if=\"show_flag\" class=\"w-64\">\n            <Datepicker\n              v-model=\"date\"\n              range\n              :format=\"yyyy / MM / dd\"\n              :enable-time-picker=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"px-4\">テーブル</div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    Datepicker,\n  },\n  async mounted() {},\n  data() {\n    return {\n      date: [],\n    };\n  },\n  computed: {},\n  methods: {\n    downlordrankingPromise() {\n      return new Promise((resolve) => {\n        let csv = \"\\ufeff\";\n        api\n          .getRanking({\n            campaign_id: this.$route.params.id,\n            start: this.date[0],\n            end: this.date[1],\n          })\n          .then((response) => {\n            csv += response[\"data\"];\n            let blob = new Blob([csv], { type: \"text/csv\" });\n            let link = document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob);\n            link.download = \"sociama_ranking.csv\";\n            link.click();\n            this.$toast.show(\"ランキングファイルが完了しました\", {\n              type: \"success\",\n              position: \"top-right\",\n              duration: 3000,\n            });\n            resolve(\"resolved\");\n          })\n          .catch((error) => {\n            this.$toast.show(\"ランキングファイルの取得に失敗しました\", {\n              type: \"error\",\n              position: \"top-right\",\n              duration: 5000,\n            });\n            console.log(\"error: \", error);\n            resolve(\"rejected\");\n          });\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}