{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from \"axios\";\nimport mock from \"./mock/api\";\nimport { getAuth } from \"@firebase/auth\";\nvar config = {\n  headers: {\n    Authorization: null\n  }\n};\nexport var client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\"\n});\nclient.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n    var user, token;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          user = getAuth().currentUser;\n          _context.next = 3;\n          return user.getIdToken(true);\n        case 3:\n          token = _context.sent;\n          //force update= true\n          axios.defaults.headers.common[\"Authorization\"] = token;\n          return _context.abrupt(\"return\", request);\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\nexport default {\n  /**\n   * Todoリスト取得API\n   * 結果はPromiseを返してハンドリングする\n   * @param {Object} params パラメータ\n   */\n  getAccounts: function getAccounts(params) {\n    return client.get(\"/accounts\", {\n      params: params\n    }, config);\n  },\n  createAccount: function createAccount(params) {\n    return client.post(\"/accounts\", params, config);\n  },\n  getOrganizers: function getOrganizers(params) {\n    return client.get(\"/organizers\", params, config);\n  },\n  createOrganizer: function createOrganizer(params) {\n    return client.post(\"/organizers\", params, config);\n  },\n  getCampaigns: function getCampaigns(params) {\n    return client.get(\"/campaigns\", {\n      params: params\n    }, config);\n  },\n  createCampaign: function createCampaign(params) {\n    return client.post(\"/campaigns\", params, config);\n  }\n};","map":{"version":3,"names":["axios","mock","getAuth","config","headers","Authorization","client","create","baseURL","interceptors","request","use","user","currentUser","getIdToken","token","defaults","common","JSON","parse","process","env","VUE_APP_USE_MOCK","run","getAccounts","params","get","createAccount","post","getOrganizers","createOrganizer","getCampaigns","createCampaign"],"sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\nimport mock from \"./mock/api\";\nimport { getAuth } from \"@firebase/auth\";\n\nlet config = {\n  headers: {\n    Authorization: null,\n  },\n};\n\nexport const client = axios.create({\n  baseURL: \"http://127.0.0.1:8000\",\n});\n\nclient.interceptors.request.use(async (request) => {\n  const user = getAuth().currentUser;\n  const token = await user.getIdToken(true); //force update= true\n  axios.defaults.headers.common[\"Authorization\"] = token;\n  return request;\n});\n\n// モック起動\nif (JSON.parse(process.env.VUE_APP_USE_MOCK)) {\n  mock.run(client);\n}\n\nexport default {\n  /**\n   * Todoリスト取得API\n   * 結果はPromiseを返してハンドリングする\n   * @param {Object} params パラメータ\n   */\n  getAccounts(params) {\n    return client.get(\"/accounts\", { params: params }, config);\n  },\n  createAccount(params) {\n    return client.post(\"/accounts\", params, config);\n  },\n  getOrganizers(params) {\n    return client.get(\"/organizers\", params, config);\n  },\n  createOrganizer(params) {\n    return client.post(\"/organizers\", params, config);\n  },\n  getCampaigns(params) {\n    return client.get(\"/campaigns\", { params: params }, config);\n  },\n  createCampaign(params) {\n    return client.post(\"/campaigns\", params, config);\n  },\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,OAAO,QAAQ,gBAAgB;AAExC,IAAIC,MAAM,GAAG;EACXC,OAAO,EAAE;IACPC,aAAa,EAAE;EACjB;AACF,CAAC;AAED,OAAO,IAAMC,MAAM,GAAGN,KAAK,CAACO,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,MAAM,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,sEAAC,iBAAOD,OAAO;IAAA;IAAA;MAAA;QAAA;UACtCE,IAAI,GAAGV,OAAO,EAAE,CAACW,WAAW;UAAA;UAAA,OACdD,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC;QAAA;UAAnCC,KAAK;UAAgC;UAC3Cf,KAAK,CAACgB,QAAQ,CAACZ,OAAO,CAACa,MAAM,CAAC,eAAe,CAAC,GAAGF,KAAK;UAAC,iCAChDL,OAAO;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACf;EAAA;IAAA;EAAA;AAAA,IAAC;;AAEF;AACA,IAAIQ,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC,EAAE;EAC5CrB,IAAI,CAACsB,GAAG,CAACjB,MAAM,CAAC;AAClB;AAEA,eAAe;EACb;AACF;AACA;AACA;AACA;EACEkB,WAAW,uBAACC,MAAM,EAAE;IAClB,OAAOnB,MAAM,CAACoB,GAAG,CAAC,WAAW,EAAE;MAAED,MAAM,EAAEA;IAAO,CAAC,EAAEtB,MAAM,CAAC;EAC5D,CAAC;EACDwB,aAAa,yBAACF,MAAM,EAAE;IACpB,OAAOnB,MAAM,CAACsB,IAAI,CAAC,WAAW,EAAEH,MAAM,EAAEtB,MAAM,CAAC;EACjD,CAAC;EACD0B,aAAa,yBAACJ,MAAM,EAAE;IACpB,OAAOnB,MAAM,CAACoB,GAAG,CAAC,aAAa,EAAED,MAAM,EAAEtB,MAAM,CAAC;EAClD,CAAC;EACD2B,eAAe,2BAACL,MAAM,EAAE;IACtB,OAAOnB,MAAM,CAACsB,IAAI,CAAC,aAAa,EAAEH,MAAM,EAAEtB,MAAM,CAAC;EACnD,CAAC;EACD4B,YAAY,wBAACN,MAAM,EAAE;IACnB,OAAOnB,MAAM,CAACoB,GAAG,CAAC,YAAY,EAAE;MAAED,MAAM,EAAEA;IAAO,CAAC,EAAEtB,MAAM,CAAC;EAC7D,CAAC;EACD6B,cAAc,0BAACP,MAAM,EAAE;IACrB,OAAOnB,MAAM,CAACsB,IAAI,CAAC,YAAY,EAAEH,MAAM,EAAEtB,MAAM,CAAC;EAClD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}