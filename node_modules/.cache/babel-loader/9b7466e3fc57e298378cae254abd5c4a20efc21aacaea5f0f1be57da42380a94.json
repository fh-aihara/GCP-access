{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"campaign_analize\"\n};\nvar _hoisted_2 = {\n  \"class\": \"mx-auto lg:ml-80\"\n};\nvar _hoisted_3 = {\n  \"class\": \"py-3\"\n};\nvar _hoisted_4 = {\n  \"class\": \"container px-4 mx-auto\"\n};\nvar _hoisted_5 = {\n  \"class\": \"pt-6 pb-8 bg-gray-500 rounded-xl\"\n};\nvar _hoisted_6 = {\n  \"class\": \"px-6\"\n};\nvar _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  \"class\": \"text-lg text-gray-100 font-semibold mb-6\"\n}, \" CAMPAIGN ANALIZE \", -1 /* HOISTED */);\nvar _hoisted_8 = {\n  \"class\": \"text-left\"\n};\nvar _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", {\n  \"class\": \"text-lg text-gray-100 font-semibold mb-6 mt-12\"\n}, \" Daily data \", -1 /* HOISTED */);\nvar _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", {\n  \"class\": \"text-lg text-gray-100 font-semibold mb-6 mt-6\"\n}, \" Score distribution(top 20) \", -1 /* HOISTED */);\nvar _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", {\n  \"class\": \"text-lg text-gray-100 font-semibold mb-6 mt-6\"\n}, \" Ranking \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SideVar = _resolveComponent(\"SideVar\");\n  var _component_apexchart = _resolveComponent(\"apexchart\");\n  var _component_Datepicker = _resolveComponent(\"Datepicker\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createCommentVNode(\" side var  \"), _createVNode(_component_SideVar), _createCommentVNode(\" campaign list \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"section\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", null, [_createVNode(_component_apexchart, {\n    width: \"600\",\n    height: \"300\",\n    type: \"bar\",\n    options: $data.dailycountOptions,\n    series: $data.dailycountSeries\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])]), _hoisted_10, _createElementVNode(\"div\", null, [_createVNode(_component_apexchart, {\n    width: \"600\",\n    height: \"400\",\n    type: \"donut\",\n    options: $data.scoreOptions,\n    series: $data.scoreSeries\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])]), _hoisted_11, _createElementVNode(\"div\", null, [_createVNode(_component_Datepicker, {\n    modelValue: $data.date,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.date = $event;\n    }),\n    range: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.downlordranking && $options.downlordranking.apply($options, arguments);\n    })\n  }, \"koko\")]), _createTextVNode(\" \" + _toDisplayString($data.campaign), 1 /* TEXT */)])])])])])])])]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;AAAkB;;EAKpB,SAAM;AAAkB;;EAClB,SAAM;AAAM;;EACd,SAAM;AAAwB;;EAC5B,SAAM;AAAkC;;EACtC,SAAM;AAAM;8BACfA,oBAEK;EAFD,SAAM;AAA0C,GAAC,oBAErD;;EACK,SAAM;AAAW;8BACpBA,oBAEI;EAFD,SAAM;AAAgD,GAAC,cAE1D;+BAUAA,oBAEI;EAFD,SAAM;AAA+C,GAAC,8BAEzD;+BAUAA,oBAEI;EAFD,SAAM;AAA+C,GAAC,WAEzD;;;;;;uBAxChBC,oBAqDM,OArDNC,UAqDM,GApDJF,oBAmDM,cAlDJG,kCAAkB,EAClBC,aAAWC,qBACXF,sCAAsB,EACtBH,oBA8CM,OA9CNM,UA8CM,GA7CJN,oBA4CU,WA5CVO,UA4CU,GA3CRP,oBA0CM,OA1CNQ,UA0CM,GAzCJR,oBAwCM,OAxCNS,UAwCM,GAvCJT,oBAsCM,OAtCNU,UAsCM,GArCJC,UAEK,EACLX,oBAiCM,OAjCNY,UAiCM,GAhCJC,UAEI,EACJb,oBAQM,cAPJI,aAMaU;IALXC,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZC,IAAI,EAAC,KAAK;IACTC,OAAO,EAAEC,uBAAiB;IAC1BC,MAAM,EAAED;oDAGbE,WAEI,EACJrB,oBAQM,cAPJI,aAMaU;IALXC,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZC,IAAI,EAAC,OAAO;IACXC,OAAO,EAAEC,kBAAY;IACrBC,MAAM,EAAED;oDAGbG,WAEI,EACJtB,oBAGM,cAFJI,aAAmCmB;gBAAdJ,UAAI;;aAAJA,UAAI;IAAA;IAAEK,KAAK,EAAL;2CAC3BxB,oBAA8C;IAArCyB,OAAK;MAAA,OAAEC,+EAAe;IAAA;KAAE,MAAI,sBACjC,GACN,oBAAGP,cAAQ","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_SideVar","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_component_apexchart","width","height","type","options","$data","series","_hoisted_10","_hoisted_11","_component_Datepicker","range","onClick","$options"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/views/CampaignAnalitics.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <div>\n      <!-- side var  -->\n      <SideVar />\n      <!-- campaign list -->\n      <div class=\"mx-auto lg:ml-80\">\n        <section class=\"py-3\">\n          <div class=\"container px-4 mx-auto\">\n            <div class=\"pt-6 pb-8 bg-gray-500 rounded-xl\">\n              <div class=\"px-6\">\n                <h4 class=\"text-lg text-gray-100 font-semibold mb-6\">\n                  CAMPAIGN ANALIZE\n                </h4>\n                <div class=\"text-left\">\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-12\">\n                    Daily data\n                  </p>\n                  <div>\n                    <apexchart\n                      width=\"600\"\n                      height=\"300\"\n                      type=\"bar\"\n                      :options=\"dailycountOptions\"\n                      :series=\"dailycountSeries\"\n                    ></apexchart>\n                  </div>\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-6\">\n                    Score distribution(top 20)\n                  </p>\n                  <div>\n                    <apexchart\n                      width=\"600\"\n                      height=\"400\"\n                      type=\"donut\"\n                      :options=\"scoreOptions\"\n                      :series=\"scoreSeries\"\n                    ></apexchart>\n                  </div>\n                  <p class=\"text-lg text-gray-100 font-semibold mb-6 mt-6\">\n                    Ranking\n                  </p>\n                  <div>\n                    <Datepicker v-model=\"date\" range />\n                    <button @click=\"downlordranking\">koko</button>\n                  </div>\n                  {{ campaign }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideVar from \"@/components/SideVar.vue\";\nimport api from \"../api/api.js\";\nimport { useRoute } from \"vue-router\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\n// import { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"Campaign_regit\",\n  components: {\n    SideVar,\n    apexchart: VueApexCharts,\n    Datepicker,\n  },\n  // setup() {\n  //   let date = ref();\n  //   onMounted(() => {\n  //     const today = new Date();\n  //     let startDate = new Date(new Date().setDate(today.getDate() + 3));\n  //     startDate.setHours(21, 0, 0, 0);\n  //     let endDate = new Date(new Date().setDate(startDate.getDate() + 7));\n  //     endDate.setHours(21, 0, 0, 0);\n  //     date.value = [startDate, endDate];\n  //   });\n  //   return {\n  //     date,\n  //   };\n  // },\n  async mounted() {\n    const route = useRoute();\n    await api\n      .getdailyTweetCount({ campaign_id: route.params.id })\n      .then((response) => {\n        let tmp_options = this.dailycountOptions;\n        tmp_options[\"xaxis\"][\"categories\"] = response[\"data\"][\"categories\"];\n        this.dailycountOptions = tmp_options;\n        this.dailycountSeries[0][\"name\"] = response[\"data\"][\"name\"][0];\n        this.dailycountSeries[0][\"data\"] = response[\"data\"][\"data\"][0];\n        this.dailycountSeries[1][\"name\"] = response[\"data\"][\"name\"][1];\n        this.dailycountSeries[1][\"data\"] = response[\"data\"][\"data\"][1];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n    await api\n      .getScore({ campaign_id: route.params.id })\n      .then((response) => {\n        this.scoreSeries = response[\"data\"][\"series\"];\n        this.scoreOptions.labels = response[\"data\"][\"labels\"];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n    await api\n      .getCampaign({ id: route.params.id })\n      .then((response) => {\n        this.campaign = response[\"data\"];\n        let start_date = new Date(this.campaign[\"start_time\"]);\n        start_date.setHours(start_date.getHours() + 9);\n        let end_date = new Date(this.campaign[\"end_time\"]);\n        end_date.setHours(end_date.getHours() + 9);\n        this.date.value = [start_date, end_date];\n      })\n      .catch((error) => {\n        console.log(\"error: \", error);\n      });\n  },\n  data() {\n    return {\n      campaign_name: null,\n      keyword: null,\n      campaign: null,\n      date: [],\n      dailycountOptions: {\n        chart: {\n          id: \"Daily_Counts\",\n        },\n        xaxis: {\n          // type: \"datetime\",\n          categories: [],\n          labels: {\n            style: {\n              colors: \"#C4BBAF\",\n            },\n          },\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: \"#C4BBAF\",\n          },\n        },\n      },\n      dailycountSeries: [\n        {\n          name: \"\",\n          data: [],\n        },\n        {\n          name: \"\",\n          data: [],\n        },\n      ],\n      scoreOptions: {\n        labels: [],\n      },\n      scoreSeries: [],\n    };\n  },\n  computed: {},\n  methods: {\n    downlordranking() {\n      let csv = \"\\ufeff\";\n      api\n        .getRanking({\n          campaign_id: this.$route.params.id,\n          start: this.date[0],\n          end: this.date[1],\n        })\n        .then((response) => {\n          csv += response[\"data\"];\n          let blob = new Blob([csv], { type: \"text/csv\" });\n          let link = document.createElement(\"a\");\n          link.href = window.URL.createObjectURL(blob);\n          link.download = \"test_campaign.csv\";\n          link.click();\n        })\n        .catch((error) => {\n          console.log(\"error: \", error);\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}