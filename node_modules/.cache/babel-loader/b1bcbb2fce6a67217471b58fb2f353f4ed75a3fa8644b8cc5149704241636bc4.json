{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"campaign_analize\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"flex justify-between items-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \" データベースの中身を参照・更新することができます。現状作成・削除の機能はありません。 \")], -1 /* HOISTED */);\nvar _hoisted_3 = {\n  \"class\": \"flex justify-left items-center py-5\"\n};\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"text-white text-left ml-4 text-sm\"\n}, \"操作対象テーブル：\", -1 /* HOISTED */);\nvar _hoisted_5 = [\"value\"];\nvar _hoisted_6 = {\n  \"class\": \"m-4 p-2\"\n};\nvar _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SideVar = _resolveComponent(\"SideVar\");\n  var _component_PageTitle = _resolveComponent(\"PageTitle\");\n  var _component_EasyDataTable = _resolveComponent(\"EasyDataTable\");\n  var _component_RightColumnOutline = _resolveComponent(\"RightColumnOutline\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" side var  \"), _createVNode(_component_SideVar), _createCommentVNode(\" main div \"), _createVNode(_component_RightColumnOutline, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_PageTitle, null, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(\"Table View\")];\n        }),\n        _: 1 /* STABLE */\n      }), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.selectedTable = $event;\n        })\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.optionTables, function (table) {\n        return _openBlock(), _createElementBlock(\"option\", {\n          value: table.name,\n          key: table.id\n        }, _toDisplayString(table.name), 9 /* TEXT, PROPS */, _hoisted_5);\n      }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedTable]])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_EasyDataTable, {\n        headers: $setup.headers,\n        items: $setup.items\n      }, {\n        \"item-update\": _withCtx(function (_ref) {\n          var event_id = _ref.event_id;\n          return [_createElementVNode(\"button\", {\n            \"class\": \"block p-1 px-4 leading-6 text-white rounded-lg transition duration-200 bg-red-500 hover:bg-red-600 text-xs\",\n            onClick: function onClick($event) {\n              return _ctx.cancel_event(event_id);\n            }\n          }, \" Cancel \", 8 /* PROPS */, _hoisted_7)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"headers\", \"items\"])])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;EACO,SAAM;AAAkB;8BAMzBA,oBAIM;EAJD,SAAM;AAAmC,iBAC5CA,oBAEM;EAFD,SAAM;AAAmC,GAAC,8CAE/C;;EAEG,SAAM;AAAqC;8BAC9CA,oBAA8D;EAAzD,SAAM;AAAmC,GAAC,WAAS;;;EAWrD,SAAM;AAAS;;;;;;;uBAvBxBC,oBAoCM,OApCNC,UAoCM,GAnCJC,kCAAkB,EAClBC,aAAWC,qBACXF,iCAAiB,EACjBC,aA+BqBE;wBA9BnB;MAAA,OAAiC,CAAjCF,aAAiCG;4BAAtB;UAAA,OAAU,kBAAV,YAAU;;;UACrBC,UAIM,EACNR,oBAWM,OAXNS,UAWM,GAVJC,UAA8D,kBAC9DV,oBAQS;;iBARQW,mBAAa;QAAA;6BAC5BV,oBAMSW,6BALSD,kBAAY,YAArBE,KAAK;6BADdZ,oBAMS;UAJAa,KAAK,EAAED,KAAK,CAACE,IAAI;UACjBC,GAAG,EAAEH,KAAK,CAACI;4BAEfJ,KAAK,CAACE,IAAI;+EANAJ,mBAAa,OAUhCX,oBAWM,OAXNkB,UAWM,GAVJd,aASgBe;QATAC,OAAO,EAAEC,cAAO;QAAGC,KAAK,EAAED;;QAC7B,aAAW,WACpB;UAAA,IADwBE,QAAQ,QAARA,QAAQ;UAAA,QAChCvB,oBAKS;YAJP,SAAM,4GAA4G;YACjHwB,OAAK;cAAA,OAAEC,iBAAY,CAACF,QAAQ;YAAA;aAC9B,UAED","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_SideVar","_component_RightColumnOutline","_component_PageTitle","_hoisted_2","_hoisted_3","_hoisted_4","$data","_Fragment","table","value","name","key","id","_hoisted_6","_component_EasyDataTable","headers","$setup","items","event_id","onClick","_ctx"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/hanabi-admin/src/views/TableView.vue"],"sourcesContent":["<template>\n  <div class=\"campaign_analize\">\n    <!-- side var  -->\n    <SideVar />\n    <!-- main div -->\n    <RightColumnOutline>\n      <PageTitle>Table View</PageTitle>\n      <div class=\"flex justify-between items-center\">\n        <div class=\"text-white text-left ml-4 text-sm\">\n          データベースの中身を参照・更新することができます。現状作成・削除の機能はありません。\n        </div>\n      </div>\n      <div class=\"flex justify-left items-center py-5\">\n        <div class=\"text-white text-left ml-4 text-sm\">操作対象テーブル：</div>\n        <select v-model=\"selectedTable\">\n          <option\n            v-for=\"table in optionTables\"\n            v-bind:value=\"table.name\"\n            v-bind:key=\"table.id\"\n          >\n            {{ table.name }}\n          </option>\n        </select>\n      </div>\n      <div class=\"m-4 p-2\">\n        <EasyDataTable :headers=\"headers\" :items=\"items\">\n          <template #item-update=\"{ event_id }\">\n            <button\n              class=\"block p-1 px-4 leading-6 text-white rounded-lg transition duration-200 bg-red-500 hover:bg-red-600 text-xs\"\n              @click=\"cancel_event(event_id)\"\n            >\n              Cancel\n            </button>\n          </template>\n        </EasyDataTable>\n      </div>\n    </RightColumnOutline>\n  </div>\n</template>\n\n<script>\nimport api from \"../api/api.js\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"tableView\",\n  components: {},\n  setup() {\n    const headers = [\n      { text: \"update\", value: \"update\" },\n      { text: \"event_id\", value: \"event_id\", sortable: true },\n      {\n        text: \"theme\",\n        value: \"theme\",\n        sortable: true,\n      },\n      {\n        text: \"states\",\n        value: \"states\",\n        sortable: true,\n      },\n      { text: \"area\", value: \"area\", sortable: true },\n      { text: \"start_at\", value: \"start_at\", sortable: true },\n      { text: \"name\", value: \"name\", sortable: true },\n      { text: \"status\", value: \"status\", sortable: true },\n      { text: \"payment_ratio\", value: \"payment_ratio\", sortable: true },\n      {\n        text: \"male_estimated_payment\",\n        value: \"male_estimated_payment\",\n        sortable: true,\n      },\n      {\n        text: \"female_estimated_payment\",\n        value: \"female_estimated_payment\",\n        sortable: true,\n      },\n      {\n        text: \"message_from_owner\",\n        value: \"message_from_owner\",\n        sortable: true,\n      },\n      { text: \"owner_user_id\", value: \"owner_user_id\", sortable: true },\n      {\n        text: \"participants_pattern\",\n        value: \"participants_pattern\",\n        sortable: true,\n      },\n      { text: \"restaurant_url\", value: \"restaurant_url\", sortable: true },\n      {\n        text: \"male_participants_number\",\n        value: \"male_participants_number\",\n        sortable: true,\n      },\n      {\n        text: \"female_participants_number\",\n        value: \"female_participants_number\",\n        sortable: true,\n      },\n      { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n      { text: \"created_at\", value: \"created_at\", sortable: true },\n      { text: \"updated_at\", value: \"updated_at\", sortable: true },\n    ];\n\n    let items = ref([]);\n\n    onMounted(() => {});\n    return {\n      headers,\n      items,\n    };\n  },\n  mounted() {\n    this.getevents();\n    this.show_flag = true;\n  },\n  watch: {\n    selectedTable: {\n      handler(newVal) {\n        this.items = [];\n        switch (newVal) {\n          case \"events\":\n            this.headers = [\n              { text: \"event_id\", value: \"event_id\", sortable: true },\n              { text: \"theme\", value: \"theme\", sortable: true },\n              { text: \"states\", value: \"states\", sortable: true },\n              { text: \"area\", value: \"area\", sortable: true },\n              { text: \"start_at\", value: \"start_at\", sortable: true },\n              { text: \"name\", value: \"name\", sortable: true },\n              { text: \"status\", value: \"status\", sortable: true },\n              { text: \"payment_ratio\", value: \"payment_ratio\", sortable: true },\n              {\n                text: \"male_estimated_payment\",\n                value: \"male_estimated_payment\",\n                sortable: true,\n              },\n              {\n                text: \"female_estimated_payment\",\n                value: \"female_estimated_payment\",\n                sortable: true,\n              },\n              {\n                text: \"message_from_owner\",\n                value: \"message_from_owner\",\n                sortable: true,\n              },\n              { text: \"owner_user_id\", value: \"owner_user_id\", sortable: true },\n              {\n                text: \"participants_pattern\",\n                value: \"participants_pattern\",\n                sortable: true,\n              },\n              {\n                text: \"restaurant_url\",\n                value: \"restaurant_url\",\n                sortable: true,\n              },\n              {\n                text: \"male_participants_number\",\n                value: \"male_participants_number\",\n                sortable: true,\n              },\n              {\n                text: \"female_participants_number\",\n                value: \"female_participants_number\",\n                sortable: true,\n              },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n            ];\n            this.getevents();\n            break;\n          case \"friends\":\n            this.headers = [\n              { text: \"from_user_id\", value: \"from_user_id\", sortable: true },\n              { text: \"to_user_id\", value: \"to_user_id\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n            ];\n            this.getfriends();\n            break;\n          case \"users\":\n            this.headers = [\n              { text: \"user_id\", value: \"user_id\", sortable: true },\n              { text: \"name\", value: \"name\", sortable: true },\n              { text: \"age\", value: \"age\", sortable: true },\n              { text: \"gender\", value: \"gender\", sortable: true },\n              { text: \"state\", value: \"state\", sortable: true },\n              { text: \"phone_number\", value: \"phone_number\", sortable: true },\n              { text: \"bio\", value: \"bio\", sortable: true },\n              {\n                text: \"authentication_token\",\n                value: \"authentication_token\",\n                sortable: true,\n              },\n              {\n                text: \"firebase_token\",\n                value: \"firebase_token\",\n                sortable: true,\n              },\n              { text: \"device_uuid\", value: \"device_uuid\", sortable: true },\n              { text: \"close_reason\", value: \"close_reason\", sortable: true },\n              { text: \"invite_code\", value: \"invite_code\", sortable: true },\n              { text: \"birthday\", value: \"birthday\", sortable: true },\n              { text: \"blood_type\", value: \"blood_type\", sortable: true },\n              { text: \"height\", value: \"height\", sortable: true },\n              {\n                text: \"educational_background\",\n                value: \"educational_background\",\n                sortable: true,\n              },\n              { text: \"working_type\", value: \"working_type\", sortable: true },\n              { text: \"holiday\", value: \"holiday\", sortable: true },\n              { text: \"drink_type\", value: \"drink_type\", sortable: true },\n              { text: \"smoke_type\", value: \"smoke_type\", sortable: true },\n              { text: \"top_message\", value: \"top_message\", sortable: true },\n              { text: \"mail\", value: \"mail\", sortable: true },\n              { text: \"workplace\", value: \"workplace\", sortable: true },\n              {\n                text: \"graduated_from\",\n                value: \"graduated_from\",\n                sortable: true,\n              },\n              { text: \"annual_income\", value: \"annual_income\", sortable: true },\n              {\n                text: \"mail_unsubscribed\",\n                value: \"mail_unsubscribed\",\n                sortable: true,\n              },\n              { text: \"referral_code\", value: \"referral_code\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n            ];\n            this.getusers();\n            break;\n          case \"age_verifications\":\n            this.headers = [\n              {\n                text: \"verification_id\",\n                value: \"verification_id\",\n                sortable: true,\n              },\n              { text: \"user_id\", value: \"user_id\", sortable: true },\n              { text: \"image_url\", value: \"image_url\", sortable: true },\n              { text: \"status\", value: \"status\", sortable: true },\n              { text: \"memo\", value: \"memo\", sortable: true },\n              { text: \"updated_by\", value: \"update_by\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n            ];\n            this.getage_verifications();\n            break;\n          case \"user_photos\":\n            this.headers = [\n              { text: \"photo_id\", value: \"photo_id\", sortable: true },\n              { text: \"user_id\", value: \"user_id\", sortable: true },\n              { text: \"image_url\", value: \"image_url\", sortable: true },\n              { text: \"is_main\", value: \"is_main\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n            ];\n            this.getuser_photos();\n            break;\n          case \"chat_rooms\":\n            this.headers = [\n              { text: \"room_id\", value: \"room_id\", sortable: true },\n              { text: \"name\", value: \"name\", sortable: true },\n              { text: \"event_id\", value: \"event_id\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n            ];\n            this.getchat_rooms();\n            break;\n          case \"chat_room_user\":\n            this.headers = [\n              { text: \"room_id\", value: \"room_id\", sortable: true },\n              { text: \"user_id\", value: \"user_id\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n            ];\n            this.getchat_room_user();\n            break;\n          case \"messages\":\n            this.headers = [\n              { text: \"message_id\", value: \"message_id\", sortable: true },\n              { text: \"text\", value: \"text\", sortable: true },\n              { text: \"user_id\", value: \"user_id\", sortable: true },\n              { text: \"room_id\", value: \"room_id\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n            ];\n            this.getmessages();\n            break;\n          case \"theme\":\n            this.headers = [\n              { text: \"id\", value: \"id\", sortable: true },\n              { text: \"name\", value: \"name\", sortable: true },\n              { text: \"image_url\", value: \"image_url\", sortable: true },\n              { text: \"priority\", value: \"priority\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n            ];\n            this.gettheme();\n            break;\n          case \"participants\":\n            this.headers = [\n              {\n                text: \"participants_id\",\n                value: \"participants_id\",\n                sortable: true,\n              },\n              { text: \"event_id\", value: \"event_id\", sortable: true },\n              { text: \"user_id\", value: \"user_id\", sortable: true },\n              {\n                text: \"status\",\n                value: \"status\",\n                sortable: true,\n              },\n              { text: \"group_id\", value: \"group_id\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n            ];\n            this.getparticipants();\n            break;\n          case \"user_opinions\":\n            this.headers = [\n              { text: \"opinion_id\", value: \"opinion_id\", sortable: true },\n              { text: \"opinion_type\", value: \"opinion_type\", sortable: true },\n              {\n                text: \"return_address\",\n                value: \"return_address\",\n                sortable: true,\n              },\n              {\n                text: \"function_name\",\n                value: \"function_name\",\n                sortable: true,\n              },\n              { text: \"user_id\", value: \"user_id\", sortable: true },\n              { text: \"content\", value: \"content\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n            ];\n            this.getuser_opinions();\n            break;\n          case \"blocks\":\n            this.headers = [\n              { text: \"from_user_id\", value: \"from_user_id\", sortable: true },\n              { text: \"to_user_id\", value: \"to_user_id\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n            ];\n            this.getblocks();\n            break;\n          case \"areas\":\n            this.headers = [\n              { text: \"area_id\", value: \"area_id\", sortable: true },\n              { text: \"states\", value: \"states\", sortable: true },\n              { text: \"name\", value: \"name\", sortable: true },\n              { text: \"priority\", value: \"priority\", sortable: true },\n              { text: \"deleted_at\", value: \"deleted_at\", sortable: true },\n              { text: \"created_at\", value: \"created_at\", sortable: true },\n              { text: \"updated_at\", value: \"updated_at\", sortable: true },\n            ];\n            this.getareas();\n            break;\n        }\n        // this.dailycountSeries = [];\n        // this.getDiscordSummary();\n      },\n      deep: true,\n    },\n  },\n  data() {\n    return {\n      show_flag: false,\n      selectedTable: \"events\",\n      optionTables: [\n        { id: 1, name: \"events\" },\n        { id: 2, name: \"users\" },\n        { id: 3, name: \"age_verifications\" },\n        { id: 4, name: \"user_photos\" },\n        { id: 5, name: \"chat_rooms\" },\n        { id: 6, name: \"chat_room_user\" },\n        { id: 7, name: \"friends\" },\n        { id: 8, name: \"messages\" },\n        { id: 9, name: \"areas\" },\n        { id: 10, name: \"theme\" },\n        { id: 11, name: \"participants\" },\n        { id: 12, name: \"user_opinions\" },\n        { id: 13, name: \"blocks\" },\n      ],\n    };\n  },\n  computed: {},\n  methods: {\n    getusers() {\n      api\n        .getusers()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              user_id: response[\"data\"][i][\"user_id\"],\n              name: response[\"data\"][i][\"name\"],\n              age: response[\"data\"][i][\"age\"],\n              gender: response[\"data\"][i][\"gender\"],\n              state: response[\"data\"][i][\"state\"],\n              phone_number: response[\"data\"][i][\"phone_number\"],\n              bio: response[\"data\"][i][\"bio\"],\n              authentication_token: response[\"data\"][i][\"authentication_token\"],\n              firebase_token: response[\"data\"][i][\"firebase_token\"],\n              device_uuid: response[\"data\"][i][\"device_uuid\"],\n              close_reason: response[\"data\"][i][\"close_reason\"],\n              invite_code: response[\"data\"][i][\"invite_code\"],\n              birthday: response[\"data\"][i][\"birthday\"],\n              blood_type: response[\"data\"][i][\"blood_type\"],\n              height: response[\"data\"][i][\"height\"],\n              educational_background:\n                response[\"data\"][i][\"educational_background\"],\n              working_type: response[\"data\"][i][\"working_type\"],\n              holiday: response[\"data\"][i][\"holiday\"],\n              drink_type: response[\"data\"][i][\"drink_type\"],\n              smoke_type: response[\"data\"][i][\"smoke_type\"],\n              top_message: response[\"data\"][i][\"top_message\"],\n              mail: response[\"data\"][i][\"mail\"],\n              workplace: response[\"data\"][i][\"workplace\"],\n              graduated_from: response[\"data\"][i][\"graduated_from\"],\n              annual_income: response[\"data\"][i][\"annual_income\"],\n              mail_unsubscribed: response[\"data\"][i][\"mail_unsubscribed\"],\n              referral_code: response[\"data\"][i][\"referral_code\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getevents() {\n      api\n        .getevents()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              event_id: response[\"data\"][i][\"event_id\"],\n              theme: response[\"data\"][i][\"theme\"],\n              states: response[\"data\"][i][\"states\"],\n              area: response[\"data\"][i][\"area\"],\n              start_at: response[\"data\"][i][\"start_at\"],\n              name: response[\"data\"][i][\"name\"],\n              status: response[\"data\"][i][\"status\"],\n              payment_ratio: response[\"data\"][i][\"payment_ratio\"],\n              male_estimated_payment:\n                response[\"data\"][i][\"male_estimated_payment\"],\n              female_estimated_payment:\n                response[\"data\"][i][\"female_estimated_payment\"],\n              message_from_owner: response[\"data\"][i][\"message_from_owner\"],\n              owner_user_id: response[\"data\"][i][\"owner_user_id\"],\n              participants_pattern: response[\"data\"][i][\"participants_pattern\"],\n              restaurant_url: response[\"data\"][i][\"restaurant_url\"],\n              male_participants_number:\n                response[\"data\"][i][\"male_participants_number\"],\n              female_participants_number:\n                response[\"data\"][i][\"female_participants_number\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getage_verifications() {\n      api\n        .getage_verifications()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              verification_id: response[\"data\"][i][\"verification_id\"],\n              user_id: response[\"data\"][i][\"user_id\"],\n              image_url: response[\"data\"][i][\"image_url\"],\n              status: response[\"data\"][i][\"status\"],\n              memo: response[\"data\"][i][\"memo\"],\n              update_by: response[\"data\"][i][\"update_by\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getuser_photos() {\n      api\n        .getuser_photos()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              photo_id: response[\"data\"][i][\"photo_id\"],\n              user_id: response[\"data\"][i][\"user_id\"],\n              image_url: response[\"data\"][i][\"image_url\"],\n              is_main: response[\"data\"][i][\"is_main\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getchat_rooms() {\n      api\n        .getchat_rooms()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              room_id: response[\"data\"][i][\"room_id\"],\n              name: response[\"data\"][i][\"name\"],\n              event_id: response[\"data\"][i][\"event_id\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getchat_room_user() {\n      api\n        .getchat_room_user()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              room_id: response[\"data\"][i][\"room_id\"],\n              user_id: response[\"data\"][i][\"user_id\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getfriends() {\n      api\n        .getfriends()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              from_user_id: response[\"data\"][i][\"from_user_id\"],\n              to_user_id: response[\"data\"][i][\"to_user_id\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getmessages() {\n      api\n        .getmessages()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              message_id: response[\"data\"][i][\"message_id\"],\n              text: response[\"data\"][i][\"text\"],\n              user_id: response[\"data\"][i][\"user_id\"],\n              room_id: response[\"data\"][i][\"room_id\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getareas() {\n      api\n        .getareas()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              area_id: response[\"data\"][i][\"area_id\"],\n              states: response[\"data\"][i][\"states\"],\n              name: response[\"data\"][i][\"name\"],\n              priority: response[\"data\"][i][\"priority\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    gettheme() {\n      api\n        .gettheme()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              id: response[\"data\"][i][\"id\"],\n              name: response[\"data\"][i][\"name\"],\n              image_url: response[\"data\"][i][\"image_url\"],\n              priority: response[\"data\"][i][\"priority\"],\n              deleted_at: response[\"data\"][i][\"deleted_at\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getparticipants() {\n      api\n        .getparticipants()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              participants_id: response[\"data\"][i][\"participants_id\"],\n              event_id: response[\"data\"][i][\"event_id\"],\n              status: response[\"data\"][i][\"status\"],\n              group_id: response[\"data\"][i][\"group_id\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getuser_opinions() {\n      api\n        .getuser_opinions()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              opinion_id: response[\"data\"][i][\"opinion_id\"],\n              opinion_type: response[\"data\"][i][\"opinion_type\"],\n              return_address: response[\"data\"][i][\"return_address\"],\n              function_name: response[\"data\"][i][\"function_name\"],\n              user_id: response[\"data\"][i][\"user_id\"],\n              content: response[\"data\"][i][\"content\"],\n              updated_at: response[\"data\"][i][\"updated_at\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getblocks() {\n      api\n        .getblocks()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              from_user_id: response[\"data\"][i][\"from_user_id\"],\n              to_user_id: response[\"data\"][i][\"to_user_id\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n    getblocks() {\n      api\n        .getblocks()\n        .then((response) => {\n          for (let i = 0; i < response[\"data\"].length; i++) {\n            this.items.push({\n              from_user_id: response[\"data\"][i][\"from_user_id\"],\n              to_user_id: response[\"data\"][i][\"to_user_id\"],\n              created_at: response[\"data\"][i][\"created_at\"],\n            });\n          }\n        })\n        .catch(() => {\n          this.$toast.show(\"データの取得に失敗しました\", {\n            type: \"error\",\n            position: \"top-right\",\n            duration: 5000,\n          });\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}