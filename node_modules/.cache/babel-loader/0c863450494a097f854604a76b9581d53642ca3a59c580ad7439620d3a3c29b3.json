{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_vue_loading = _resolveComponent(\"vue-loading\");\n  var _component_router_view = _resolveComponent(\"router-view\");\n  return $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_vue_loading, {\n    type: \"bars\",\n    color: \"d9544e\",\n    size: {\n      width: '100px',\n      height: '100px'\n    }\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_router_view)]));\n}","map":{"version":3,"mappings":";;;;;;;;;;SACaA,aAAO,kBAAlBC,oBAMM,oBALJC,aAIeC;IAHbC,IAAI,EAAC,MAAM;IACXC,KAAK,EAAC,QAAQ;IACbC,IAAI,EAAE;MAAAC;MAAAC;IAAA;yBAGXP,oBAEM,oBADJC,aAAeO","names":["$data","_createElementBlock","_createVNode","_component_vue_loading","type","color","size","width","height","_component_router_view"],"sourceRoot":"","sources":["/Users/kazuaki.aihara/Documents/fuelcrypto-organizer/src/App.vue"],"sourcesContent":["<template>\n  <div v-if=\"loading\">\n    <vue-loading\n      type=\"bars\"\n      color=\"d9544e\"\n      :size=\"{ width: '100px', height: '100px' }\"\n    ></vue-loading>\n  </div>\n  <div v-else>\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport VueLoading from \"vue-loading-template\";\nexport default {\n  name: \"App\",\n  components: {\n    VueLoading,\n  },\n  data() {\n    return {\n      loading: true,\n    };\n  },\n  // mounted() {\n  //   setTimeout(() => {\n  //     this.loading = false;\n  //   }, 1000);\n  // },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}